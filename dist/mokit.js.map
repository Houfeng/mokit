{"version":3,"sources":["webpack:///mokit.js","webpack:///webpack/bootstrap 0b32f596f499ea9663d3","webpack:///./src/template/directive.js","webpack:///./node_modules/_ntils@2.1.2@ntils/index.js","webpack:///./src/events/index.js","webpack:///./node_modules/_cify@2.1.11@cify/index.js","webpack:///./src/template/scope.js","webpack:///./node_modules/_core-js@2.5.1@core-js/library/modules/_core.js","webpack:///./node_modules/_core-js@2.5.1@core-js/library/modules/_descriptors.js","webpack:///./node_modules/_core-js@2.5.1@core-js/library/modules/_to-iobject.js","webpack:///./src/template/index.js","webpack:///./src/template/expression.js","webpack:///./src/observer/index.js","webpack:///./node_modules/_core-js@2.5.1@core-js/library/modules/_global.js","webpack:///./node_modules/_core-js@2.5.1@core-js/library/modules/_is-object.js","webpack:///./node_modules/_core-js@2.5.1@core-js/library/modules/_fails.js","webpack:///./node_modules/_babel-runtime@6.26.0@babel-runtime/core-js/object/define-property.js","webpack:///./src/watcher/index.js","webpack:///./node_modules/_core-js@2.5.1@core-js/library/modules/_defined.js","webpack:///./node_modules/_core-js@2.5.1@core-js/library/modules/_has.js","webpack:///./node_modules/_core-js@2.5.1@core-js/library/modules/_to-integer.js","webpack:///./node_modules/_core-js@2.5.1@core-js/library/modules/_object-sap.js","webpack:///./node_modules/_core-js@2.5.1@core-js/library/modules/_export.js","webpack:///./node_modules/_core-js@2.5.1@core-js/library/modules/_object-dp.js","webpack:///./node_modules/_core-js@2.5.1@core-js/library/modules/_ie8-dom-define.js","webpack:///./node_modules/_core-js@2.5.1@core-js/library/modules/_to-primitive.js","webpack:///./node_modules/_core-js@2.5.1@core-js/library/modules/_property-desc.js","webpack:///./src/template/compiler.js","webpack:///./src/template/directives/index.js","webpack:///./src/component/component.js","webpack:///./src/component/components/index.js","webpack:///./src/index.js","webpack:////private/var/folders/7d/bf741r6j1psb64d_yd0zn_mh0000gn/T/$info-d78c3edd-0943-6fb6-1220-e0dbaf2aec03.json","webpack:///./node_modules/_babel-runtime@6.26.0@babel-runtime/core-js/object/keys.js","webpack:///./node_modules/_core-js@2.5.1@core-js/library/fn/object/keys.js","webpack:///./node_modules/_core-js@2.5.1@core-js/library/modules/es6.object.keys.js","webpack:///./node_modules/_core-js@2.5.1@core-js/library/modules/_to-object.js","webpack:///./node_modules/_core-js@2.5.1@core-js/library/modules/_object-keys.js","webpack:///./node_modules/_core-js@2.5.1@core-js/library/modules/_object-keys-internal.js","webpack:///./node_modules/_core-js@2.5.1@core-js/library/modules/_iobject.js","webpack:///./node_modules/_core-js@2.5.1@core-js/library/modules/_cof.js","webpack:///./node_modules/_core-js@2.5.1@core-js/library/modules/_array-includes.js","webpack:///./node_modules/_core-js@2.5.1@core-js/library/modules/_to-length.js","webpack:///./node_modules/_core-js@2.5.1@core-js/library/modules/_to-absolute-index.js","webpack:///./node_modules/_core-js@2.5.1@core-js/library/modules/_shared-key.js","webpack:///./node_modules/_core-js@2.5.1@core-js/library/modules/_shared.js","webpack:///./node_modules/_core-js@2.5.1@core-js/library/modules/_uid.js","webpack:///./node_modules/_core-js@2.5.1@core-js/library/modules/_enum-bug-keys.js","webpack:///./node_modules/_core-js@2.5.1@core-js/library/modules/_ctx.js","webpack:///./node_modules/_core-js@2.5.1@core-js/library/modules/_a-function.js","webpack:///./node_modules/_core-js@2.5.1@core-js/library/modules/_hide.js","webpack:///./node_modules/_core-js@2.5.1@core-js/library/modules/_an-object.js","webpack:///./node_modules/_core-js@2.5.1@core-js/library/modules/_dom-create.js","webpack:///./node_modules/_babel-runtime@6.26.0@babel-runtime/core-js/object/get-own-property-descriptor.js","webpack:///./node_modules/_core-js@2.5.1@core-js/library/fn/object/get-own-property-descriptor.js","webpack:///./node_modules/_core-js@2.5.1@core-js/library/modules/es6.object.get-own-property-descriptor.js","webpack:///./node_modules/_core-js@2.5.1@core-js/library/modules/_object-gopd.js","webpack:///./node_modules/_core-js@2.5.1@core-js/library/modules/_object-pie.js","webpack:///./node_modules/_core-js@2.5.1@core-js/library/fn/object/define-property.js","webpack:///./node_modules/_core-js@2.5.1@core-js/library/modules/es6.object.define-property.js","webpack:///./src/template/directives/text.js","webpack:///./src/template/directives/each.js","webpack:///./src/template/directives/if.js","webpack:///./src/template/directives/prop.js","webpack:///./src/template/directives/attr.js","webpack:///./src/template/directives/on.js","webpack:///./src/template/directives/inner-html.js","webpack:///./src/template/directives/inner-text.js","webpack:///./src/template/directives/prevent.js","webpack:///./src/template/directives/id.js","webpack:///./src/template/directives/cloak.js","webpack:///./src/template/directives/show.js","webpack:///./src/template/directives/model/index.js","webpack:///./src/template/directives/model/select.js","webpack:///./src/template/directives/model/editable.js","webpack:///./src/template/directives/model/input.js","webpack:///./src/template/directives/model/radio.js","webpack:///./src/template/directives/model/checkbox.js","webpack:///./src/template/directives/model/prop.js","webpack:///./src/template/directives/focus.js","webpack:///./src/template/directives/attribute.js","webpack:///./src/template/template.js","webpack:///./src/component/index.js","webpack:///./src/component/component-directive.js","webpack:///./src/component/components/view.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","Directive","classOptions","type","TA","level","LG","DirectiveClass","Class","$extends","constructor","instanceOptions","utils","copy","this","options","bind","noop","execute","scope","TE","update","newValue","literal","attribute","value","expression","deepEqual","_value_","unbind","Expression","setPrototypeOf","LP","LS","LE","LA","LC","ntils","isNull","obj","trim","str","replace","str1","str2","RegExp","startWith","indexOf","contains","endWith","length","has","hasProperty","isFunction","isString","String","isNumber","Number","isBoolean","Boolean","isElement","window","Element","tagName","nodeType","nodeName","attributes","ownerDocument","isText","Text","isObject","isArray","v1","toString","v2","Array","v3","splice","v4","isDate","val","Date","isRegexp","toArray","array","slice","toDate","self","each","list","handler","listLength","rs","key","formatDate","date","format","dict","placeholder","M+","getMonth","d+","getDate","h+","getHours","m+","getMinutes","s+","getSeconds","w+","getDay","q+","Math","floor","S","getMilliseconds","test","$1","getFullYear","substr","src","dst","igonres","getOwnPropertyDescriptor","ex","clone","objClone","forEach","defineFreezeProp","mix","mode","igonreNull","keys","writable","err","push","create","proto","props","Cotr","__proto__","getPrototypeOf","a","b","aKeys","bKeys","allKeys","concat","checkedMap","result","fromTo","fromNum","toNum","step","abs","newGuid","S4","random","substring","map","fn","buffer","setByPath","path","split","index","getByPath","unique","newArray","getFunctionArgumentNames","parts","filter","short","maxLength","strLength","trimLength","firstUpper","toUpperCase","escapeRegExp","parseDom","_PDD_","document","createElement","innerHTML","firstNode","childNodes","cloneNode","EventEmitter","Function","target","emitter","_emitter_","_isNative_","_isNativeObject","_target_","_listeners_","on","$on","$addListener","addListener","off","$off","$removeListener","removeListener","$emit","emit","addEventListener","removeEventListener","dispatchEvent","listener","capture","_addNativeEventListener","_maxListeners","Error","_removeNativeEventListener","_listener","data","canBubble","cancelAble","_emitNativeEvent","stopPropagation","descriptor","_events","event","createEvent","initEvent","register","names","ClassFactory","$name","$static","superPrototype","$super","_super_called_","_super_ret_","apply","arguments","$extend","Scope","parent","core","version","__e","IObject","defined","it","Compiler","Template","directives","code","func","_compileMixedCode","_compileCode","_escapeEOL","_wrapCode","_createFunction","statements","_parseMixedCode","join","token","isExpr","tokens","char","nextChar","_escapeCode","_interopRequireDefault","default","_keys","_keys2","_getOwnPropertyDescriptor","_getOwnPropertyDescriptor2","_defineProperty","_defineProperty2","IGNORE_REGEXPS","Observer","observer","set","isIgnore","shadow","oldValue","childObserver","addChild","removeChild","emitChange","_wrapArray","_getPropertyNames","clearReference","child","dispatch","eventName","_src_","_layer_","parents","item","parentEvent","root","foundIndex","pop","shift","startIndex","endIndex","items","observe","word","some","re","global","__g","exec","e","Watcher","calcor","first","calc","force","undefined","TypeError","ceil","isNaN","$export","fails","KEY","exp","F","ctx","hide","source","own","out","IS_FORCED","IS_GLOBAL","G","IS_STATIC","IS_PROTO","P","IS_BIND","B","IS_WRAP","W","expProto","C","virtual","R","U","anObject","IE8_DOM_DEFINE","toPrimitive","dP","f","O","Attributes","valueOf","bitmap","commonDirectives","prefix","elementDirectives","attributeDirectives","registerDirectives","toCamelCase","toLowerCase","toSplitCase","directive","fullName","_parseAttrInfo","attrName","_this","info","decorates","_createDirectiveInstance","compiler","_bindHandler","sort","boundDirectives","remove","node","removeAttribute","final","_compileElement","ElementDirective","_compileAttributes","attrInfo","AttrDirective","directiveOptions","mixed","_compileChildren","childNode","_compiled_","childHandler","compile","children","dispose","element","#text","if","prop","attr","html","text","prevent","id","cloak","show","model","focus","*","Component","classOpts","mixes","extendComponent","extend","mixedClassOpts","mixItem","$options","ComponentClass","instanceOpts","$class","_onTemplateUpdate_","_createdData_","_createProperties_","properties","_createWatches_","watches","watch","$directives","_importDirectives_","$components","_importComponents_","components","$setParent","$callHook","$mount","$compile","$parent","$removeChild","$addChild","$children","$root","component","ComponentDirective","args","hook","$data","$properties","_observer_","_watchers_","$watch","watcher","calcer","$unWatch","findIndex","w","_createElement_","_created_","$template","$element","_template_","deferReady","mountNode","append","_mounted_","$substitute","_mountNode","appendChild","parentNode","insertBefore","_removed_","$appendTo","$remove","$dispatch","$broadcast","$dispose","template","methods","start","View","_$info","_$info2","_ntils","_ntils2","_cify","_cify2","_watcher","_watcher2","_observer","_observer2","_template","_template2","_component","_component2","_events2","use","plugin","install","toObject","$keys","enumBugKeys","toIObject","arrayIndexOf","IE_PROTO","cof","propertyIsEnumerable","toLength","toAbsoluteIndex","IS_INCLUDES","$this","el","fromIndex","toInteger","min","max","shared","uid","store","px","aFunction","that","createDesc","is","$Object","$getOwnPropertyDescriptor","pIE","gOPD","desc","expr","nodeValue","createTextNode","parseExpr","eachItems","eachType","fnText","keyName","valueName","currentEachKeys","itemsFragment","createDocumentFragment","eachTarget","newScope","oldItem","newItem","k","_handler","$target","setAttribute","attrValue","eventTarget","emiter","$event","innerText","style","display","SelectDirective","EditableDirective","InputDirective","RadioDirective","CheckboxDirective","PropDirective","getAttribute","isContentEditable","backExpr","selectedOptions","multiple","option","selected","checked","bindProp","state","setTimeout","blur","computedName","computedValue","nameExpr","valueExpr","newComputedName","newComputeValue","render","_update","_updateTimer","clearTimeout","_onBind","_bound","disableFirst","$self","handleAttrs","handleContents","attrs","directiveRegexp","placeHandlers","querySelectorAll","place","contents","selector","content","_ready_","_transitioning","newComponentInstance","oldComponentInstance","componentInstance","transition","prep","go","_Component","_transition","clean","init","switchTo","newComponent","oldComponent","done"],"mappings":"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","file":"./mokit.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 29);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Class = __webpack_require__(3);\nvar utils = __webpack_require__(1);\nvar Expression = __webpack_require__(9);\n\n/**\n * 指令定义工场函数\n * @param {Object} classOptions 选项\n * @returns {Directive} 指令类\n */\nfunction Directive(classOptions) {\n  //处理指令选项\n  classOptions = classOptions || {};\n  classOptions.type = classOptions.type || Directive.TA;\n  classOptions.level = classOptions.level || Directive.LG;\n\n  //生成指令类\n  var DirectiveClass = new Class({\n\n    $extends: classOptions,\n    //指令构建函数\n    constructor: function /*istanbul ignore next*/constructor(instanceOptions) {\n      utils.copy(instanceOptions, this);\n    },\n    //挂载实例上的 options\n    options: classOptions,\n    //挂载实例核心方法\n    bind: classOptions.bind || utils.noop,\n    execute: classOptions.execute || function (scope) {\n      this.scope = scope;\n      if (this.options.type === Directive.TE) {\n        return this.update();\n      }\n      var newValue = this.options.literal ? this.attribute.value : this.expression.execute(scope);\n      if (!utils.deepEqual(this._value_, newValue)) {\n        this.update(newValue, this._value_);\n        this._value_ = newValue;\n      }\n    },\n    update: classOptions.update || utils.noop,\n    unbind: classOptions.unbind || utils.noop,\n    //挂载指令常用的类型\n    utils: utils,\n    Expression: Expression\n  });\n  //向指令类添加「指令定义信息」\n  DirectiveClass.options = classOptions;\n  utils.setPrototypeOf(DirectiveClass, classOptions);\n  return DirectiveClass;\n}\n\n//指令类型\nDirective.TA = 'A';\nDirective.TE = 'E';\n\n//指令级别\nDirective.LP = 3000; //prevent\nDirective.LS = 2000; //statement\nDirective.LE = 1000; //eleemtn\nDirective.LG = 0; //general\nDirective.LA = -1000; //any attribute\nDirective.LC = -2000; //cloak\n\nmodule.exports = Directive;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n(function (ntils) {\n\n  /**\n   * 空函数\n   */\n  ntils.noop = function () { };\n\n  /**\n   * 验证一个对象是否为NULL\n   * @method isNull\n   * @param  {Object}  obj 要验证的对象\n   * @return {Boolean}     结果\n   * @static\n   */\n  ntils.isNull = function (obj) {\n    return obj === null || typeof obj === \"undefined\";\n  };\n\n  /**\n   * 除去字符串两端的空格\n   * @method trim\n   * @param  {String} str 源字符串\n   * @return {String}     结果字符串\n   * @static\n   */\n  ntils.trim = function (str) {\n    if (this.isNull(str)) return str;\n    if (str.trim) {\n      return str.trim();\n    } else {\n      return str.replace(/(^[\\\\s]*)|([\\\\s]*$)/g, \"\");\n    }\n  };\n\n  /**\n   * 替换所有\n   * @method replace\n   * @param {String} str 源字符串\n   * @param {String} str1 要替换的字符串\n   * @param {String} str2 替换为的字符串\n   * @static\n   */\n  ntils.replace = function (str, str1, str2) {\n    if (this.isNull(str)) return str;\n    return str.replace(new RegExp(str1, 'g'), str2);\n  };\n\n  /**\n   * 从字符串开头匹配\n   * @method startWith\n   * @param {String} str1 源字符串\n   * @param {String} str2 要匹配的字符串\n   * @return {Boolean} 匹配结果\n   * @static\n   */\n  ntils.startWith = function (str1, str2) {\n    if (this.isNull(str1) || this.isNull(str2)) return false;\n    return str1.indexOf(str2) === 0;\n  };\n\n  /**\n   * 是否包含\n   * @method contains\n   * @param {String} str1 源字符串\n   * @param {String} str2 检查包括字符串\n   * @return {Boolean} 结果\n   * @static\n   */\n  ntils.contains = function (str1, str2) {\n    var self = this;\n    if (this.isNull(str1) || this.isNull(str2)) return false;\n    return str1.indexOf(str2) > -1;\n  };\n\n  /**\n   * 从字符串结束匹配\n   * @method endWidth\n   * @param {String} str1 源字符串\n   * @param {String} str2 匹配字符串\n   * @return {Boolean} 匹配结果\n   * @static\n   */\n  ntils.endWith = function (str1, str2) {\n    if (this.isNull(str1) || this.isNull(str2)) return false;\n    return str1.indexOf(str2) === (str1.length - str2.length);\n  };\n\n  /**\n   * 是否包含属性\n   * @method hasProperty\n   * @param  {Object}  obj  对象\n   * @param  {String}  name 属性名\n   * @return {Boolean}      结果\n   * @static\n   */\n  ntils.has = ntils.hasProperty = function (obj, name) {\n    if (this.isNull(obj) || this.isNull(name)) return false;\n    return (name in obj) || (obj.hasOwnProperty(name));\n  };\n\n  /**\n   * 验证一个对象是否为Function\n   * @method isFunction\n   * @param  {Object}  obj 要验证的对象\n   * @return {Boolean}     结果\n   * @static\n   */\n  ntils.isFunction = function (obj) {\n    if (this.isNull(obj)) return false;\n    return typeof obj === \"function\";\n  };\n\n  /**\n   * 验证一个对象是否为String\n   * @method isString\n   * @param  {Object}  obj 要验证的对象\n   * @return {Boolean}     结果\n   * @static\n   */\n  ntils.isString = function (obj) {\n    if (this.isNull(obj)) return false;\n    return typeof obj === 'string' || obj instanceof String;\n  };\n\n  /**\n   * 验证一个对象是否为Number\n   * @method isNumber\n   * @param  {Object}  obj 要验证的对象\n   * @return {Boolean}     结果\n   * @static\n   */\n  ntils.isNumber = function (obj) {\n    if (this.isNull(obj)) return false;\n    return typeof obj === 'number' || obj instanceof Number;\n  };\n\n  /**\n   * 验证一个对象是否为Boolean\n   * @method isBoolean\n   * @param  {Object}  obj 要验证的对象\n   * @return {Boolean}     结果\n   * @static\n   */\n  ntils.isBoolean = function (obj) {\n    if (this.isNull(obj)) return false;\n    return typeof obj === 'boolean' || obj instanceof Boolean;\n  };\n\n  /**\n   * 验证一个对象是否为HTML Element\n   * @method isElement\n   * @param  {Object}  obj 要验证的对象\n   * @return {Boolean}     结果\n   * @static\n   */\n  ntils.isElement = function (obj) {\n    if (this.isNull(obj)) return false;\n    if (window.Element) {\n      return obj instanceof Element;\n    } else {\n      return (obj.tagName && obj.nodeType && obj.nodeName && obj.attributes && obj.ownerDocument);\n    }\n  };\n\n  /**\n   * 验证一个对象是否为HTML Text Element\n   * @method isText\n   * @param  {Object}  obj 要验证的对象\n   * @return {Boolean}     结果\n   * @static\n   */\n  ntils.isText = function (obj) {\n    if (this.isNull(obj)) return false;\n    return obj instanceof Text;\n  };\n\n  /**\n   * 验证一个对象是否为Object\n   * @method isObject\n   * @param  {Object}  obj 要验证的对象\n   * @return {Boolean}     结果\n   * @static\n   */\n  ntils.isObject = function (obj) {\n    if (this.isNull(obj)) return false;\n    return typeof obj === \"object\";\n  };\n\n  /**\n   * 验证一个对象是否为Array或伪Array\n   * @method isArray\n   * @param  {Object}  obj 要验证的对象\n   * @return {Boolean}     结果\n   * @static\n   */\n  ntils.isArray = function (obj) {\n    if (this.isNull(obj)) return false;\n    var v1 = Object.prototype.toString.call(obj) === '[object Array]';\n    var v2 = obj instanceof Array;\n    var v3 = !this.isString(obj) && this.isNumber(obj.length) && this.isFunction(obj.splice);\n    var v4 = !this.isString(obj) && this.isNumber(obj.length) && obj[0];\n    return v1 || v2 || v3 || v4;\n  };\n\n  /**\n   * 验证是不是一个日期对象\n   * @method isDate\n   * @param {Object} val   要检查的对象\n   * @return {Boolean}           结果\n   * @static\n   */\n  ntils.isDate = function (val) {\n    if (this.isNull(val)) return false;\n    return val instanceof Date;\n  };\n\n  /**\n   * 验证是不是一个正则对象\n   * @method isDate\n   * @param {Object} val   要检查的对象\n   * @return {Boolean}           结果\n   * @static\n   */\n  ntils.isRegexp = function (val) {\n    return val instanceof RegExp;\n  };\n\n  /**\n   * 转换为数组\n   * @method toArray\n   * @param {Array|Object} array 伪数组\n   * @return {Array} 转换结果数组\n   * @static\n   */\n  ntils.toArray = function (array) {\n    if (this.isNull(array)) return [];\n    return Array.prototype.slice.call(array);\n  };\n\n  /**\n   * 转为日期格式\n   * @method toDate\n   * @param {Number|String} val 日期字符串或整型数值\n   * @return {Date} 日期对象\n   * @static\n   */\n  ntils.toDate = function (val) {\n    var self = this;\n    if (self.isNumber(val))\n      return new Date(val);\n    else if (self.isString(val))\n      return new Date(self.replace(self.replace(val, '-', '/'), 'T', ' '));\n    else if (self.isDate(val))\n      return val;\n    else\n      return null;\n  };\n\n  /**\n   * 遍历一个对像或数组\n   * @method each\n   * @param  {Object or Array}   obj  要遍历的数组或对象\n   * @param  {Function} fn            处理函数\n   * @return {void}                   无返回值\n   * @static\n   */\n  ntils.each = function (list, handler, scope) {\n    if (this.isNull(list) || this.isNull(handler)) return;\n    if (this.isArray(list)) {\n      var listLength = list.length;\n      for (var i = 0; i < listLength; i++) {\n        var rs = handler.call(scope || list[i], i, list[i]);\n        if (!this.isNull(rs)) return rs;\n      }\n    } else {\n      for (var key in list) {\n        var rs = handler.call(scope || list[key], key, list[key]);\n        if (!this.isNull(rs)) return rs;\n      }\n    }\n  };\n\n  /**\n   * 格式化日期\n   * @method formatDate\n   * @param {Date|String|Number} date 日期\n   * @param {String} format 格式化字符串\n   * @param {object} dict 反译字典\n   * @return {String} 格式化结果\n   * @static\n   */\n  ntils.formatDate = function (date, format, dict) {\n    if (this.isNull(format) || this.isNull(date)) return date;\n    date = this.toDate(date);\n    dict = dict || {};\n    var placeholder = {\n      \"M+\": date.getMonth() + 1, //month\n      \"d+\": date.getDate(), //day\n      \"h+\": date.getHours(), //hour\n      \"m+\": date.getMinutes(), //minute\n      \"s+\": date.getSeconds(), //second\n      \"w+\": date.getDay(), //week\n      \"q+\": Math.floor((date.getMonth() + 3) / 3), //quarter\n      \"S\": date.getMilliseconds() //millisecond\n    }\n    if (/(y+)/.test(format)) {\n      format = format.replace(RegExp.$1, (date.getFullYear() + \"\").substr(4 - RegExp.$1.length));\n    }\n    for (var key in placeholder) {\n      if (new RegExp(\"(\" + key + \")\").test(format)) {\n        var value = placeholder[key];\n        value = dict[value] || value;\n        format = format.replace(RegExp.$1, RegExp.$1.length == 1\n          ? value : (\"00\" + value).substr((\"\" + value).length));\n      }\n    }\n    return format;\n  };\n\n  /**\n   * 拷贝对象\n   * @method copy\n   * @param {Object} src 源对象\n   * @param {Object} dst 目标对象\n   * @static\n   */\n  ntils.copy = function (src, dst, igonres) {\n    dst = dst || (this.isArray(src) ? [] : {});\n    this.each(src, function (key) {\n      if (igonres && igonres.indexOf(key) > -1) return;\n      delete dst[key];\n      if (Object.getOwnPropertyDescriptor) {\n        try {\n          Object.defineProperty(dst, key, Object.getOwnPropertyDescriptor(src, key));\n        } catch (ex) {\n          dst[key] = src[key];\n        }\n      } else {\n        dst[key] = src[key];\n      }\n    })\n    return dst;\n  };\n\n  /**\n   * 深度克隆对象\n   * @method clone\n   * @param {Object} src 源对象\n   * @return {Object} 新对象\n   * @static\n   */\n  ntils.clone = function (src, igonres) {\n    if (this.isNull(src) ||\n      this.isString(src) ||\n      this.isNumber(src) ||\n      this.isBoolean(src) ||\n      this.isDate(src)) {\n      return src;\n    }\n    var objClone = src;\n    try {\n      objClone = new src.constructor();\n    } catch (ex) { }\n    this.each(src, function (key, value) {\n      if (objClone[key] != value && !this.contains(igonres, key)) {\n        if (this.isObject(value)) {\n          objClone[key] = this.clone(value, igonres);\n        } else {\n          objClone[key] = value;\n        }\n      }\n    }, this);\n    ['toString', 'valueOf'].forEach(function (key) {\n      if (this.contains(igonres, key)) return;\n      this.defineFreezeProp(objClone, key, src[key]);\n    }, this);\n    return objClone;\n  };\n\n  /**\n   * 合并对象\n   * @method mix\n   * @return 合并后的对象\n   * @param {Object} dst 目标对象\n   * @param {Object} src 源对象\n   * @param {Array} igonres 忽略的属性名,\n   * @param {Number} mode 模式\n   */\n  ntils.mix = function (dst, src, igonres, mode, igonreNull) {\n    //根据模式来判断，默认是Obj to Obj的  \n    if (mode) {\n      switch (mode) {\n        case 1: // proto to proto  \n          return ntils.mix(dst.prototype, src.prototype, igonres, 0);\n        case 2: // object to object and proto to proto  \n          ntils.mix(dst.prototype, src.prototype, igonres, 0);\n          break; // pass through  \n        case 3: // proto to static  \n          return ntils.mix(dst, src.prototype, igonres, 0);\n        case 4: // static to proto  \n          return ntils.mix(dst.prototype, src, igonres, 0);\n        default: // object to object is what happens below  \n      }\n    }\n    //---\n    src = src || {};\n    dst = dst || (this.isArray(src) ? [] : {});\n    this.keys(src).forEach(function (key) {\n      if (this.contains(igonres, key)) return;\n      if (igonreNull && this.isNull(src[key])) return;\n      if (this.isObject(src[key]) &&\n        (src[key].constructor == Object ||\n          src[key].constructor == Array ||\n          src[key].constructor == null)) {\n        dst[key] = ntils.mix(dst[key], src[key], igonres, 0, igonreNull);\n      } else {\n        dst[key] = src[key];\n      }\n    }, this);\n    return dst;\n  };\n\n  /**\n   * 定义不可遍历的属性\n   **/\n  ntils.defineFreezeProp = function (obj, name, value) {\n    try {\n      Object.defineProperty(obj, name, {\n        value: value,\n        enumerable: false,\n        configurable: true, //能不能重写定义\n        writable: false //能不能用「赋值」运算更改\n      });\n    } catch (err) {\n      obj[name] = value;\n    }\n  };\n\n  /**\n   * 获取所有 key \n   */\n  ntils.keys = function (obj) {\n    if (Object.keys) return Object.keys(obj);\n    var keys = [];\n    this.each(obj, function (key) {\n      keys.push(key);\n    });\n    return keys;\n  };\n\n  /**\n   * 创建一个对象\n   */\n  ntils.create = function (proto, props) {\n    if (Object.create) return Object.create(proto, props);\n    var Cotr = function () { };\n    Cotr.prototype = proto;\n    var obj = new Cotr();\n    if (props) this.copy(props, obj);\n    return obj;\n  };\n\n  /**\n   * 设置 proto\n   * 在不支持 setPrototypeOf 也不支持 __proto__ 的浏览器\n   * 中，会采用 copy 方式\n   */\n  ntils.setPrototypeOf = function (obj, proto) {\n    if (Object.setPrototypeOf) {\n      return Object.setPrototypeOf(obj, proto || this.create(null));\n    } else {\n      if (!('__proto__' in Object)) this.copy(proto, obj);\n      obj.__proto__ = proto;\n    }\n  };\n\n  /**\n   * 获取 proto\n   */\n  ntils.getPrototypeOf = function (obj) {\n    if (obj.__proto__) return obj.__proto__;\n    if (Object.getPrototypeOf) return Object.getPrototypeOf(obj);\n    if (obj.constructor) return obj.constructor.prototype;\n  };\n\n  /**\n   * 是否深度相等\n   */\n  ntils.deepEqual = function (a, b) {\n    if (a === b) return true;\n    if (!this.isObject(a) || !this.isObject(b)) return false;\n    var aKeys = this.keys(a);\n    var bKeys = this.keys(b);\n    if (aKeys.length !== bKeys.length) return false;\n    var allKeys = aKeys.concat(bKeys);\n    var checkedMap = this.create(null);\n    var result = true;\n    this.each(allKeys, function (i, key) {\n      if (checkedMap[key]) return;\n      if (!this.deepEqual(a[key], b[key])) result = false;\n      checkedMap[key] = true;\n    }, this);\n    return result;\n  };\n\n  /**\n   * 从一个数值循环到别一个数\n   * @param {number} fromNum 开始数值\n   * @param {Number} toNum 结束数值\n   * @param {Number} step 步长值\n   * @param {function} handler 执行函数\n   * @returns {void} 无返回\n   */\n  ntils.fromTo = function (fromNum, toNum, step, handler) {\n    if (!handler) handler = [step, step = handler][0];\n    step = Math.abs(step || 1);\n    if (fromNum < toNum) {\n      for (var i = fromNum; i <= toNum; i += step) handler(i);\n    } else {\n      for (var i = fromNum; i >= toNum; i -= step) handler(i);\n    }\n  };\n\n  /**\n   * 生成一个Guid\n   * @method newGuid\n   * @return {String} GUID字符串\n   * @static\n   */\n  ntils.newGuid = function () {\n    var S4 = function () {\n      return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\n    };\n    return (S4() + S4() + \"-\" + S4() + \"-\" + S4() + \"-\" + S4() + \"-\" + S4() + S4() + S4());\n  };\n\n  /**\n   * 对象变换\n   **/\n  ntils.map = function (list, fn) {\n    var buffer = this.isArray(list) ? [] : {};\n    this.each(list, function (name, value) {\n      buffer[name] = fn(name, value);\n    });\n    return buffer;\n  };\n\n  /**\n   * 通过路径设置属性值\n   */\n  ntils.setByPath = function (obj, path, value) {\n    if (this.isNull(obj) || this.isNull(path) || path === '') {\n      return;\n    }\n    if (!this.isArray(path)) {\n      path = path.replace(/\\[/, '.').replace(/\\]/, '.').split('.');\n    }\n    this.each(path, function (index, name) {\n      if (this.isNull(name) || name.length < 1) return;\n      if (index === path.length - 1) {\n        obj[name] = value;\n      } else {\n        obj[name] = obj[name] || {};\n        obj = obj[name];\n      }\n    }, this);\n  };\n\n  /**\n   * 通过路径获取属性值\n   */\n  ntils.getByPath = function (obj, path) {\n    if (this.isNull(obj) || this.isNull(path) || path === '') {\n      return obj;\n    }\n    if (!this.isArray(path)) {\n      path = path.replace(/\\[/, '.').replace(/\\]/, '.').split('.');\n    }\n    this.each(path, function (index, name) {\n      if (this.isNull(name) || name.length < 1) return;\n      if (!this.isNull(obj)) obj = obj[name];\n    }, this);\n    return obj;\n  };\n\n  /**\n   * 数组去重\n   **/\n  ntils.unique = function (array) {\n    if (this.isNull(array)) return array;\n    var newArray = [];\n    this.each(array, function (i, value) {\n      if (newArray.indexOf(value) > -1) return;\n      newArray.push(value);\n    });\n    return newArray;\n  };\n\n  /**\n   * 解析 function 的参数列表\n   **/\n  ntils.getFunctionArgumentNames = function (fn) {\n    if (!fn) return [];\n    var src = fn.toString();\n    var parts = src.split(')')[0].split('=>')[0].split('(');\n    return (parts[1] || parts[0]).split(',').map(function (name) {\n      return name.trim();\n    }).filter(function (name) {\n      return name != 'function';\n    });\n  };\n\n  /**\n   * 缩短字符串\n   */\n  ntils.short = function (str, maxLength) {\n    if (!str) return str;\n    maxLength = maxLength || 40;\n    var strLength = str.length;\n    var trimLength = maxLength / 2;\n    return strLength > maxLength ? str.substr(0, trimLength) + '...' + str.substr(strLength - trimLength) : str;\n  };\n\n  /**\n   * 首字母大写\n   */\n  ntils.firstUpper = function (str) {\n    if (this.isNull(str)) return;\n    return str.substring(0, 1).toUpperCase() + str.substring(1);\n  };\n\n  /**\n   * 编码正则字符串\n   */\n  ntils.escapeRegExp = function (str) {\n    return str.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n  };\n\n  /**\n   * 解析字符串为 dom \n   * @param {string} str 字符串\n   * @returns {HTMLNode} 解析后的 DOM \n   */\n  ntils.parseDom = function (str) {\n    this._PDD_ = this._PDD_ || document.createElement('div');\n    this._PDD_.innerHTML = ntils.trim(str);\n    var firstNode = this._PDD_.childNodes[0];\n    //先 clone 一份再通过 innerHTML 清空\n    //否则 IE9 下，清空时会导出返回的 DOM 没有子结点\n    if (firstNode) firstNode = firstNode.cloneNode(true);\n    this._PDD_.innerHTML = '';\n    return firstNode;\n  };\n\n})(( false) ? (window.ntils = {}) : exports);\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar utils = __webpack_require__(1);\nvar Class = __webpack_require__(3);\n\n/**\n * 事件触发器基类\n */\nvar EventEmitter = new Class({\n  $extends: Function,\n\n  /**\n   * 构建一个一个事修的触发器对象\n   * @param {object} target 将代理的目标对象可以省略\n   * @returns {void} 无返回\n   */\n  constructor: function /*istanbul ignore next*/constructor(target) {\n    target = target || this;\n    var emitter = target._emitter_;\n    if (emitter) return emitter;\n    utils.defineFreezeProp(this, '_target_', target);\n    utils.defineFreezeProp(target, '_emitter_', this);\n    this._isNative_ = this._isNativeObject(this._target_);\n    this._listeners_ = this._listeners_ || {};\n    this.on = this.$on = this.$addListener = this.addListener;\n    this.off = this.$off = this.$removeListener = this.removeListener;\n    this.$emit = this.emit;\n  },\n\n  /**\n   * 检查是否原生支持事件\n   * @param {object} obj 对象\n   * @returns {void} 检查结果\n   */\n  _isNativeObject: function /*istanbul ignore next*/_isNativeObject(obj) {\n    return obj.addEventListener && obj.removeEventListener && obj.dispatchEvent;\n  },\n\n  /**\n   * 添加一个事件监听函数\n   * @param {string} name 事件名称\n   * @param {function} listener 事件处理函数\n   * @param {capture} capture 是否是捕获阶段事件(只在代理 dom 对象时有效)\n   * @returns {void} 无返回\n   */\n  addListener: function /*istanbul ignore next*/addListener(name, listener, capture) {\n    if (this._isNative_) {\n      this._addNativeEventListener(name, listener, capture);\n    }\n    this._listeners_[name] = this._listeners_[name] || [];\n    this._listeners_[name].push(listener);\n    if (this._listeners_[name].length > EventEmitter._maxListeners) {\n      throw new Error('The `' + name + '` event listener is not more than 10');\n    }\n  },\n\n  /**\n   * 移除「一个/一组/所有」事件监听函数\n   * @param {string} name 事件名称\n   * @param {function} listener 事件处理函数\n   * @param {capture} capture 是否是捕获阶段事件(只在代理 dom 对象时有效)\n   * @returns {void} 无返回\n   */\n  removeListener: function /*istanbul ignore next*/removeListener(name, listener, capture) {\n    if (name && listener) {\n      if (this._isNative_) {\n        this._removeNativeEventListener(name, listener, capture);\n      }\n      if (!this._listeners_[name]) return;\n      var index = this._listeners_[name].indexOf(listener);\n      this._listeners_[name].splice(index, 1);\n    } else if (name) {\n      if (this._isNative_ && this._listeners_[name]) {\n        this._listeners_[name].forEach(function (_listener) {\n          this.removeListener(name, _listener, capture);\n        }, this);\n      }\n      delete this._listeners_[name];\n    } else {\n      utils.each(this._listeners_, function (name) {\n        this.removeListener(name, null, capture);\n      }, this);\n      this._listeners_ = {};\n    }\n  },\n\n  /**\n   * 触发自身的一个事件\n   * @param {string} name 事件名称\n   * @param {object} data 传递的对象\n   * @param {string} canBubble 能否冒泡(只在代理 dom 对象时有效)\n   * @param {object} cancelAble 能否取消(只在代理 dom 对象时有效)\n   * @returns {void} 无返回\n   */\n  emit: function /*istanbul ignore next*/emit(name, data, canBubble, cancelAble) {\n    if (this._isNative_) {\n      return this._emitNativeEvent(name, data, canBubble, cancelAble);\n    }\n    if (!this._listeners_[name]) return;\n    var stopPropagation = false;\n    this._listeners_[name].forEach(function (handler) {\n      var rs = handler.call(this._target_, data);\n      if (rs === false) stopPropagation = true;\n    }, this);\n    return stopPropagation;\n  },\n\n  /**\n   * 添加 DOM 元素事件\n   * @param {string} name 事件名称\n   * @param {function} listener 事件处理函数\n   * @param {capture} capture 是否是捕获阶段事件\n   * @returns {void} 无返回\n   */\n  _addNativeEventListener: function /*istanbul ignore next*/_addNativeEventListener(name, listener, capture) {\n    this._target_.addEventListener(name, listener, capture);\n    //如果存在已注册的自定义 “组合事件”\n    var descriptor = EventEmitter._events[name];\n    if (descriptor) {\n      descriptor.addListener = descriptor.addListener || descriptor.on;\n      descriptor.addListener(this, name, listener, capture);\n    }\n  },\n\n  /**\n   * 移除 DOM 元素事件\n   * @param {string} name 事件名称\n   * @param {function} listener 事件处理函数\n   * @param {capture} capture 是否是捕获阶段事件\n   * @returns {void} 无返回\n   */\n  _removeNativeEventListener: function /*istanbul ignore next*/_removeNativeEventListener(name, listener, capture) {\n    this._target_.removeEventListener(name, listener, capture);\n    //如果存在已注册的自定义 “组合事件”\n    var descriptor = EventEmitter._events[name];\n    if (descriptor) {\n      descriptor.removeListener = descriptor.removeListener || descriptor.off;\n      descriptor.removeListener(this, name, listener, capture);\n    }\n  },\n\n  /**\n   * 触发 DOM 元素事件\n   * @param {string} name 事件名称\n   * @param {object} data 传递的对象\n   * @param {string} canBubble 能否冒泡\n   * @param {object} cancelAble 能否取消\n   * @returns {void} 无返回\n   */\n  _emitNativeEvent: function /*istanbul ignore next*/_emitNativeEvent(name, data, canBubble, cancelAble) {\n    var event = document.createEvent('HTMLEvents');\n    event.initEvent(name, canBubble, cancelAble);\n    utils.copy(data, event, ['data']);\n    event.data = data;\n    return this._target_.dispatchEvent(event);\n  }\n\n});\n\n//最多添加多少个 listener\nEventEmitter._maxListeners = 10;\n\n//所有自定义事件\nEventEmitter._events = [];\n\n/**\n * 注册自定义事件(只在代理 dom 对象时有效)\n * @param {object} descriptor 事件定义\n * @returns {void} 无返回\n */\nEventEmitter.register = function (descriptor) {\n  var names = descriptor.name;\n  if (!names) return;\n  if (!utils.isArray(names)) names = names.split(',');\n  names.forEach(function (name) {\n    this._events[name] = descriptor;\n  }, this);\n};\n\nmodule.exports = EventEmitter;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\nconst utils = __webpack_require__(1);\n\nfunction ClassFactory(options) {\n  //处理 options\n  options = options || utils.create(null);\n  options.$name = options.$name || 'Class';\n  options.$extends = options.$extends || ClassFactory;\n  options.$static = options.$static || utils.create(null);\n  //处理父类 prototype\n  var superPrototype = utils.isFunction(options.$extends) ?\n    options.$extends.prototype : options.$extends;\n  //定义新类\n  var Class = function () {\n    //处理 super\n    if (!this.$super) {\n      utils.defineFreezeProp(this, '$super', function () {\n        if (this._super_called_) return this._super_ret_;\n        this._super_called_ = true;\n        if (utils.isFunction(options.$extends)) {\n          this._super_ret_ = options.$extends.apply(this, arguments);\n          //这几行确保可继承于数组\n          if (this._super_ret_) {\n            var proto = utils.getPrototypeOf(this);\n            utils.setPrototypeOf(proto, this._super_ret_);\n          }\n        } else {\n          this._super_ret_ = options.$extends;\n        }\n        return this._super_ret_;\n      });\n      for (var name in superPrototype) {\n        var value = superPrototype[name];\n        if (utils.isFunction(value)) {\n          this.$super[name] = value.bind(this);\n        } else {\n          this.$super[name] = value;\n        }\n      }\n    }\n    //调用构造\n    if (utils.isFunction(options.constructor) &&\n      options.constructor !== Object) {\n      return options.constructor.apply(this, arguments);\n    } else {\n      //如果没有实现 constructor 则调用父类构造\n      this.$super.apply(this, arguments);\n    }\n  };\n  //处理 prototype\n  Class.prototype = utils.create(superPrototype);\n  utils.copy(options, Class.prototype);\n  utils.defineFreezeProp(Class.prototype, '$class', Class);\n  //处理静态成员\n  utils.copy(options.$static, Class);\n  if (utils.isFunction(options.$extends)) {\n    utils.setPrototypeOf(Class, options.$extends);\n  }\n  if (!options.$extends.$extend) {\n    utils.copy(ClassFactory, Class);\n  }\n  utils.defineFreezeProp(Class, '$super', options.$extends);\n  //--\n  return Class;\n}\n\n//定义扩展方法\nClassFactory.$extend = function (options) {\n  options.$extends = this;\n  return new ClassFactory(options);\n};\n\nClassFactory.Class = ClassFactory;\nmodule.exports = ClassFactory;\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar utils = __webpack_require__(1);\n\nvar Scope = function Scope(parent, props) {\n  //新的 scope 因为「继承」了 _observer_ \n  //所以在新 scope 上进行双向绑定时，将将值成功回写\n  //如果有天不须用 utils.cteate 继承法，需要注意 _observer_ \n  //或在新 scope 上 defineProperty 代理 parentScope\n  var scope = utils.create(parent);\n  utils.copy(props, scope);\n  //将 func 绑定到原 scope 上;\n  utils.each(parent, function (key, value) {\n    if (!utils.isFunction(value)) return;\n    scope[key] = value.bind(parent);\n  });\n  return scope;\n};\n\nmodule.exports = Scope;\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports) {\n\nvar core = module.exports = { version: '2.5.1' };\nif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// Thank's IE8 for his funny defineProperty\nmodule.exports = !__webpack_require__(13)(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = __webpack_require__(38);\nvar defined = __webpack_require__(16);\nmodule.exports = function (it) {\n  return IObject(defined(it));\n};\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Compiler = __webpack_require__(25);\nvar Directive = __webpack_require__(0);\nvar Expression = __webpack_require__(9);\nvar Template = __webpack_require__(80);\nvar directives = __webpack_require__(26);\n\nTemplate.Template = Template;\nTemplate.Compiler = Compiler;\nTemplate.Directive = Directive;\nTemplate.directives = directives;\nTemplate.Expression = Expression;\n\nmodule.exports = Template;\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Class = __webpack_require__(3);\nvar utils = __webpack_require__(1);\n\n/**\n * 表达式类型，将字符串构析为可执行表达式实例\n */\nvar Expression = new Class({\n\n  /**\n   * 通过字符串构造一个表达式实例\n   * @param {string} code 代码字符串\n   * @param {boolean} mix 是否是混合代码\n   * @returns {void} 无返回\n   */\n  constructor: function /*istanbul ignore next*/constructor(code, mix) {\n    this.func = mix ? this._compileMixedCode(code) : this._compileCode(code);\n  },\n\n  /**\n   * 编译普通表达式代码\n   * @param {string} code 代码字符串\n   * @returns {function} 编辑后的函数\n   */\n  _compileCode: function /*istanbul ignore next*/_compileCode(code) {\n    code = this._escapeEOL(this._wrapCode(code));\n    return this._createFunction(code);\n  },\n\n  /**\n   * 编辑混合的表达式代码\n   * @param {string} code 代码字符串\n   * @returns {function} 编辑后的函数\n   */\n  _compileMixedCode: function /*istanbul ignore next*/_compileMixedCode(code) {\n    var statements = this._parseMixedCode(code);\n    code = this._escapeEOL(statements.join('+'));\n    return this._createFunction(code);\n  },\n\n  /**\n   * 通过符串代码创建一个可执行函数\n   * @param {string} code 代码字符串\n   * @returns {function} 创建的函数\n   */\n  _createFunction: function /*istanbul ignore next*/_createFunction(code) {\n    var func = new Function('utils', 'scope', 'with(scope){return ' + code + '}');\n    return func.bind(null, utils);\n  },\n\n  /**\n   * 解析混合代码字符串\n   * @param {string} code 混合代码字符串\n   * @returns {Array} 解析后的「token」列表\n   */\n  _parseMixedCode: function /*istanbul ignore next*/_parseMixedCode(code) {\n    var index = 0,\n        length = code.length;\n    var token = '',\n        isExpr = false,\n        tokens = [];\n    while (index <= length) {\n      var char = code[index++];\n      var nextChar = code[index];\n      if (utils.isNull(char)) {\n        if (token.length > 0) {\n          tokens.push('\"' + this._escapeCode(token) + '\"');\n        }\n        token = '';\n        isExpr = false;\n      } else if (!isExpr && char + nextChar == '{{') {\n        if (token.length > 0) {\n          tokens.push('\"' + this._escapeCode(token) + '\"');\n        }\n        token = '';\n        isExpr = true;\n        index++;\n      } else if (isExpr && char + nextChar == '}}') {\n        if (token.length > 0) {\n          tokens.push(this._wrapCode(token));\n        }\n        token = '';\n        isExpr = false;\n        index++;\n      } else {\n        token += char;\n      }\n    }\n    return tokens;\n  },\n\n  /**\n   * 转义处理代码字符串\n   * @param {string} code 源字符串\n   * @returns {string} 处理后的字符串\n   */\n  _escapeCode: function /*istanbul ignore next*/_escapeCode(code) {\n    return code.replace(/\"/, '\\\\\"').replace('\\r\\n', '\\\\r\\\\n').replace('\\n', '\\\\n');\n  },\n\n  /**\n   * 转义换行符\n   * @param {string} code 源字符串\n   * @returns {string} 处理后的字符串\n   */\n  _escapeEOL: function /*istanbul ignore next*/_escapeEOL(code) {\n    return code.replace(/\\n/gm, '\\\\\\n');\n  },\n\n  /**\n   * 通过闭包和 try/cache 包裹代码\n   * 将模板中错误的代码直接显示在「模板中用到的位置」，更易于定位错误。\n   * @param {string} code 源字符串\n   * @returns {string} 处理后的字符串\n   */\n  _wrapCode: function /*istanbul ignore next*/_wrapCode(code) {\n    return '((function(){try{return (' + code + ')}catch(err){console.error(err);return err;}})())';\n  },\n\n  /**\n   * 通过 scope 对象执行表达式\n   * @param {Object} scope 上下文对象\n   * @returns {Object} 执行结果\n   */\n  execute: function /*istanbul ignore next*/execute(scope) {\n    if (utils.isNull(scope)) {\n      scope = {};\n    }\n    return this.func.call(scope, scope);\n  }\n\n});\n\nmodule.exports = Expression;\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/*istanbul ignore next*/var _keys = __webpack_require__(32);\n\nvar _keys2 = _interopRequireDefault(_keys);\n\nvar _getOwnPropertyDescriptor = __webpack_require__(52);\n\nvar _getOwnPropertyDescriptor2 = _interopRequireDefault(_getOwnPropertyDescriptor);\n\nvar _defineProperty = __webpack_require__(14);\n\nvar _defineProperty2 = _interopRequireDefault(_defineProperty);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Class = __webpack_require__(3);\nvar utils = __webpack_require__(1);\nvar EventEmitter = __webpack_require__(2);\n\nvar OBSERVER_PROP_NAME = '_observer_';\nvar CHANGE_EVENT_NAME = 'change';\nvar EVENT_MAX_DISPATCH_LAYER = 10;\nvar IGNORE_REGEXPS = [/^\\_(.*)\\_$/i, /^\\_\\_/i];\n\n/**\n * 对象观察类，可以监控对象变化\n * 目前方案问题:\n *   对于父子关系和事件冒泡，目前方案如果用 delete 删除一个属性，无关真实删除关系，\n *   即便调用 clearReference 也无法再清除关系，子对象的 parents 中会一直有一个引用，当前方案最高效\n * 其它方法一:\n *   将「关系」放入全局数组中，然后将 ob.parents 变成一个「属性」从全局数组件中 filter 出来，\n *   基本和目前方法类似，但是关系在外部存领教，所以 clearReference 可清除。\n * 其它方案二: \n *   构造时添加到全局数组，每一个 observer change 时都让放到全局的 observer 遍历自身的，\n *   检果事件源是不是自已的子对象，如果是则触发自身 change 事件，这样 ob 对象本身没有相关引用\n *   clearReference 时只从全局清除掉就行了，并且 delete 操作也不会影响，但效率稍差。\n * 其它方案三: \n *   给构造函数添加一个 deep 属性，只有 deep 的 ob 对象，才放入到全局数组中，检查时逻辑同方案二\n *   但是因为要检查的对象会少很多，效率会更高一点。\n */\nvar Observer = new Class({\n  $extends: EventEmitter,\n\n  /**\n   * 通过目标对象构造一个观察对象\n   * @param {Object} target 目标对象\n   * @param {Object} options 选项\n   * @returns {void} 无返回\n   */\n  constructor: function /*istanbul ignore next*/constructor(target, options) {\n    if (utils.isNull(target)) {\n      throw new Error('Invalid target');\n    }\n    options = options || {};\n    var observer = target[OBSERVER_PROP_NAME];\n    if (observer) {\n      utils.copy(options, observer.options);\n      //当时一个组件 A 的为组件 B 的 prop 时，A 更新不会触发 B 更新\n      //所在暂注释这里，另一种方法是更新 prop 指令，重写 excute 方法，而不是现在的 update 方法\n      // if (observer.options.root) {\n      //   observer.parents.length = 0;\n      // }\n      observer.apply();\n      return observer;\n    }\n    EventEmitter.call(this);\n    utils.defineFreezeProp(this, 'options', options);\n    utils.defineFreezeProp(this, 'shadow', {});\n    utils.defineFreezeProp(this, 'target', target);\n    utils.defineFreezeProp(this, 'parents', []);\n    utils.defineFreezeProp(target, OBSERVER_PROP_NAME, this);\n    this.apply();\n  },\n\n  /**\n   * 添加一个属性，动态添中的属性，无法被观察，\n   * 但是通过 set 方法添加的属性可能被观察。\n   * @param {string} name 名称\n   * @param {Object} value 值\n   * @returns {void} 无返回\n   */\n  set: function /*istanbul ignore next*/set(name, value) {\n    if (utils.isFunction(value) || Observer.isIgnore(name)) {\n      return;\n    }\n    /*istanbul ignore next*/(0, _defineProperty2.default)(this.target, name, {\n      get: function /*istanbul ignore next*/get() {\n        return this[OBSERVER_PROP_NAME].shadow[name];\n      },\n      set: function /*istanbul ignore next*/set(value) {\n        var observer = this[OBSERVER_PROP_NAME];\n        var oldValue = observer.shadow[name];\n        if (oldValue === value) return;\n        if (utils.isObject(value)) {\n          var childObserver = new Observer(value);\n          observer.addChild(childObserver, name);\n        }\n        //移除旧值的父引用\n        //如果用 delete 删除属性将无法移除父子引用\n        if (oldValue && oldValue[OBSERVER_PROP_NAME]) {\n          observer.removeChild(oldValue[OBSERVER_PROP_NAME], name);\n        }\n        observer.shadow[name] = value;\n        observer.emitChange({ path: name, value: value });\n      },\n      configurable: true,\n      enumerable: true\n    });\n    this.target[name] = value;\n  },\n\n  /**\n   * 自动应用所有动态添加的属性\n   * @returns {void} 无返回\n   */\n  apply: function /*istanbul ignore next*/apply() {\n    if (utils.isArray(this.target)) {\n      this._wrapArray(this.target);\n    }\n    var names = this._getPropertyNames(this.target);\n    names.forEach(function (name) {\n      var desc = /*istanbul ignore next*/(0, _getOwnPropertyDescriptor2.default)(this.target, name);\n      if (!('value' in desc)) return;\n      this.set(name, this.target[name]);\n    }, this);\n  },\n\n  /**\n   * 清除所有父子引用\n   * @returns {void} 无返回\n   */\n  clearReference: function /*istanbul ignore next*/clearReference() {\n    utils.each(this.target, function (name, value) {\n      if (utils.isNull(value)) return;\n      var child = value[OBSERVER_PROP_NAME];\n      if (child) this.removeChild(child);\n    }, this);\n  },\n\n  /**\n   * 派发一个事件，事件会向父级对象冒泡\n   * @param {string} eventName 事件名称\n   * @param {Object} event 事件对象\n   * @returns {void} 无返回\n   */\n  dispatch: function /*istanbul ignore next*/dispatch(eventName, event) {\n    if (event._src_ === this) return;\n    event._src_ = event._src_ || this;\n    event._layer_ = event._layer_ || 0;\n    if (event._layer_++ >= EVENT_MAX_DISPATCH_LAYER) return;\n    this.emit(eventName, event);\n    if (!this.parents || this.parents.length < 1) return;\n    this.parents.forEach(function (item) {\n      if (!(item.name in item.parent.target)) {\n        return item.parent.removeChild(this);\n      }\n      var parentEvent = utils.copy(event);\n      parentEvent.path = item.name + '.' + event.path;\n      item.parent.dispatch(eventName, parentEvent);\n    }, this);\n  },\n\n  /**\n   * 添子观察者对象\n   * @param {Object} child 父对象\n   * @param {String} name 属性名\n   * @returns {void} 无返回\n   */\n  addChild: function /*istanbul ignore next*/addChild(child, name) {\n    if (utils.isNull(child) || utils.isNull(name)) {\n      throw new Error('Invalid paramaters');\n    }\n    if (child.options.root) return;\n    child.parents.push({ parent: this, name: name });\n  },\n\n  /**\n   * 移除子对象\n   * @param {Object} child 父对象\n   * @param {String} name 属性名\n   * @returns {void} 无返回\n   */\n  removeChild: function /*istanbul ignore next*/removeChild(child, name) {\n    if (utils.isNull(child)) {\n      throw new Error('Invalid paramaters');\n    }\n    var foundIndex = -1;\n    child.parents.forEach(function (item, index) {\n      if (item.parent === this && item.name === name) {\n        foundIndex = index;\n      }\n    }, this);\n    if (foundIndex > -1) {\n      child.parents.splice(foundIndex, 1);\n    }\n  },\n\n  /**\n   * 触发 change 事件\n   * @param {Object} event 事件对象\n   * @returns {void} 无返回\n   */\n  emitChange: function /*istanbul ignore next*/emitChange(event) {\n    this.dispatch(CHANGE_EVENT_NAME, event);\n  },\n\n  /**\n   * 获取所有成员名称列表\n   * @returns {Array} 所有成员名称列表\n   */\n  _getPropertyNames: function /*istanbul ignore next*/_getPropertyNames() {\n    var names = utils.isArray(this.target) ? this.target.map(function (item, index) {\n      return index;\n    }) : /*istanbul ignore next*/(0, _keys2.default)(this.target);\n    return names.filter(function (name) {\n      return name !== OBSERVER_PROP_NAME;\n    });\n  },\n\n  /**\n   * 包裹数组\n   * @param {array} array 源数组\n   * @returns {array} 处理后的数组\n   */\n  _wrapArray: function /*istanbul ignore next*/_wrapArray(array) {\n    utils.defineFreezeProp(array, 'push', function () {\n      var items = [].slice.call(arguments);\n      items.forEach(function (item) {\n        //这里也会触发对应 index 的 change 事件\n        this[OBSERVER_PROP_NAME].set(array.length, item);\n      }, this);\n      this[OBSERVER_PROP_NAME].emitChange({ path: 'length', value: this.length });\n    });\n    utils.defineFreezeProp(array, 'pop', function () {\n      var item = [].pop.apply(this, arguments);\n      this[OBSERVER_PROP_NAME].emitChange({ path: this.length, value: item });\n      this[OBSERVER_PROP_NAME].emitChange({ path: 'length', value: this.length });\n      return item;\n    });\n    utils.defineFreezeProp(array, 'unshift', function () {\n      var items = [].slice.call(arguments);\n      items.forEach(function (item) {\n        //这里也会触发对应 index 的 change 事件\n        this[OBSERVER_PROP_NAME].set(0, item);\n      }, this);\n      this[OBSERVER_PROP_NAME].emitChange({ path: 'length', value: this.length });\n    });\n    utils.defineFreezeProp(array, 'shift', function () {\n      var item = [].shift.apply(this, arguments);\n      this[OBSERVER_PROP_NAME].emitChange({ path: 0, value: item });\n      this[OBSERVER_PROP_NAME].emitChange({ path: 'length', value: this.length });\n      return item;\n    });\n    utils.defineFreezeProp(array, 'splice', function () {\n      var startIndex = arguments[0];\n      var endIndex = utils.isNull(arguments[1]) ? startIndex + arguments[1] : this.length - 1;\n      var items = [].splice.apply(this, arguments);\n      for (var i = startIndex; i <= endIndex; i++) {\n        this[OBSERVER_PROP_NAME].emitChange({ path: i, value: items[i - startIndex] });\n      }\n      this[OBSERVER_PROP_NAME].emitChange({ path: 'length', value: this.length });\n      return items;\n    });\n    utils.defineFreezeProp(array, 'set', function (index, value) {\n      if (index >= this.length) {\n        this[OBSERVER_PROP_NAME].emitChange({ path: 'length', value: this.length });\n      }\n      this[OBSERVER_PROP_NAME].set(index, value);\n    });\n  }\n\n});\n\n/**\n * 观察一个对象\n * @param {Object} target 目标对象\n * @return {Observer} 观察者对象\n */\nObserver.observe = function (target) {\n  return new Observer(target);\n};\n\n/**\n * 检查是不是忽略的属性名\n * @param {string} word 待检查的字符串\n * @returns {void} 无返回\n */\nObserver.isIgnore = function (word) {\n  return IGNORE_REGEXPS.some(function (re) /*istanbul ignore next*/{\n    return re.test(word);\n  });\n};\n\nmodule.exports = Observer;\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports) {\n\n// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self\n  // eslint-disable-next-line no-new-func\n  : Function('return this')();\nif (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports) {\n\nmodule.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports) {\n\nmodule.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = { \"default\": __webpack_require__(57), __esModule: true };\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Class = __webpack_require__(3);\nvar utils = __webpack_require__(1);\n\n/**\n * Watcher 类\n * 通过「计算函数」、「执行函数」可以创建一个 Watcher 实例\n */\nvar Watcher = new Class({\n\n  /**\n   * 通过「计算函数」、「执行函数」构建一个 Watcher 实例\n   * @param {function} calcor 计算函数\n   * @param {function} handler 处理函数\n   * @param {boolean} first 是否自动执行第一次\n   * @returns {void} 无返回\n   */\n  constructor: function /*istanbul ignore next*/constructor(calcor, handler, first) {\n    if (!utils.isFunction(calcor) || !utils.isFunction(handler)) {\n      throw new Error('Invalid parameters');\n    }\n    this.calcor = calcor;\n    this.handler = handler;\n    if (first) this.calc(true);\n  },\n\n  /**\n   * 执行计算\n   * @param {boolean} force 是否强制触发「计算函数」\n   * @returns {Object} 计算后的值\n   */\n  calc: function /*istanbul ignore next*/calc(force) {\n    var newValue = this.calcor();\n    if (force || !utils.deepEqual(newValue, this.value)) {\n      this.handler(newValue, this.value);\n    }\n    this.value = utils.clone(newValue);\n  }\n\n});\n\nmodule.exports = Watcher;\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports) {\n\n// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports) {\n\nvar hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports) {\n\n// 7.1.4 ToInteger\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nmodule.exports = function (it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// most Object methods by ES6 should accept primitives\nvar $export = __webpack_require__(20);\nvar core = __webpack_require__(5);\nvar fails = __webpack_require__(13);\nmodule.exports = function (KEY, exec) {\n  var fn = (core.Object || {})[KEY] || Object[KEY];\n  var exp = {};\n  exp[KEY] = exec(fn);\n  $export($export.S + $export.F * fails(function () { fn(1); }), 'Object', exp);\n};\n\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar global = __webpack_require__(11);\nvar core = __webpack_require__(5);\nvar ctx = __webpack_require__(47);\nvar hide = __webpack_require__(49);\nvar PROTOTYPE = 'prototype';\n\nvar $export = function (type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var IS_WRAP = type & $export.W;\n  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n  var expProto = exports[PROTOTYPE];\n  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE];\n  var key, own, out;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    if (own && key in exports) continue;\n    // export native or passed\n    out = own ? target[key] : source[key];\n    // prevent global pollution for namespaces\n    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n    // bind timers to global for call from export context\n    : IS_BIND && own ? ctx(out, global)\n    // wrap global constructors for prevent change them in library\n    : IS_WRAP && target[key] == out ? (function (C) {\n      var F = function (a, b, c) {\n        if (this instanceof C) {\n          switch (arguments.length) {\n            case 0: return new C();\n            case 1: return new C(a);\n            case 2: return new C(a, b);\n          } return new C(a, b, c);\n        } return C.apply(this, arguments);\n      };\n      F[PROTOTYPE] = C[PROTOTYPE];\n      return F;\n    // make static versions for prototype methods\n    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%\n    if (IS_PROTO) {\n      (exports.virtual || (exports.virtual = {}))[key] = out;\n      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%\n      if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);\n    }\n  }\n};\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library`\nmodule.exports = $export;\n\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar anObject = __webpack_require__(50);\nvar IE8_DOM_DEFINE = __webpack_require__(22);\nvar toPrimitive = __webpack_require__(23);\nvar dP = Object.defineProperty;\n\nexports.f = __webpack_require__(6) ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return dP(O, P, Attributes);\n  } catch (e) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = !__webpack_require__(6) && !__webpack_require__(13)(function () {\n  return Object.defineProperty(__webpack_require__(51)('div'), 'a', { get: function () { return 7; } }).a != 7;\n});\n\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = __webpack_require__(12);\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports) {\n\nmodule.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Class = __webpack_require__(3);\nvar Directive = __webpack_require__(0);\nvar utils = __webpack_require__(1);\nvar Expression = __webpack_require__(9);\nvar commonDirectives = __webpack_require__(26);\n\nvar DEFAULT_PREFIX = 'm';\n\n/**\n * 模板编译器\n * 可以通过指定「前缀」或「指令集」构建实例\n */\nvar Compiler = new Class({\n\n  /**\n   * 构造一个编译器\n   * @param {Object} options 选项\n   * @returns {void} 无返回\n   */\n  constructor: function /*istanbul ignore next*/constructor(options) {\n    options = options || {};\n    this.prefix = options.prefix || DEFAULT_PREFIX;\n    this.elementDirectives = {};\n    this.attributeDirectives = {};\n    this.registerDirectives(commonDirectives);\n    this.registerDirectives(options.directives);\n  },\n\n  /**\n  * 将字符串转成「驼峰」式\n  * @param {string} str 原始字符串\n  * @param {number} mode 1 大驼峰，0 小驼峰\n  * @return {string} 转换后的字符串\n  */\n  toCamelCase: function /*istanbul ignore next*/toCamelCase(str, mode) {\n    if (str) {\n      str = str.replace(/\\-[a-z0-9]/g, function ($1) /*istanbul ignore next*/{\n        return $1.slice(1).toUpperCase();\n      });\n      str = str.replace(/^[a-z]/i, function ($1) {\n        return mode ? $1.toUpperCase() : $1.toLowerCase();\n      });\n    }\n    return str;\n  },\n\n  /**\n   * 将字符串转成分隔形式\n   * @param {string} str 原始字符串\n   * @return {string} 转换后的字符串\n   */\n  toSplitCase: function /*istanbul ignore next*/toSplitCase(str) {\n    if (str) {\n      str = str.replace(/([A-Z])/g, '-$1');\n      if (str[0] == '-') str = str.slice(1);\n    }\n    return str;\n  },\n\n  /**\n   * 添加指令\n   * @param {Object} directives 指令集 \n   * @returns {void} 无返回\n   */\n  registerDirectives: function /*istanbul ignore next*/registerDirectives(directives) {\n    utils.each(directives, function (name, directive) {\n      name = this.toSplitCase(name);\n      var fullName = directive.options.prefix === false ? name : /*istanbul ignore next*/this.prefix + ':' + name;\n      if (directive.options.type == Directive.TE) {\n        this.elementDirectives[fullName.toUpperCase()] = directive;\n      } else {\n        this.attributeDirectives[fullName.toLowerCase()] = directive;\n      }\n    }, this);\n  },\n\n  /**\n   * 解析要 attr 指令信息\n   * @param {string} attrName 要解析的名称字符串\n   * @returns {Object} 解析后的对象\n   */\n  _parseAttrInfo: function /*istanbul ignore next*/_parseAttrInfo(attrName) {\n    /*istanbul ignore next*/var _this = this;\n\n    var parts = attrName.toLowerCase().split(':');\n    var info = {};\n    if (parts.length > 1) {\n      info.name = /*istanbul ignore next*/parts[0] + ':' + parts[1];\n      info.decorates = parts.slice(2).map(function (item) /*istanbul ignore next*/{\n        return (/*istanbul ignore next*/_this.toCamelCase(item)\n        );\n      });\n    } else {\n      info.name = parts[0];\n      info.decorates = [];\n    }\n    return info;\n  },\n\n  /**\n   * 创建一个指令实例\n   * @param {Directive} Directive 指令类\n   * @param {Object} options 指令构建选项\n   * @returns {Directive} 指令实例\n   */\n  _createDirectiveInstance: function /*istanbul ignore next*/_createDirectiveInstance(Directive, options) {\n    options.compiler = this;\n    options.prefix = this.prefix;\n    return new Directive(options);\n  },\n\n  /**\n   * 初始化一个编译完成的 handler\n   * @param {function} handler 编译后的的模板函数\n   * @returns {void} 无返回\n   */\n  _bindHandler: function /*istanbul ignore next*/_bindHandler(handler) {\n    //排序 directives\n    handler.directives = handler.directives.sort(function (a, b) {\n      return b.level - a.level;\n    });\n    //初始化 directives\n    var boundDirectives = [];\n    utils.each(handler.directives, function (index, directive) {\n      directive.index = index;\n      directive.bind();\n      boundDirectives.push(directive);\n      //移除完成绑定的指令对应的 attribute\n      if (directive.remove !== false && directive.attribute) {\n        directive.node.removeAttribute(directive.attribute.name);\n      }\n      //如果遇到一个「终态」指令，停止向下初始化\n      if (directive.final) {\n        return handler.final = true;\n      }\n    }, this);\n    handler.directives = boundDirectives;\n  },\n\n  /**\n   * 编译一个元素本身\n   * @param {function} handler 当前模板函数\n   * @param {HTMLNode} node 当前 HTML 结点\n   * @returns {void} 无返回\n   */\n  _compileElement: function /*istanbul ignore next*/_compileElement(handler, node) {\n    var ElementDirective = this.elementDirectives[node.nodeName.toUpperCase()];\n    if (!ElementDirective) return;\n    handler.directives.push(this._createDirectiveInstance(ElementDirective, {\n      handler: handler,\n      node: node\n    }));\n  },\n\n  /**\n   * 编译一个元素所有 attributes \n   * @param {function} handler 当前模板函数\n   * @param {HTMLNode} node 当前 HTML 结点\n   * @returns {void} 无返回\n   */\n  _compileAttributes: function /*istanbul ignore next*/_compileAttributes(handler, node) {\n    utils.toArray(node.attributes).forEach(function (attribute) {\n      var attrInfo = this._parseAttrInfo(attribute.name);\n      var AttrDirective = this.attributeDirectives[attrInfo.name] || this.attributeDirectives['*'];\n      if (!AttrDirective) return;\n      var directiveOptions = AttrDirective.options;\n      handler.directives.push(this._createDirectiveInstance(AttrDirective, {\n        handler: handler,\n        node: node,\n        attribute: attribute,\n        expression: directiveOptions.literal ? attribute.value : new Expression(attribute.value, directiveOptions.mixed),\n        decorates: attrInfo.decorates\n      }));\n    }, this);\n  },\n\n  /**\n   * 编译所有子结点\n   * @param {function} handler 当前模板函数\n   * @param {HTMLNode} node 当前 HTML 结点\n   * @returns {void} 无返回\n   */\n  _compileChildren: function /*istanbul ignore next*/_compileChildren(handler, node) {\n    if (handler.final) return;\n    utils.toArray(node.childNodes).forEach(function (childNode) {\n      if (childNode._compiled_) return;\n      var childHandler = this.compile(childNode);\n      childHandler.parent = this;\n      handler.children.push(childHandler);\n    }, this);\n  },\n\n  /**\n   * 编译一个模板\n   * @param {HTMLNode} node 模板根元素\n   * @param {Object} options 选项\n   * @returns {function} 模板函数\n   */\n  compile: function /*istanbul ignore next*/compile(node, options) {\n    if (!node) {\n      throw new Error('Invalid node for compile');\n    }\n    node._compiled_ = true;\n    options = options || {};\n    //定义编译结果函数\n    var handler = function handler(scope) {\n      if (utils.isNull(scope)) scope = {};\n      handler.directives.forEach(function (directive) {\n        directive.scope = scope;\n        directive.execute(scope);\n      }, this);\n      handler.children.forEach(function (childHandler) {\n        childHandler(scope);\n      }, this);\n    };\n    //--\n    handler.dispose = function () {\n      handler.directives.forEach(function (directive) {\n        directive.unbind();\n      }, this);\n      handler.children.forEach(function (childHandler) {\n        childHandler.dispose();\n      }, this);\n    };\n    handler.node = node;\n    //定义 children & directives \n    handler.directives = [];\n    handler.children = [];\n    //编译相关指令\n    if (options.element !== false) this._compileElement(handler, node);\n    if (options.attribute !== false) this._compileAttributes(handler, node);\n    this._bindHandler(handler);\n    if (options.children !== false) this._compileChildren(handler, node);\n    //返回编译后函数\n    return handler;\n  }\n\n});\n\nmodule.exports = Compiler;\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n  '#text': __webpack_require__(59),\n  'each': __webpack_require__(60),\n  'if': __webpack_require__(61),\n  'prop': __webpack_require__(62),\n  'attr': __webpack_require__(63),\n  'on': __webpack_require__(64),\n  'html': __webpack_require__(65),\n  'text': __webpack_require__(66),\n  'prevent': __webpack_require__(67),\n  'id': __webpack_require__(68),\n  'cloak': __webpack_require__(69),\n  'show': __webpack_require__(70),\n  'model': __webpack_require__(71),\n  'focus': __webpack_require__(78),\n  '*': __webpack_require__(79) //处理所有未知 attr\n};\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/*istanbul ignore next*/var _defineProperty = __webpack_require__(14);\n\nvar _defineProperty2 = _interopRequireDefault(_defineProperty);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Class = __webpack_require__(3);\nvar Template = __webpack_require__(8);\nvar Watcher = __webpack_require__(15);\nvar utils = __webpack_require__(1);\nvar EventEmitter = __webpack_require__(2);\nvar Observer = __webpack_require__(10);\nvar ComponentDirective = __webpack_require__(82);\n\n/**\n * 组件类\n * 用于定义一个新的组件\n * @param {Object} classOpts 类选项\n * @returns {Component} 组件类\n */\nfunction Component(classOpts) {\n\n  //处理组件选项\n  classOpts = classOpts || {};\n\n  //处理「继承」，目前的机制，只能用「合并类选项」\n  var mixes = classOpts.mixes;\n  delete classOpts.mixes;\n  if (mixes && !utils.isArray(mixes)) {\n    mixes = [mixes];\n  } else {\n    mixes = [];\n  }\n  var extendComponent = classOpts.extend || Component;\n  delete classOpts.extend;\n  //extend 会覆盖 mixes 中的同名成员\n  mixes.push(extendComponent);\n  //classOpts 会覆盖 extend 或 mixes 中的同名成员\n  mixes.push(classOpts);\n  var mixedClassOpts = {};\n  mixes.forEach(function (mixItem) {\n    if (mixItem instanceof Component || mixItem == Component) {\n      mixItem = mixItem.$options || {};\n    }\n    utils.mix(mixedClassOpts, mixItem);\n  });\n  classOpts = mixedClassOpts;\n\n  /**\n   * 定义组件类\n   * 可以通过 new ComponentClass() 创建组件实例\n   */\n  var ComponentClass = new Class({\n    $extends: extendComponent,\n\n    /**\n     * 组件类构造函数\n     * @param {object} instanceOpts 实例选项\n     * @returns {void} 无返回\n     */\n    constructor: function /*istanbul ignore next*/constructor(instanceOpts) {\n      /*istanbul ignore next*/var _this = this;\n\n      if (this == window) return new this.$class(instanceOpts);\n      EventEmitter.call(this);\n      instanceOpts = instanceOpts || {};\n      //创建组件实例时可以给实例添加成员\n      utils.each(instanceOpts, function (key, value) {\n        if (key in /*istanbul ignore next*/_this) return;\n        /*istanbul ignore next*/_this[key] = value;\n      });\n      this._onTemplateUpdate_ = this._onTemplateUpdate_.bind(this);\n      this._createdData_(classOpts.data);\n      this._createProperties_(classOpts.properties || classOpts.props);\n      this._createWatches_(classOpts.watches || classOpts.watch);\n      this.$directives = this.$directives || {};\n      this._importDirectives_(classOpts.directives);\n      this.$components = this.$components || {};\n      this._importComponents_(__webpack_require__(28));\n      this._importComponents_({\n        'self': ComponentClass\n      });\n      this._importComponents_(classOpts.components);\n      utils.defineFreezeProp(this, '$children', []);\n      if (instanceOpts.parent) this.$setParent(instanceOpts.parent);\n      this.$callHook('init', [instanceOpts]);\n      Observer.observe(this);\n      if (classOpts.element) {\n        this.$mount();\n      } else {\n        this.$compile();\n      }\n    },\n\n    /**\n     * 设定父组件\n     * @param {Object} parent 父组件\n     * @returns {void} 无返回\n     */\n    $setParent: function /*istanbul ignore next*/$setParent(parent) {\n      if (this.$parent === parent) return;\n      if (this.$parent) {\n        this.$parent.$removeChild(this);\n      }\n      if (parent) {\n        parent.$addChild(this);\n      }\n    },\n\n    /**\n     * 添加子组件\n     * @param {Object} child 子组件\n     * @returns {void} 无返回\n     */\n    $addChild: function /*istanbul ignore next*/$addChild(child) {\n      if (!(child instanceof Component)) return;\n      this.$children.push(child);\n      utils.defineFreezeProp(child, '$parent', this);\n      utils.defineFreezeProp(child, '$root', this.$root || this);\n    },\n\n    /**\n     * 移除子组件\n     * @param {Object} child 子组件\n     * @returns {void} 无返回\n     */\n    $removeChild: function /*istanbul ignore next*/$removeChild(child) {\n      var index = this.$children.indexOf(child);\n      this.$children.splice(index, 1);\n      utils.defineFreezeProp(child, '$parent', null);\n      //utils.defineFreezeProp(child, '$root', null);\n    },\n\n    /**\n     * 获取根组件, 为了能通过 polyfill 处理 IE8 暂不用这种方式\n     */\n    get $root() {\n      if (this.$parent) {\n        return this.$parent.$root;\n      } else {\n        return this;\n      }\n    },\n\n    /**\n     * 导入用到的子组件类\n     * @param {Object} components 引入的组件\n     * @returns {void} 无返回\n     */\n    _importComponents_: function /*istanbul ignore next*/_importComponents_(components) {\n      utils.each(components, function (name, component) {\n        if (!component) return;\n        this.$components[name] = component;\n        this.$directives[name] = new ComponentDirective({\n          name: name,\n          component: component,\n          parent: this\n        });\n      }, this);\n    },\n\n    /**\n     * 导入一个用到的指令\n     * @param {Object} directives 引入的指令\n     * @returns {void} 无返回\n     */\n    _importDirectives_: function /*istanbul ignore next*/_importDirectives_(directives) {\n      utils.each(directives, function (name, directive) {\n        if (!directive) return;\n        this.$directives[name] = directive;\n      }, this);\n    },\n\n    /**\n     * 调用生命周期 hook\n     * @param {string} name 调用的 hook 名称\n     * @param {Array} args 调用 hook 的参数列表\n     * @returns {void} 无反回\n     */\n    $callHook: function /*istanbul ignore next*/$callHook(name, args) {\n      var hook = this[/*istanbul ignore next*/'on' + utils.firstUpper(name)];\n      if (!utils.isFunction(hook)) return;\n      hook.apply(this, args || []);\n      this.$emit( /*istanbul ignore next*/'$' + name, args);\n    },\n\n    /**\n     * 创建数据对象\n     * @param {Object} data 组件数据对象\n     * @returns {void} 无返回\n     */\n    _createdData_: function /*istanbul ignore next*/_createdData_(data) {\n      if (utils.isFunction(data)) {\n        this.$data = data.call(this);\n      } else {\n        this.$data = data || {};\n      }\n      utils.each(this.$data, function (name) {\n        /*istanbul ignore next*/(0, _defineProperty2.default)(this, name, {\n          configurable: true,\n          enumerable: true,\n          get: function /*istanbul ignore next*/get() {\n            if (!this.$data) return;\n            return this.$data[name];\n          },\n          set: function /*istanbul ignore next*/set(value) {\n            if (!this.$data) return;\n            this.$data[name] = value;\n          }\n        });\n      }, this);\n    },\n\n    /**\n     * 创建组件属性\n     * @param {Object} properties 属性定义对象\n     * @returns {void} 无返回\n     */\n    _createProperties_: function /*istanbul ignore next*/_createProperties_(properties) {\n      this.$properties = {};\n      utils.each(properties, function (name, descriptor) {\n        if (utils.isFunction(descriptor)) {\n          //get 简化写法\n          descriptor = {\n            get: descriptor\n          };\n        } else if (!utils.isObject(descriptor)) {\n          //基本类型\n          descriptor = {\n            value: descriptor\n          };\n        } else {\n          //通过 descriptor 定义 get/set/value\n          //不能直接用 descriptor，\n          //因为为会导到多个组件实例间的影响\n          descriptor = utils.copy(descriptor);\n        }\n        //如果 get/set 都没有，则自动生成\n        var hasGetterOrSetter = !!descriptor.get || !!descriptor.set;\n        if (!hasGetterOrSetter) {\n          descriptor.get = function () {\n            return descriptor.value;\n          };\n          descriptor.set = function (value) {\n            descriptor.value = value;\n          };\n        }\n        //定义为属性\n        /*istanbul ignore next*/(0, _defineProperty2.default)(this, name, {\n          configurable: true,\n          enumerable: true,\n          get: function /*istanbul ignore next*/get() {\n            if (!descriptor.get) {\n              throw new Error('Property `' + name + '` cannot be read');\n            }\n            return descriptor.get.call(this);\n          },\n          set: function /*istanbul ignore next*/set(value) {\n            if (!descriptor.set) {\n              throw new Error('Property `' + name + '` cannot be written');\n            }\n            if (descriptor.test && !descriptor.test(value)) {\n              throw new Error('Invalid value `' + value + '` for property `' + name + '`');\n            }\n            descriptor.set.call(this, value);\n            if (this._observer_) {\n              this._observer_.emitChange({\n                path: name,\n                value: value\n              });\n            }\n          }\n        });\n        this.$properties[name] = descriptor;\n      }, this);\n    },\n\n    /**\n     * 创建监控\n     * 为什么用 watches 而不是 watchers 或其它？\n     * 因为，这里仅是「监控配置」并且是「复数」\n     * @param {Object} watches 监控定义对象\n     * @returns {void} 无返回\n     */\n    _createWatches_: function /*istanbul ignore next*/_createWatches_(watches) {\n      this._watchers_ = this._watchers_ || [];\n      utils.each(watches, function (name, handler) {\n        this.$watch(name, handler);\n      }, this);\n    },\n\n    /**\n     * 在模板发生更新时\n     * @returns {void} 无返回\n     */\n    _onTemplateUpdate_: function /*istanbul ignore next*/_onTemplateUpdate_() {\n      this._watchers_.forEach(function (watcher) {\n        watcher.calc();\n      }, this);\n    },\n\n    /**\n     * 添加一个监控\n     * @param {string|function} path 计算函数或路径\n     * @param {function} handler 处理函数\n     * @returns {void} 无返回\n     */\n    $watch: function /*istanbul ignore next*/$watch(path, handler) {\n      if (!utils.isFunction(handler)) return;\n      var calcer = path;\n      if (!utils.isFunction(path)) {\n        calcer = function /*istanbul ignore next*/calcer() {\n          return utils.getByPath(this, path);\n        };\n      }\n      var watcher = new Watcher(calcer.bind(this), handler.bind(this));\n      this._watchers_.push(watcher);\n      return watcher;\n    },\n\n    /**\n     * 取消一个 watcher 对象\n     * @param {object} watcher 监控对象实例\n     * @returns {void} 无返回\n     */\n    $unWatch: function /*istanbul ignore next*/$unWatch(watcher) {\n      var index = this._watchers_.findIndex(function (w) /*istanbul ignore next*/{\n        return w === watcher;\n      });\n      this._watchers_.splice(index, 1);\n    },\n\n    /**\n     * 创建元素\n     * @returns {void} 无返回\n     */\n    _createElement_: function /*istanbul ignore next*/_createElement_() {\n      if (this._created_) return;\n      this._created_ = true;\n      this.$callHook('create');\n      utils.defineFreezeProp(this, '$element', this.element || ComponentClass.$template.cloneNode(true));\n      if (!this.$element || this.$element.nodeName === '#text') {\n        throw new Error('Invalid component template');\n      }\n      this.$callHook('created');\n    },\n\n    /**\n     * 编译自身模板并完成绑定\n     * @returns {void} 无返回\n     */\n    $compile: function /*istanbul ignore next*/$compile() {\n      if (this._compiled_) return;\n      this._compiled_ = true;\n      this._createElement_();\n      utils.defineFreezeProp(this, '_template_', new Template(this.$element, {\n        directives: this.$directives,\n        root: true\n      }));\n      this._template_.bind(this);\n      this._template_.on('update', this._onTemplateUpdate_);\n      this._template_.on('bind', function () {\n        if (!this.deferReady) this.$callHook('ready');\n      }.bind(this));\n    },\n\n    /**\n     * 向 DOM tree 中挂截组件\n     * @param {HTMLNode} mountNode 挂载点元素\n     * @param {append} append 是否 append 到挂载元素内\n     * @returns {void} 无返回 \n     */\n    $mount: function /*istanbul ignore next*/$mount(mountNode, append) {\n      if (this._mounted_) return;\n      this.$compile();\n      this.$callHook('mount');\n      if (mountNode) {\n        mountNode.$substitute = this.$element;\n        this.$element._mountNode = mountNode;\n        if (append) {\n          mountNode.appendChild(this.$element);\n        } else if (mountNode.parentNode) {\n          mountNode.parentNode.insertBefore(this.$element, mountNode);\n        }\n      }\n      this._mounted_ = true;\n      this._removed_ = false;\n      this.$callHook('mounted');\n    },\n\n    /**\n     * 将组件添加到指定容器元素内\n     * @param {HTMLNode} node 容器元素\n     * @returns {void} 无返回 \n     */\n    $appendTo: function /*istanbul ignore next*/$appendTo(node) {\n      this.$mount(node, true);\n    },\n\n    /**\n     * 移除组件\n     * @returns {void} 无返回\n     */\n    $remove: function /*istanbul ignore next*/$remove() {\n      if (this._removed_ || !this._mounted_) return;\n      this.$callHook('remove');\n      if (this.$element.parentNode) {\n        this.$element.parentNode.removeChild(this.$element);\n      }\n      this._removed_ = true;\n      this._mounted_ = false;\n      this.$callHook('removed');\n    },\n\n    /**\n     * 触发自身的一个事件并向上冒泡\n     * @param {string} name 事件名称\n     * @param {object} data 传递的对象\n     * @returns {void} 无返回\n     */\n    $dispatch: function /*istanbul ignore next*/$dispatch(name, data) {\n      var stopPropagation = this.$emit(name, data);\n      if (!stopPropagation && this.$parent) {\n        this.$parent.$dispatch(name, data);\n      }\n    },\n\n    /**\n     * 触发自身的一个事件并向下广播\n     * @param {string} name 事件名称\n     * @param {object} data 传递的对象\n     * @returns {void} 无返回\n     */\n    $broadcast: function /*istanbul ignore next*/$broadcast(name, data) {\n      var stopPropagation = this.$emit(name, data);\n      if (!stopPropagation && this.$children && this.$children.length > 0) {\n        this.$children.forEach(function (child) {\n          child.$broadcast(name, data);\n        }, this);\n      }\n    },\n\n    /**\n     * 释放组件\n     * @returns {void} 无返回\n     */\n    $dispose: function /*istanbul ignore next*/$dispose() {\n      this.$remove();\n      this._emitter_.off();\n      this.$children.forEach(function (child) {\n        child.$dispose();\n      }, this);\n      if (this.$parent) {\n        var index = this.$parent.$children.indexOf(this);\n        this.$parent.$children.splice(index, 1);\n      }\n      this.$callHook('dispose');\n      if (this._compiled_) {\n        this._template_.unbind();\n      }\n      this.$callHook('disposed');\n      for (var key in this) {\n        delete this[key];\n      }\n      ['_observer_', '$element', '$children', '$parent', '_template_'].forEach(function (key) {\n        delete this[key];\n      }, this);\n      utils.setPrototypeOf(this, null);\n    }\n\n  });\n\n  //保存类选项\n  ComponentClass.$options = classOpts;\n  ComponentClass.$template = utils.parseDom(classOpts.template);\n\n  //向 ComponentClass.prototype 上拷贝成员\n  utils.copy(classOpts, ComponentClass.prototype);\n  utils.copy(classOpts.methods, ComponentClass.prototype);\n\n  //使 ComponentClass instanceof Component === true \n  //IE9/10 下为 false，并且动态为 Component.prototype 添加的成员不会在 ComponentClass 上生效\n  utils.setPrototypeOf(ComponentClass, Component.prototype);\n\n  return ComponentClass;\n}\n\n//继承自 EventEmitter\nComponent.prototype = utils.create(EventEmitter.prototype);\n\n//组件扩展方法，简单封装 extends\nComponent.extend = function (classOpts) {\n  return new Component(classOpts);\n};\n\n//定义扩展方法\nComponent.prototype.extend = function (classOpts) {\n  classOpts = classOpts || {};\n  classOpts.extend = this;\n  return new Component(classOpts);\n};\n\n//创建实例的方法\nComponent.prototype.create = function (instanceOpts) {\n  return new this(instanceOpts);\n};\n\n//针对包括 element 组件类的启动方法\nComponent.prototype.start = function (instanceOpts) {\n  if (!this.$options || !this.$options.element) {\n    throw new Error('Start method cannot be called');\n  }\n  return this.create(instanceOpts);\n};\n\nmodule.exports = Component;\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n  View: __webpack_require__(83)\n};\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(30);\n\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar /*istanbul ignore next*/_$info = __webpack_require__(31);\n\n/*istanbul ignore next*/var _$info2 = _interopRequireDefault(_$info);\n\nvar /*istanbul ignore next*/_ntils = __webpack_require__(1);\n\n/*istanbul ignore next*/var _ntils2 = _interopRequireDefault(_ntils);\n\nvar /*istanbul ignore next*/_cify = __webpack_require__(3);\n\n/*istanbul ignore next*/var _cify2 = _interopRequireDefault(_cify);\n\nvar /*istanbul ignore next*/_watcher = __webpack_require__(15);\n\n/*istanbul ignore next*/var _watcher2 = _interopRequireDefault(_watcher);\n\nvar /*istanbul ignore next*/_observer = __webpack_require__(10);\n\n/*istanbul ignore next*/var _observer2 = _interopRequireDefault(_observer);\n\nvar /*istanbul ignore next*/_template = __webpack_require__(8);\n\n/*istanbul ignore next*/var _template2 = _interopRequireDefault(_template);\n\nvar /*istanbul ignore next*/_component = __webpack_require__(81);\n\n/*istanbul ignore next*/var _component2 = _interopRequireDefault(_component);\n\nvar /*istanbul ignore next*/_events = __webpack_require__(2);\n\n/*istanbul ignore next*/var _events2 = _interopRequireDefault(_events);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n//持载模板相关对象\n/*istanbul ignore next*/_ntils2.default.copy( /*istanbul ignore next*/_template2.default, /*istanbul ignore next*/_component2.default);\n\n/*istanbul ignore next*/_component2.default.version = /*istanbul ignore next*/_$info2.default.version;\n/*istanbul ignore next*/_component2.default.Template = /*istanbul ignore next*/_template2.default;\n/*istanbul ignore next*/_component2.default.Watcher = /*istanbul ignore next*/_watcher2.default;\n/*istanbul ignore next*/_component2.default.Observer = /*istanbul ignore next*/_observer2.default;\n/*istanbul ignore next*/_component2.default.EventEmitter = /*istanbul ignore next*/_events2.default;\n/*istanbul ignore next*/_component2.default.utils = /*istanbul ignore next*/_ntils2.default;\n/*istanbul ignore next*/_component2.default.Class = /*istanbul ignore next*/_cify2.default;\n\n//定义安装插件的方法\n/*istanbul ignore next*/_component2.default.use = function (plugin) {\n  var install = plugin.install || plugin;\n  if (! /*istanbul ignore next*/_ntils2.default.isFunction(install)) {\n    throw new Error('Invalid Plugin');\n  }\n  return install.call(plugin, this);\n};\n\n//安装内置的路由插件\n//Component.use(Router);\n\nmodule.exports = /*istanbul ignore next*/_component2.default;\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\"version\":\"3.1.3\"}\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = { \"default\": __webpack_require__(33), __esModule: true };\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(34);\nmodule.exports = __webpack_require__(5).Object.keys;\n\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// 19.1.2.14 Object.keys(O)\nvar toObject = __webpack_require__(35);\nvar $keys = __webpack_require__(36);\n\n__webpack_require__(19)('keys', function () {\n  return function keys(it) {\n    return $keys(toObject(it));\n  };\n});\n\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// 7.1.13 ToObject(argument)\nvar defined = __webpack_require__(16);\nmodule.exports = function (it) {\n  return Object(defined(it));\n};\n\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// 19.1.2.14 / 15.2.3.14 Object.keys(O)\nvar $keys = __webpack_require__(37);\nvar enumBugKeys = __webpack_require__(46);\n\nmodule.exports = Object.keys || function keys(O) {\n  return $keys(O, enumBugKeys);\n};\n\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar has = __webpack_require__(17);\nvar toIObject = __webpack_require__(7);\nvar arrayIndexOf = __webpack_require__(40)(false);\nvar IE_PROTO = __webpack_require__(43)('IE_PROTO');\n\nmodule.exports = function (object, names) {\n  var O = toIObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (has(O, key = names[i++])) {\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = __webpack_require__(39);\n// eslint-disable-next-line no-prototype-builtins\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports) {\n\nvar toString = {}.toString;\n\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n\n\n/***/ }),\n/* 40 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// false -> Array#indexOf\n// true  -> Array#includes\nvar toIObject = __webpack_require__(7);\nvar toLength = __webpack_require__(41);\nvar toAbsoluteIndex = __webpack_require__(42);\nmodule.exports = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {\n      if (O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n\n\n/***/ }),\n/* 41 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// 7.1.15 ToLength\nvar toInteger = __webpack_require__(18);\nvar min = Math.min;\nmodule.exports = function (it) {\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n\n\n/***/ }),\n/* 42 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar toInteger = __webpack_require__(18);\nvar max = Math.max;\nvar min = Math.min;\nmodule.exports = function (index, length) {\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};\n\n\n/***/ }),\n/* 43 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar shared = __webpack_require__(44)('keys');\nvar uid = __webpack_require__(45);\nmodule.exports = function (key) {\n  return shared[key] || (shared[key] = uid(key));\n};\n\n\n/***/ }),\n/* 44 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar global = __webpack_require__(11);\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || (global[SHARED] = {});\nmodule.exports = function (key) {\n  return store[key] || (store[key] = {});\n};\n\n\n/***/ }),\n/* 45 */\n/***/ (function(module, exports) {\n\nvar id = 0;\nvar px = Math.random();\nmodule.exports = function (key) {\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n\n\n/***/ }),\n/* 46 */\n/***/ (function(module, exports) {\n\n// IE 8- don't enum bug keys\nmodule.exports = (\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n).split(',');\n\n\n/***/ }),\n/* 47 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// optional / simple context binding\nvar aFunction = __webpack_require__(48);\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n\n\n/***/ }),\n/* 48 */\n/***/ (function(module, exports) {\n\nmodule.exports = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n\n\n/***/ }),\n/* 49 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar dP = __webpack_require__(21);\nvar createDesc = __webpack_require__(24);\nmodule.exports = __webpack_require__(6) ? function (object, key, value) {\n  return dP.f(object, key, createDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n\n\n/***/ }),\n/* 50 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isObject = __webpack_require__(12);\nmodule.exports = function (it) {\n  if (!isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n\n\n/***/ }),\n/* 51 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isObject = __webpack_require__(12);\nvar document = __webpack_require__(11).document;\n// typeof document.createElement is 'object' in old IE\nvar is = isObject(document) && isObject(document.createElement);\nmodule.exports = function (it) {\n  return is ? document.createElement(it) : {};\n};\n\n\n/***/ }),\n/* 52 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = { \"default\": __webpack_require__(53), __esModule: true };\n\n/***/ }),\n/* 53 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(54);\nvar $Object = __webpack_require__(5).Object;\nmodule.exports = function getOwnPropertyDescriptor(it, key) {\n  return $Object.getOwnPropertyDescriptor(it, key);\n};\n\n\n/***/ }),\n/* 54 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)\nvar toIObject = __webpack_require__(7);\nvar $getOwnPropertyDescriptor = __webpack_require__(55).f;\n\n__webpack_require__(19)('getOwnPropertyDescriptor', function () {\n  return function getOwnPropertyDescriptor(it, key) {\n    return $getOwnPropertyDescriptor(toIObject(it), key);\n  };\n});\n\n\n/***/ }),\n/* 55 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar pIE = __webpack_require__(56);\nvar createDesc = __webpack_require__(24);\nvar toIObject = __webpack_require__(7);\nvar toPrimitive = __webpack_require__(23);\nvar has = __webpack_require__(17);\nvar IE8_DOM_DEFINE = __webpack_require__(22);\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nexports.f = __webpack_require__(6) ? gOPD : function getOwnPropertyDescriptor(O, P) {\n  O = toIObject(O);\n  P = toPrimitive(P, true);\n  if (IE8_DOM_DEFINE) try {\n    return gOPD(O, P);\n  } catch (e) { /* empty */ }\n  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);\n};\n\n\n/***/ }),\n/* 56 */\n/***/ (function(module, exports) {\n\nexports.f = {}.propertyIsEnumerable;\n\n\n/***/ }),\n/* 57 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(58);\nvar $Object = __webpack_require__(5).Object;\nmodule.exports = function defineProperty(it, key, desc) {\n  return $Object.defineProperty(it, key, desc);\n};\n\n\n/***/ }),\n/* 58 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar $export = __webpack_require__(20);\n// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)\n$export($export.S + $export.F * !__webpack_require__(6), 'Object', { defineProperty: __webpack_require__(21).f });\n\n\n/***/ }),\n/* 59 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Directive = __webpack_require__(0);\nvar Expression = __webpack_require__(9);\n\nmodule.exports = new Directive({\n  type: Directive.TE,\n  prefix: false,\n\n  /**\n   * 初始化指令\n   * @returns {void} 无返回\n   */\n  bind: function /*istanbul ignore next*/bind() {\n    this.expr = new Expression(this.node.nodeValue, true);\n    this.node.nodeValue = '';\n  },\n\n  execute: function /*istanbul ignore next*/execute(scope) {\n    this.scope = scope;\n    var newValue = this.expr.execute(scope);\n    if (this.node.nodeValue !== newValue) {\n      this.node.nodeValue = newValue;\n    }\n  }\n\n});\n\n/***/ }),\n/* 60 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/*istanbul ignore next*/var _defineProperty = __webpack_require__(14);\n\nvar _defineProperty2 = _interopRequireDefault(_defineProperty);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Directive = __webpack_require__(0);\nvar utils = __webpack_require__(1);\nvar Scope = __webpack_require__(4);\n\nmodule.exports = new Directive({\n  level: Directive.LS + 1, //比 if 要高一个权重\n  final: true,\n  literal: true,\n\n  /**\n   * 初始化指令\n   * @returns {void} 无返回\n   */\n  bind: function /*istanbul ignore next*/bind() {\n    this.mountNode = document.createTextNode('');\n    this.node.parentNode.insertBefore(this.mountNode, this.node);\n    //虽然，bind 完成后，也会进行 attribute 的移除，\n    //但 each 指令必须先移除，否再进行 item 编译时 each 还会生效\n    this.node.removeAttribute(this.attribute.name);\n    this.node.parentNode.removeChild(this.node);\n    this.parseExpr();\n    this.eachItems = {};\n  },\n\n  parseExpr: function /*istanbul ignore next*/parseExpr() {\n    this.eachType = this.attribute.value.indexOf(' in ') > -1 ? 'in' : 'of';\n    var tokens = this.attribute.value.split(' ' + this.eachType + ' ');\n    var fnText = /*istanbul ignore next*/'with(scope){utils.each(' + tokens[1] + ',fn.bind(this,' + tokens[1] + '))}';\n    this.each = new Function('utils', 'scope', 'fn', fnText).bind(null, this.utils);\n    var names = tokens[0].split(',').map(function (name) {\n      return name.trim();\n    });\n    if (this.eachType == 'in') {\n      this.keyName = names[0];\n      this.valueName = names[1];\n    } else {\n      this.keyName = names[1];\n      this.valueName = names[0];\n    }\n  },\n\n  execute: function /*istanbul ignore next*/execute(scope) {\n    /*istanbul ignore next*/var _this = this;\n\n    var currentEachKeys = [];\n    var itemsFragment = document.createDocumentFragment();\n    var self = this;\n    this.each(scope, function (eachTarget, key) {\n      //创建新 scope，必须选创建再设置 prototype 或采用定义「属性」的方式\n      //因为指令参数指定的名称有可能和 scope 原有变量冲突\n      //将导致针对 watch 变量的赋值，从引用发循环\n      var newScope = new Scope(this.scope);\n      if (self.keyName) {\n        /*istanbul ignore next*/(0, _defineProperty2.default)(newScope, self.keyName, {\n          /*istanbul ignore next*/get: function get() {\n            return key;\n          }\n        });\n      }\n      //value 采用「属性」进行代理，否则将会使「双向」绑定无把回设值\n      if (self.valueName) {\n        /*istanbul ignore next*/(0, _defineProperty2.default)(newScope, self.valueName, {\n          /*istanbul ignore next*/get: function get() {\n            return eachTarget[key];\n          },\n          /*istanbul ignore next*/set: function set(value) {\n            eachTarget[key] = value;\n          }\n        });\n      }\n      var oldItem = this.eachItems[key];\n      if (oldItem) {\n        oldItem.handler(newScope);\n      } else {\n        var newItem = {};\n        //创建新元素\n        newItem.node = this.node.cloneNode(true);\n        itemsFragment.appendChild(newItem.node);\n        newItem.handler = this.compiler.compile(newItem.node);\n        newItem.handler(newScope);\n        this.eachItems[key] = newItem;\n      }\n      currentEachKeys.push(key);\n    }.bind(this));\n    utils.each(this.eachItems, function (key, item) {\n      if (currentEachKeys.some(function (k) /*istanbul ignore next*/{\n        return k == key;\n      })) return;\n      if (item.node.parentNode) {\n        item.node.parentNode.removeChild(item.node);\n      }\n      delete /*istanbul ignore next*/_this.eachItems[key];\n    }, this);\n    if (itemsFragment.childNodes.length > 0) {\n      this.mountNode.parentNode.insertBefore(itemsFragment, this.mountNode);\n    }\n  }\n\n});\n\n/***/ }),\n/* 61 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Directive = __webpack_require__(0);\n\nmodule.exports = new Directive({\n  level: Directive.LS,\n  final: true,\n\n  /**\n   * 初始化指令\n   * @returns {void} 无返回\n   */\n  bind: function /*istanbul ignore next*/bind() {\n    this.mountNode = document.createTextNode('');\n    this.node.parentNode.insertBefore(this.mountNode, this.node);\n    //虽然，bind 完成后，也会进行 attribute 的移除，\n    //但 if 指令必须先移除，否再进行 item 编译时 if 还会生效\n    this.node.removeAttribute(this.attribute.name);\n    this.node.parentNode.removeChild(this.node);\n  },\n\n  execute: function /*istanbul ignore next*/execute(scope) {\n    var newValue = this.expression.execute(scope);\n    if (newValue) {\n      //如果新计算的结果为 true 才执行 \n      this._handler = this._handler || this.compiler.compile(this.node);\n      this._handler(scope);\n      var node = this.node.$substitute || this.node;\n      if (!node.parentNode) {\n        this.mountNode.parentNode.insertBefore(node, this.mountNode);\n      }\n    } else {\n      var _node = this.node.$substitute || this.node;\n      if (_node.parentNode) _node.parentNode.removeChild(_node);\n    }\n  }\n\n});\n\n/***/ }),\n/* 62 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Directive = __webpack_require__(0);\n\nmodule.exports = new Directive({\n  update: function /*istanbul ignore next*/update(value) {\n    var target = this.node.$target || this.node;\n    target[this.decorates[0]] = value;\n  }\n  // execute: function (scope) {\n  //   this.scope = scope;\n  //   let newValue = this.expression.execute(scope);\n  //   let target = this.node.$target || this.node;\n  //   target[this.decorates[0]] = newValue;\n  // }\n});\n\n/***/ }),\n/* 63 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Directive = __webpack_require__(0);\n\nmodule.exports = new Directive({\n  update: function /*istanbul ignore next*/update(value) {\n    var target = this.node.$target || this.node;\n    if (target.setAttribute) {\n      target.setAttribute(this.decorates[0], value);\n    } else {\n      target[this.decorates[0]] = value;\n    }\n  }\n});\n\n/***/ }),\n/* 64 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Directive = __webpack_require__(0);\nvar EventEmitter = __webpack_require__(2);\nvar Scope = __webpack_require__(4);\n\nmodule.exports = new Directive({\n  literal: true,\n\n  /**\n   * 初始化指令\n   * @returns {void} 无返回\n   */\n  bind: function /*istanbul ignore next*/bind() {\n    var attrValue = this.attribute.value || '';\n    if (attrValue.indexOf('(') < 0 && attrValue.indexOf(')') < 0) {\n      attrValue += '($event)';\n    }\n    this.expr = new this.Expression(attrValue);\n    var eventTarget = this.node.$target || this.node;\n    this.emiter = new EventEmitter(eventTarget);\n    this.emiter.addListener(this.decorates[0], function (event) {\n      if (this.utils.isNull(this.scope)) return;\n      this.expr.execute(new Scope(this.scope, {\n        $event: event\n      }));\n    }.bind(this), false);\n  },\n\n  unbind: function /*istanbul ignore next*/unbind() {\n    this.emiter.removeListener();\n  },\n\n  execute: function /*istanbul ignore next*/execute(scope) {\n    this.scope = scope;\n  }\n\n});\n\n/***/ }),\n/* 65 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Directive = __webpack_require__(0);\n\nmodule.exports = new Directive({\n  update: function /*istanbul ignore next*/update(newValue) {\n    this.node.innerHTML = newValue;\n  }\n});\n\n/***/ }),\n/* 66 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Directive = __webpack_require__(0);\n\nmodule.exports = new Directive({\n  update: function /*istanbul ignore next*/update(newValue) {\n    this.node.innerText = newValue;\n  }\n});\n\n/***/ }),\n/* 67 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Directive = __webpack_require__(0);\n\nmodule.exports = new Directive({\n  level: Directive.LP,\n  final: true\n});\n\n/***/ }),\n/* 68 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Directive = __webpack_require__(0);\n\nmodule.exports = new Directive({\n  literal: true,\n\n  update: function /*istanbul ignore next*/update(id) {\n    if (id in this.scope) {\n      throw new Error('Conflicting component id `' + id + '`');\n    }\n    this.scope[id] = this.node.$target || this.node;\n  }\n\n});\n\n/***/ }),\n/* 69 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Directive = __webpack_require__(0);\n\nmodule.exports = new Directive({\n  level: Directive.LC,\n  literal: true,\n  prefix: false,\n\n  bind: function /*istanbul ignore next*/bind() {\n    this.node.removeAttribute(this.attribute.name);\n  }\n\n});\n\n/***/ }),\n/* 70 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Directive = __webpack_require__(0);\n\nmodule.exports = new Directive({\n  update: function /*istanbul ignore next*/update(value) {\n    this.node.style.display = value ? '' : 'none';\n  }\n});\n\n/***/ }),\n/* 71 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar SelectDirective = __webpack_require__(72);\nvar EditableDirective = __webpack_require__(73);\nvar InputDirective = __webpack_require__(74);\nvar RadioDirective = __webpack_require__(75);\nvar CheckboxDirective = __webpack_require__(76);\nvar PropDirective = __webpack_require__(77);\n\nvar Directive = function Directive(options) {\n  var node = options.node;\n  var tagName = node.tagName;\n  if (options.decorates[0]) {\n    return new PropDirective(options);\n  } else if (tagName == 'INPUT') {\n    var type = node.getAttribute('type');\n    if (type == 'radio') {\n      return new RadioDirective(options);\n    } else if (type == 'checkbox') {\n      return new CheckboxDirective(options);\n    } else {\n      return new InputDirective(options);\n    }\n  } else if (tagName == 'TEXTAREA') {\n    return new InputDirective(options);\n  } else if (tagName == 'SELECT') {\n    return new SelectDirective(options);\n  } else if (node.isContentEditable) {\n    return new EditableDirective(options);\n  } else {\n    throw new Error( /*istanbul ignore next*/'Directive `model` cannot be used on `' + tagName + '`');\n  }\n};\n\n//手动添加 classOptions\nDirective.options = {\n  level: Directive.LA\n};\n\nmodule.exports = Directive;\n\n/***/ }),\n/* 72 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Directive = __webpack_require__(0);\nvar EventEmitter = __webpack_require__(2);\nvar Scope = __webpack_require__(4);\n\nmodule.exports = new Directive({\n  final: true,\n\n  /**\n   * 初始化指令\n   * @returns {void} 无返回\n   */\n  bind: function /*istanbul ignore next*/bind() {\n    this.backExpr = new this.Expression( /*istanbul ignore next*/this.attribute.value + '=_value_');\n    this.node.removeAttribute(this.attribute.name);\n    this._handler = this.compiler.compile(this.node);\n    this.emiter = new EventEmitter(this.node);\n    this.emiter.addListener('change', function () {\n      if (this.utils.isNull(this.scope)) return;\n      var selectedOptions = this.node.selectedOptions;\n      var value = this.node.multiple ? [].slice.call(selectedOptions).map(function (option) {\n        return option.value;\n      }, this) : selectedOptions[0].value;\n      this.backExpr.execute(new Scope(this.scope, {\n        _value_: value\n      }));\n    }.bind(this), false);\n  },\n\n  unbind: function /*istanbul ignore next*/unbind() {\n    this.emiter.removeListener();\n  },\n\n  execute: function /*istanbul ignore next*/execute(scope) {\n    this.scope = scope;\n    this._handler(scope);\n    var value = this.expression.execute(scope);\n    if (!this.utils.isArray(value)) value = [value];\n    [].slice.call(this.node.options).forEach(function (option) {\n      option.selected = value.indexOf(option.value) > -1;\n    }, this);\n  }\n\n});\n\n/***/ }),\n/* 73 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Directive = __webpack_require__(0);\nvar EventEmitter = __webpack_require__(2);\nvar Scope = __webpack_require__(4);\n\nmodule.exports = new Directive({\n\n  /**\n   * 初始化指令\n   * @returns {void} 无返回\n   */\n  bind: function /*istanbul ignore next*/bind() {\n    this.backExpr = new this.Expression( /*istanbul ignore next*/this.attribute.value + '=_value_');\n    this.emiter = new EventEmitter(this.node);\n    this.emiter.addListener('input', function () {\n      if (this.utils.isNull(this.scope)) return;\n      this.backExpr.execute(new Scope(this.scope, {\n        _value_: this.node.innerHTML\n      }));\n    }.bind(this), false);\n  },\n\n  unbind: function /*istanbul ignore next*/unbind() {\n    this.emiter.removeListener();\n  },\n\n  execute: function /*istanbul ignore next*/execute(scope) {\n    var value = this.expression.execute(scope);\n    if (this.node.innerHTML !== value) {\n      this.node.innerHTML = value;\n    }\n  }\n\n});\n\n/***/ }),\n/* 74 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Directive = __webpack_require__(0);\nvar EventEmitter = __webpack_require__(2);\nvar Scope = __webpack_require__(4);\n\nmodule.exports = new Directive({\n\n  /**\n   * 初始化指令\n   * @returns {void} 无返回\n   */\n  bind: function /*istanbul ignore next*/bind() {\n    this.backExpr = new this.Expression( /*istanbul ignore next*/this.attribute.value + '=_value_');\n    this.emiter = new EventEmitter(this.node);\n    this.emiter.addListener('input', function () {\n      if (this.utils.isNull(this.scope)) return;\n      this.backExpr.execute(new Scope(this.scope, {\n        _value_: this.node.value\n      }));\n    }.bind(this), false);\n  },\n\n  unbind: function /*istanbul ignore next*/unbind() {\n    this.emiter.removeListener();\n  },\n\n  execute: function /*istanbul ignore next*/execute(scope) {\n    var value = this.expression.execute(scope);\n    if (this.node.value !== value) {\n      this.node.value = value;\n    }\n  }\n\n});\n\n/***/ }),\n/* 75 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Directive = __webpack_require__(0);\nvar EventEmitter = __webpack_require__(2);\nvar Scope = __webpack_require__(4);\n\nmodule.exports = new Directive({\n  /**\n   * 初始化指令\n   * @returns {void} 无返回\n   */\n  bind: function /*istanbul ignore next*/bind() {\n    this.backExpr = new this.Expression( /*istanbul ignore next*/this.attribute.value + '=_value_');\n    this.emiter = new EventEmitter(this.node);\n    this.emiter.addListener('change', function () {\n      if (this.utils.isNull(this.scope)) return;\n      this.backExpr.execute(new Scope(this.scope, {\n        _value_: this.node.value\n      }));\n    }.bind(this), false);\n  },\n\n  unbind: function /*istanbul ignore next*/unbind() {\n    this.emiter.removeListener();\n  },\n\n  execute: function /*istanbul ignore next*/execute(scope) {\n    this.scope = scope;\n    var value = this.expression.execute(scope);\n    this.node.checked = value == this.node.value;\n  }\n\n});\n\n/***/ }),\n/* 76 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Directive = __webpack_require__(0);\nvar EventEmitter = __webpack_require__(2);\nvar Scope = __webpack_require__(4);\n\nmodule.exports = new Directive({\n\n  /**\n   * 初始化指令\n   * @returns {void} 无返回\n   */\n  bind: function /*istanbul ignore next*/bind() {\n    this.backExpr = new this.Expression( /*istanbul ignore next*/this.attribute.value + '=_value_');\n    this.emiter = new EventEmitter(this.node);\n    this.emiter.addListener('change', function () {\n      if (this.utils.isNull(this.scope)) return;\n      var value = this.expression.execute(this.scope);\n      if (this.utils.isArray(value) && this.node.checked) {\n        value.push(this.node.value);\n      } else if (this.utils.isArray(value) && !this.node.checked) {\n        var index = value.indexOf(this.node.value);\n        value.splice(index, 1);\n      } else {\n        this.backExpr.execute(new Scope(this.scope, {\n          _value_: this.node.checked\n        }));\n      }\n    }.bind(this), false);\n  },\n\n  unbind: function /*istanbul ignore next*/unbind() {\n    this.emiter.removeListener();\n  },\n\n  execute: function /*istanbul ignore next*/execute(scope) {\n    this.scope = scope;\n    var value = this.expression.execute(scope);\n    if (this.utils.isArray(value)) {\n      this.node.checked = value.indexOf(this.node.value) > -1;\n    } else {\n      this.node.checked = value;\n    }\n  }\n\n});\n\n/***/ }),\n/* 77 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Directive = __webpack_require__(0);\nvar Scope = __webpack_require__(4);\n\nmodule.exports = new Directive({\n\n  /**\n   * 初始化指令\n   * @returns {void} 无返回\n   */\n  bind: function /*istanbul ignore next*/bind() {\n    /*istanbul ignore next*/var _this = this;\n\n    this.target = this.node.$target;\n    this.backExpr = new this.Expression( /*istanbul ignore next*/this.attribute.value + '=_value_');\n    this.bindProp = this.decorates[0];\n    if (!this.target) {\n      throw new Error( /*istanbul ignore next*/'Directive `model:' + this.bindProp + '` cannot be used on `' + this.node.tagName + '`');\n    }\n    this.watcher = this.target.$watch(this.bindProp, function (value) {\n      if ( /*istanbul ignore next*/_this.utils.isNull( /*istanbul ignore next*/_this.scope)) return;\n      /*istanbul ignore next*/_this.backExpr.execute(new Scope( /*istanbul ignore next*/_this.scope, {\n        _value_: value\n      }));\n    });\n  },\n\n  unbind: function /*istanbul ignore next*/unbind() {\n    this.target.$unWatch(this.watcher);\n  },\n\n  update: function /*istanbul ignore next*/update(value) {\n    this.target[this.bindProp] = value;\n  }\n\n});\n\n/***/ }),\n/* 78 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Directive = __webpack_require__(0);\n\nmodule.exports = new Directive({\n  execute: function /*istanbul ignore next*/execute(scope) {\n    /*istanbul ignore next*/var _this = this;\n\n    var state = this.expression.execute(scope);\n    setTimeout(function () {\n      if (state) /*istanbul ignore next*/_this.node.focus();else /*istanbul ignore next*/_this.node.blur();\n    }, 0);\n  }\n});\n\n/***/ }),\n/* 79 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Directive = __webpack_require__(0);\n\n/**\n * 通用的 attribute 指令\n * 用于所有 attribute 的处理\n * 例如:\n *  <div attr1=\"{{expr1}}\" {{expr2}} {{attr3}}=\"{{expr3}}\">\n *  </div>\n */\nmodule.exports = new Directive({\n  level: Directive.LA,\n  prefix: false,\n  literal: true,\n  remove: false,\n\n  /**\n   * 初始化指令\n   * @returns {void} 无返回\n   */\n  bind: function /*istanbul ignore next*/bind() {\n    this.computedName = this.attribute.name;\n    this.computedValue = this.attribute.value;\n    this.nameExpr = new this.Expression(this.attribute.name, true);\n    this.valueExpr = new this.Expression(this.attribute.value, true);\n  },\n\n  execute: function /*istanbul ignore next*/execute(scope) {\n    var target = this.node.$target || this.node;\n    var newComputedName = this.nameExpr.execute(scope);\n    if (this.computedName !== newComputedName) {\n      //移除旧名称\n      if (target.removeAttribute) {\n        target.removeAttribute(this.computedName);\n      }\n      //设置新名称\n      this.computedName = newComputedName;\n      if (!this.utils.isNull(this.computedName) && this.computedName.length > 0) {\n        if (target.setAttribute) {\n          target.setAttribute(this.computedName, this.computedValue || '');\n        }\n      }\n    }\n    var newComputeValue = this.valueExpr.execute(scope);\n    if (this.computedValue !== newComputeValue) {\n      this.computedValue = newComputeValue;\n      if (target.setAttribute) {\n        target.setAttribute(this.computedName, this.computedValue || '');\n      } else {\n        target[this.computedName] = this.computedValue;\n      }\n    }\n  }\n\n});\n\n/***/ }),\n/* 80 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Class = __webpack_require__(3);\nvar Observer = __webpack_require__(10);\nvar EventEmitter = __webpack_require__(2);\nvar Compiler = __webpack_require__(25);\n\n/**\n * 模板类\n * 可能通过 element 作为参数，创建一个模板实例\n */\nvar Template = new Class({\n\n  $extends: EventEmitter,\n\n  /**\n   * 构建一个模板板实例\n   * @param {HTMLNode} element HTML 元素\n   * @param {Object} options 选项\n   * @returns {void} 无返回\n   */\n  constructor: function /*istanbul ignore next*/constructor(element, options) {\n    options = options || {};\n    EventEmitter.call(this);\n    this.options = options;\n    this.element = element;\n    this.compiler = options.compiler || new Compiler(options);\n    this.render = this.compiler.compile(this.element);\n    this.update = this.update.bind(this);\n    this._update = this._update.bind(this);\n    this._updateTimer = 0;\n  },\n\n  /**\n   * 更新当前模板 (会过滤不必要的更新)\n   * @returns {void} 无返回\n   */\n  update: function /*istanbul ignore next*/update() {\n    if (this._updateTimer) {\n      clearTimeout(this._updateTimer);\n      this._updateTimer = null;\n    }\n    this._updateTimer = setTimeout(this._update, 0);\n  },\n\n  /**\n   * 更新当前模板内部方法 \n   * @returns {void} 无返回\n   */\n  _update: function /*istanbul ignore next*/_update() {\n    if (!this._updateTimer || !this.observer) return;\n    this.emit('update', this);\n    this.render(this.observer.target);\n    this._onBind();\n  },\n\n  /**\n   * 在绑定成功时\n   * @returns {void} 无返回\n   */\n  _onBind: function /*istanbul ignore next*/_onBind() {\n    if (this._bound) return;\n    this._bound = true;\n    this.emit('bind', this);\n  },\n\n  /**\n   * 将模板绑定到一个 scope\n   * @param {Object} scope 绑定的上下文对象\n   * @param {boolean} disableFirst 是否禁用第一次的自动渲染\n   * @returns {void} 无返回\n   */\n  bind: function /*istanbul ignore next*/bind(scope, disableFirst) {\n    if (!scope) return;\n    this.unbind();\n    this.observer = new Observer(scope, {\n      root: this.options.root\n    });\n    scope.$self = scope;\n    this.observer.on('change', this.update);\n    if (disableFirst) {\n      this._onBind();\n    } else {\n      this.update();\n    }\n  },\n\n  /**\n   * 解绑定\n   * @returns {void} 无返回\n   */\n  unbind: function /*istanbul ignore next*/unbind() {\n    if (!this.observer) return;\n    this.observer.removeListener('change', this.update);\n    this.observer.clearReference();\n    this.observer = null;\n  },\n\n  /**\n   * 释放\n   * @returns {void} 无返回\n   */\n  dispose: function /*istanbul ignore next*/dispose() {\n    this.unbind();\n    this.render.dispose();\n  }\n\n});\n\nmodule.exports = Template;\n\n/***/ }),\n/* 81 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Component = __webpack_require__(27);\nvar components = __webpack_require__(28);\nvar directives = __webpack_require__(8).directives;\n\nComponent.components = components;\nComponent.Component = Component;\n\nComponent.component = function (name, component) {\n  if (!component) return components[name];\n  components[name] = component;\n};\n\nComponent.directive = function (name, directive) {\n  if (!directive) return directives[name];\n  directives[name] = directive;\n};\n\nmodule.exports = Component;\n\n/***/ }),\n/* 82 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Template = __webpack_require__(8);\nvar Directive = Template.Directive;\n\n/**\n * 创建一个组件指令\n * @param {object} options 选项\n * @returns {object} 组件指令\n */\nfunction ComponentDirective(options) {\n\n  return new Directive({\n    type: Directive.TE,\n    literal: true,\n    final: true,\n    level: Directive.LE,\n\n    bind: function /*istanbul ignore next*/bind() {\n      this.component = new options.component({\n        deferReady: true,\n        parent: options.parent || this.scope\n      });\n      this.handleAttrs();\n      this.node.$target = this.component;\n      this.handler = this.compiler.compile(this.node, {\n        element: false,\n        children: false\n      });\n      this.handleContents();\n      this.component.$mount(this.node);\n      if (this.node.parentNode) {\n        this.node.parentNode.removeChild(this.node);\n      }\n    },\n\n    handleAttrs: function /*istanbul ignore next*/handleAttrs() {\n      this.attrs = [].slice.call(this.node.attributes);\n      var directiveRegexp = new RegExp('^' + this.prefix + ':', 'i');\n      this.attrs.forEach(function (attr) {\n        if (directiveRegexp.test(attr.name)) return;\n        if (attr.name in this.component.$properties) return;\n        this.component.$element.setAttribute(attr.name, attr.value);\n        this.node.removeAttribute(attr.name);\n      }, this);\n    },\n\n    handleContents: function /*istanbul ignore next*/handleContents() {\n      this.placeHandlers = [];\n      var places = [].slice.call(this.component.$element.querySelectorAll('[' + this.prefix + '\\\\:content]'));\n      places.forEach(function (place) {\n        //将内容插入到指定的「位置」\n        var contents = null;\n        var selector = place.getAttribute(this.prefix + ':content');\n        if (!selector) {\n          contents = [].slice.call(this.node.childNodes);\n        } else {\n          contents = [].slice.call(this.node.querySelectorAll(selector));\n        }\n        if (!contents || contents.length < 1) return;\n        place.innerHTML = '';\n        contents.forEach(function (content) {\n          place.appendChild(content.cloneNode(true));\n        }, this);\n        //编译插入后的子「内容模板」\n        var handler = this.compiler.compile(place);\n        this.placeHandlers.push(handler);\n      }, this);\n    },\n\n    execute: function /*istanbul ignore next*/execute(scope) {\n      this.handler(scope);\n      if (!this._ready_) {\n        this._ready_ = true;\n        this.component.$callHook('ready');\n      }\n      this.placeHandlers.forEach(function (handler) {\n        handler(scope);\n      }, this);\n    }\n\n  });\n}\n\nmodule.exports = ComponentDirective;\n\n/***/ }),\n/* 83 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Component = __webpack_require__(27);\nvar utils = __webpack_require__(1);\n\n/**\n * 内置视图组件\n * 可以加载并显示其它组件，并可以指定「转场效果」\n */\nvar View = new Component({\n\n  template: '<div></div>',\n\n  properties: {\n\n    /**\n     * 显示到视图中的组件\n     */\n    component: {\n      test: function /*istanbul ignore next*/test(value) {\n        if (!value) return false;\n        return value instanceof Component || utils.isString(value);\n      },\n      set: function /*istanbul ignore next*/set(component) {\n        if (this._transitioning) return;\n        this._transitioning = true;\n        //如果 value 是字符串则尝试从 $parent.components 中获取组件类 \n        if (utils.isString(component)) {\n          if (this.$parent && this.$parent.$components) {\n            this.component = this.$parent.$components[component];\n          } else {\n            this.component = null;\n          }\n          return;\n        }\n        //声明新旧组件变量\n        var newComponentInstance = null;\n        var oldComponentInstance = this.componentInstance;\n        //创建新组件实例\n        if (utils.isFunction(component)) {\n          newComponentInstance = new component({\n            parent: this\n          });\n        } else {\n          component.$setParent(this);\n          newComponentInstance = component;\n        }\n        //通过转场控制器进行转场准备\n        this.transition.prep(newComponentInstance, oldComponentInstance);\n        //挂载新组件实例\n        newComponentInstance.$appendTo(this.$element);\n        //通过转场控制器进行转场\n        this.transition.go(newComponentInstance, oldComponentInstance, function () {\n          //触发相关事件\n          this.$emit('enter', newComponentInstance);\n          this.$emit('leave', oldComponentInstance);\n          //销毁旧组件实例\n          if (oldComponentInstance) {\n            oldComponentInstance.$dispose();\n          }\n          this._transitioning = false;\n        }.bind(this));\n        //暂存当前组件实例\n        this.componentInstance = newComponentInstance;\n      },\n      get: function /*istanbul ignore next*/get() {\n        return this._Component;\n      }\n    },\n\n    /**\n     * 视图的转场控制对象\n     */\n    transition: {\n      get: function /*istanbul ignore next*/get() {\n        return this._transition || View.transition;\n      },\n      set: function /*istanbul ignore next*/set(transition) {\n        if (this._transitioning) return;\n        if (!transition || utils.isFunction(transition.prep) && utils.isFunction(transition.go)) {\n          if (this._transition && utils.isFunction(this._transition.clean)) {\n            this._transition.clean(this);\n          }\n          if (transition && utils.isFunction(transition.init)) {\n            transition.init(this);\n          }\n          this._transition = transition;\n        } else {\n          throw new Error('Invalid transition');\n        }\n      }\n    }\n  },\n\n  /**\n   * 切换到指定的组件\n   * @param {Component} component 组件\n   * @param {transition} transition 转场控制组件\n   * @returns {void} 无返回\n   */\n  switchTo: function /*istanbul ignore next*/switchTo(component, transition) {\n    if (transition) {\n      this.transition = transition;\n    }\n    this.component = component;\n  }\n\n});\n\n/**\n * 默认转场设置\n */\nView.transition = {\n  //init: function () { },\n  //clean: function () { },\n\n  /**\n   * 转场开始前的准备\n   * @param {Component} newComponent 新组件\n   * @param {Component} oldComponent 旧组件\n   * @returns {void} 无返回\n   */\n  prep: function /*istanbul ignore next*/prep(newComponent, oldComponent) {\n    if (oldComponent) oldComponent.$element.style.display = 'none';\n  },\n\n  /**\n   * 执行转场动画\n   * @param {Component} newComponent 新组件\n   * @param {Component} oldComponent 旧组件\n   * @param {Function} done 完成后的回调\n   * @returns {void} 无返回\n   */\n  go: function /*istanbul ignore next*/go(newComponent, oldComponent, done) {\n    done();\n  }\n};\n\nmodule.exports = View;\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// mokit.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 29);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 0b32f596f499ea9663d3","const Class = require('cify');\nconst utils = require('ntils');\nconst Expression = require('./expression');\n\n/**\n * 指令定义工场函数\n * @param {Object} classOptions 选项\n * @returns {Directive} 指令类\n */\nfunction Directive(classOptions) {\n  //处理指令选项\n  classOptions = classOptions || {};\n  classOptions.type = classOptions.type || Directive.TA;\n  classOptions.level = classOptions.level || Directive.LG;\n\n  //生成指令类\n  const DirectiveClass = new Class({\n\n    $extends: classOptions,\n    //指令构建函数\n    constructor: function (instanceOptions) {\n      utils.copy(instanceOptions, this);\n    },\n    //挂载实例上的 options\n    options: classOptions,\n    //挂载实例核心方法\n    bind: classOptions.bind || utils.noop,\n    execute: classOptions.execute || function (scope) {\n      this.scope = scope;\n      if (this.options.type === Directive.TE) {\n        return this.update();\n      }\n      let newValue = this.options.literal ?\n        this.attribute.value : this.expression.execute(scope);\n      if (!utils.deepEqual(this._value_, newValue)) {\n        this.update(newValue, this._value_);\n        this._value_ = newValue;\n      }\n    },\n    update: classOptions.update || utils.noop,\n    unbind: classOptions.unbind || utils.noop,\n    //挂载指令常用的类型\n    utils: utils,\n    Expression: Expression\n  });\n  //向指令类添加「指令定义信息」\n  DirectiveClass.options = classOptions;\n  utils.setPrototypeOf(DirectiveClass, classOptions);\n  return DirectiveClass;\n}\n\n//指令类型\nDirective.TA = 'A';\nDirective.TE = 'E';\n\n//指令级别\nDirective.LP = 3000;  //prevent\nDirective.LS = 2000;  //statement\nDirective.LE = 1000;  //eleemtn\nDirective.LG = 0;     //general\nDirective.LA = -1000; //any attribute\nDirective.LC = -2000; //cloak\n\nmodule.exports = Directive;\n\n\n// WEBPACK FOOTER //\n// ./src/template/directive.js","(function (ntils) {\n\n  /**\n   * 空函数\n   */\n  ntils.noop = function () { };\n\n  /**\n   * 验证一个对象是否为NULL\n   * @method isNull\n   * @param  {Object}  obj 要验证的对象\n   * @return {Boolean}     结果\n   * @static\n   */\n  ntils.isNull = function (obj) {\n    return obj === null || typeof obj === \"undefined\";\n  };\n\n  /**\n   * 除去字符串两端的空格\n   * @method trim\n   * @param  {String} str 源字符串\n   * @return {String}     结果字符串\n   * @static\n   */\n  ntils.trim = function (str) {\n    if (this.isNull(str)) return str;\n    if (str.trim) {\n      return str.trim();\n    } else {\n      return str.replace(/(^[\\\\s]*)|([\\\\s]*$)/g, \"\");\n    }\n  };\n\n  /**\n   * 替换所有\n   * @method replace\n   * @param {String} str 源字符串\n   * @param {String} str1 要替换的字符串\n   * @param {String} str2 替换为的字符串\n   * @static\n   */\n  ntils.replace = function (str, str1, str2) {\n    if (this.isNull(str)) return str;\n    return str.replace(new RegExp(str1, 'g'), str2);\n  };\n\n  /**\n   * 从字符串开头匹配\n   * @method startWith\n   * @param {String} str1 源字符串\n   * @param {String} str2 要匹配的字符串\n   * @return {Boolean} 匹配结果\n   * @static\n   */\n  ntils.startWith = function (str1, str2) {\n    if (this.isNull(str1) || this.isNull(str2)) return false;\n    return str1.indexOf(str2) === 0;\n  };\n\n  /**\n   * 是否包含\n   * @method contains\n   * @param {String} str1 源字符串\n   * @param {String} str2 检查包括字符串\n   * @return {Boolean} 结果\n   * @static\n   */\n  ntils.contains = function (str1, str2) {\n    var self = this;\n    if (this.isNull(str1) || this.isNull(str2)) return false;\n    return str1.indexOf(str2) > -1;\n  };\n\n  /**\n   * 从字符串结束匹配\n   * @method endWidth\n   * @param {String} str1 源字符串\n   * @param {String} str2 匹配字符串\n   * @return {Boolean} 匹配结果\n   * @static\n   */\n  ntils.endWith = function (str1, str2) {\n    if (this.isNull(str1) || this.isNull(str2)) return false;\n    return str1.indexOf(str2) === (str1.length - str2.length);\n  };\n\n  /**\n   * 是否包含属性\n   * @method hasProperty\n   * @param  {Object}  obj  对象\n   * @param  {String}  name 属性名\n   * @return {Boolean}      结果\n   * @static\n   */\n  ntils.has = ntils.hasProperty = function (obj, name) {\n    if (this.isNull(obj) || this.isNull(name)) return false;\n    return (name in obj) || (obj.hasOwnProperty(name));\n  };\n\n  /**\n   * 验证一个对象是否为Function\n   * @method isFunction\n   * @param  {Object}  obj 要验证的对象\n   * @return {Boolean}     结果\n   * @static\n   */\n  ntils.isFunction = function (obj) {\n    if (this.isNull(obj)) return false;\n    return typeof obj === \"function\";\n  };\n\n  /**\n   * 验证一个对象是否为String\n   * @method isString\n   * @param  {Object}  obj 要验证的对象\n   * @return {Boolean}     结果\n   * @static\n   */\n  ntils.isString = function (obj) {\n    if (this.isNull(obj)) return false;\n    return typeof obj === 'string' || obj instanceof String;\n  };\n\n  /**\n   * 验证一个对象是否为Number\n   * @method isNumber\n   * @param  {Object}  obj 要验证的对象\n   * @return {Boolean}     结果\n   * @static\n   */\n  ntils.isNumber = function (obj) {\n    if (this.isNull(obj)) return false;\n    return typeof obj === 'number' || obj instanceof Number;\n  };\n\n  /**\n   * 验证一个对象是否为Boolean\n   * @method isBoolean\n   * @param  {Object}  obj 要验证的对象\n   * @return {Boolean}     结果\n   * @static\n   */\n  ntils.isBoolean = function (obj) {\n    if (this.isNull(obj)) return false;\n    return typeof obj === 'boolean' || obj instanceof Boolean;\n  };\n\n  /**\n   * 验证一个对象是否为HTML Element\n   * @method isElement\n   * @param  {Object}  obj 要验证的对象\n   * @return {Boolean}     结果\n   * @static\n   */\n  ntils.isElement = function (obj) {\n    if (this.isNull(obj)) return false;\n    if (window.Element) {\n      return obj instanceof Element;\n    } else {\n      return (obj.tagName && obj.nodeType && obj.nodeName && obj.attributes && obj.ownerDocument);\n    }\n  };\n\n  /**\n   * 验证一个对象是否为HTML Text Element\n   * @method isText\n   * @param  {Object}  obj 要验证的对象\n   * @return {Boolean}     结果\n   * @static\n   */\n  ntils.isText = function (obj) {\n    if (this.isNull(obj)) return false;\n    return obj instanceof Text;\n  };\n\n  /**\n   * 验证一个对象是否为Object\n   * @method isObject\n   * @param  {Object}  obj 要验证的对象\n   * @return {Boolean}     结果\n   * @static\n   */\n  ntils.isObject = function (obj) {\n    if (this.isNull(obj)) return false;\n    return typeof obj === \"object\";\n  };\n\n  /**\n   * 验证一个对象是否为Array或伪Array\n   * @method isArray\n   * @param  {Object}  obj 要验证的对象\n   * @return {Boolean}     结果\n   * @static\n   */\n  ntils.isArray = function (obj) {\n    if (this.isNull(obj)) return false;\n    var v1 = Object.prototype.toString.call(obj) === '[object Array]';\n    var v2 = obj instanceof Array;\n    var v3 = !this.isString(obj) && this.isNumber(obj.length) && this.isFunction(obj.splice);\n    var v4 = !this.isString(obj) && this.isNumber(obj.length) && obj[0];\n    return v1 || v2 || v3 || v4;\n  };\n\n  /**\n   * 验证是不是一个日期对象\n   * @method isDate\n   * @param {Object} val   要检查的对象\n   * @return {Boolean}           结果\n   * @static\n   */\n  ntils.isDate = function (val) {\n    if (this.isNull(val)) return false;\n    return val instanceof Date;\n  };\n\n  /**\n   * 验证是不是一个正则对象\n   * @method isDate\n   * @param {Object} val   要检查的对象\n   * @return {Boolean}           结果\n   * @static\n   */\n  ntils.isRegexp = function (val) {\n    return val instanceof RegExp;\n  };\n\n  /**\n   * 转换为数组\n   * @method toArray\n   * @param {Array|Object} array 伪数组\n   * @return {Array} 转换结果数组\n   * @static\n   */\n  ntils.toArray = function (array) {\n    if (this.isNull(array)) return [];\n    return Array.prototype.slice.call(array);\n  };\n\n  /**\n   * 转为日期格式\n   * @method toDate\n   * @param {Number|String} val 日期字符串或整型数值\n   * @return {Date} 日期对象\n   * @static\n   */\n  ntils.toDate = function (val) {\n    var self = this;\n    if (self.isNumber(val))\n      return new Date(val);\n    else if (self.isString(val))\n      return new Date(self.replace(self.replace(val, '-', '/'), 'T', ' '));\n    else if (self.isDate(val))\n      return val;\n    else\n      return null;\n  };\n\n  /**\n   * 遍历一个对像或数组\n   * @method each\n   * @param  {Object or Array}   obj  要遍历的数组或对象\n   * @param  {Function} fn            处理函数\n   * @return {void}                   无返回值\n   * @static\n   */\n  ntils.each = function (list, handler, scope) {\n    if (this.isNull(list) || this.isNull(handler)) return;\n    if (this.isArray(list)) {\n      var listLength = list.length;\n      for (var i = 0; i < listLength; i++) {\n        var rs = handler.call(scope || list[i], i, list[i]);\n        if (!this.isNull(rs)) return rs;\n      }\n    } else {\n      for (var key in list) {\n        var rs = handler.call(scope || list[key], key, list[key]);\n        if (!this.isNull(rs)) return rs;\n      }\n    }\n  };\n\n  /**\n   * 格式化日期\n   * @method formatDate\n   * @param {Date|String|Number} date 日期\n   * @param {String} format 格式化字符串\n   * @param {object} dict 反译字典\n   * @return {String} 格式化结果\n   * @static\n   */\n  ntils.formatDate = function (date, format, dict) {\n    if (this.isNull(format) || this.isNull(date)) return date;\n    date = this.toDate(date);\n    dict = dict || {};\n    var placeholder = {\n      \"M+\": date.getMonth() + 1, //month\n      \"d+\": date.getDate(), //day\n      \"h+\": date.getHours(), //hour\n      \"m+\": date.getMinutes(), //minute\n      \"s+\": date.getSeconds(), //second\n      \"w+\": date.getDay(), //week\n      \"q+\": Math.floor((date.getMonth() + 3) / 3), //quarter\n      \"S\": date.getMilliseconds() //millisecond\n    }\n    if (/(y+)/.test(format)) {\n      format = format.replace(RegExp.$1, (date.getFullYear() + \"\").substr(4 - RegExp.$1.length));\n    }\n    for (var key in placeholder) {\n      if (new RegExp(\"(\" + key + \")\").test(format)) {\n        var value = placeholder[key];\n        value = dict[value] || value;\n        format = format.replace(RegExp.$1, RegExp.$1.length == 1\n          ? value : (\"00\" + value).substr((\"\" + value).length));\n      }\n    }\n    return format;\n  };\n\n  /**\n   * 拷贝对象\n   * @method copy\n   * @param {Object} src 源对象\n   * @param {Object} dst 目标对象\n   * @static\n   */\n  ntils.copy = function (src, dst, igonres) {\n    dst = dst || (this.isArray(src) ? [] : {});\n    this.each(src, function (key) {\n      if (igonres && igonres.indexOf(key) > -1) return;\n      delete dst[key];\n      if (Object.getOwnPropertyDescriptor) {\n        try {\n          Object.defineProperty(dst, key, Object.getOwnPropertyDescriptor(src, key));\n        } catch (ex) {\n          dst[key] = src[key];\n        }\n      } else {\n        dst[key] = src[key];\n      }\n    })\n    return dst;\n  };\n\n  /**\n   * 深度克隆对象\n   * @method clone\n   * @param {Object} src 源对象\n   * @return {Object} 新对象\n   * @static\n   */\n  ntils.clone = function (src, igonres) {\n    if (this.isNull(src) ||\n      this.isString(src) ||\n      this.isNumber(src) ||\n      this.isBoolean(src) ||\n      this.isDate(src)) {\n      return src;\n    }\n    var objClone = src;\n    try {\n      objClone = new src.constructor();\n    } catch (ex) { }\n    this.each(src, function (key, value) {\n      if (objClone[key] != value && !this.contains(igonres, key)) {\n        if (this.isObject(value)) {\n          objClone[key] = this.clone(value, igonres);\n        } else {\n          objClone[key] = value;\n        }\n      }\n    }, this);\n    ['toString', 'valueOf'].forEach(function (key) {\n      if (this.contains(igonres, key)) return;\n      this.defineFreezeProp(objClone, key, src[key]);\n    }, this);\n    return objClone;\n  };\n\n  /**\n   * 合并对象\n   * @method mix\n   * @return 合并后的对象\n   * @param {Object} dst 目标对象\n   * @param {Object} src 源对象\n   * @param {Array} igonres 忽略的属性名,\n   * @param {Number} mode 模式\n   */\n  ntils.mix = function (dst, src, igonres, mode, igonreNull) {\n    //根据模式来判断，默认是Obj to Obj的  \n    if (mode) {\n      switch (mode) {\n        case 1: // proto to proto  \n          return ntils.mix(dst.prototype, src.prototype, igonres, 0);\n        case 2: // object to object and proto to proto  \n          ntils.mix(dst.prototype, src.prototype, igonres, 0);\n          break; // pass through  \n        case 3: // proto to static  \n          return ntils.mix(dst, src.prototype, igonres, 0);\n        case 4: // static to proto  \n          return ntils.mix(dst.prototype, src, igonres, 0);\n        default: // object to object is what happens below  \n      }\n    }\n    //---\n    src = src || {};\n    dst = dst || (this.isArray(src) ? [] : {});\n    this.keys(src).forEach(function (key) {\n      if (this.contains(igonres, key)) return;\n      if (igonreNull && this.isNull(src[key])) return;\n      if (this.isObject(src[key]) &&\n        (src[key].constructor == Object ||\n          src[key].constructor == Array ||\n          src[key].constructor == null)) {\n        dst[key] = ntils.mix(dst[key], src[key], igonres, 0, igonreNull);\n      } else {\n        dst[key] = src[key];\n      }\n    }, this);\n    return dst;\n  };\n\n  /**\n   * 定义不可遍历的属性\n   **/\n  ntils.defineFreezeProp = function (obj, name, value) {\n    try {\n      Object.defineProperty(obj, name, {\n        value: value,\n        enumerable: false,\n        configurable: true, //能不能重写定义\n        writable: false //能不能用「赋值」运算更改\n      });\n    } catch (err) {\n      obj[name] = value;\n    }\n  };\n\n  /**\n   * 获取所有 key \n   */\n  ntils.keys = function (obj) {\n    if (Object.keys) return Object.keys(obj);\n    var keys = [];\n    this.each(obj, function (key) {\n      keys.push(key);\n    });\n    return keys;\n  };\n\n  /**\n   * 创建一个对象\n   */\n  ntils.create = function (proto, props) {\n    if (Object.create) return Object.create(proto, props);\n    var Cotr = function () { };\n    Cotr.prototype = proto;\n    var obj = new Cotr();\n    if (props) this.copy(props, obj);\n    return obj;\n  };\n\n  /**\n   * 设置 proto\n   * 在不支持 setPrototypeOf 也不支持 __proto__ 的浏览器\n   * 中，会采用 copy 方式\n   */\n  ntils.setPrototypeOf = function (obj, proto) {\n    if (Object.setPrototypeOf) {\n      return Object.setPrototypeOf(obj, proto || this.create(null));\n    } else {\n      if (!('__proto__' in Object)) this.copy(proto, obj);\n      obj.__proto__ = proto;\n    }\n  };\n\n  /**\n   * 获取 proto\n   */\n  ntils.getPrototypeOf = function (obj) {\n    if (obj.__proto__) return obj.__proto__;\n    if (Object.getPrototypeOf) return Object.getPrototypeOf(obj);\n    if (obj.constructor) return obj.constructor.prototype;\n  };\n\n  /**\n   * 是否深度相等\n   */\n  ntils.deepEqual = function (a, b) {\n    if (a === b) return true;\n    if (!this.isObject(a) || !this.isObject(b)) return false;\n    var aKeys = this.keys(a);\n    var bKeys = this.keys(b);\n    if (aKeys.length !== bKeys.length) return false;\n    var allKeys = aKeys.concat(bKeys);\n    var checkedMap = this.create(null);\n    var result = true;\n    this.each(allKeys, function (i, key) {\n      if (checkedMap[key]) return;\n      if (!this.deepEqual(a[key], b[key])) result = false;\n      checkedMap[key] = true;\n    }, this);\n    return result;\n  };\n\n  /**\n   * 从一个数值循环到别一个数\n   * @param {number} fromNum 开始数值\n   * @param {Number} toNum 结束数值\n   * @param {Number} step 步长值\n   * @param {function} handler 执行函数\n   * @returns {void} 无返回\n   */\n  ntils.fromTo = function (fromNum, toNum, step, handler) {\n    if (!handler) handler = [step, step = handler][0];\n    step = Math.abs(step || 1);\n    if (fromNum < toNum) {\n      for (var i = fromNum; i <= toNum; i += step) handler(i);\n    } else {\n      for (var i = fromNum; i >= toNum; i -= step) handler(i);\n    }\n  };\n\n  /**\n   * 生成一个Guid\n   * @method newGuid\n   * @return {String} GUID字符串\n   * @static\n   */\n  ntils.newGuid = function () {\n    var S4 = function () {\n      return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\n    };\n    return (S4() + S4() + \"-\" + S4() + \"-\" + S4() + \"-\" + S4() + \"-\" + S4() + S4() + S4());\n  };\n\n  /**\n   * 对象变换\n   **/\n  ntils.map = function (list, fn) {\n    var buffer = this.isArray(list) ? [] : {};\n    this.each(list, function (name, value) {\n      buffer[name] = fn(name, value);\n    });\n    return buffer;\n  };\n\n  /**\n   * 通过路径设置属性值\n   */\n  ntils.setByPath = function (obj, path, value) {\n    if (this.isNull(obj) || this.isNull(path) || path === '') {\n      return;\n    }\n    if (!this.isArray(path)) {\n      path = path.replace(/\\[/, '.').replace(/\\]/, '.').split('.');\n    }\n    this.each(path, function (index, name) {\n      if (this.isNull(name) || name.length < 1) return;\n      if (index === path.length - 1) {\n        obj[name] = value;\n      } else {\n        obj[name] = obj[name] || {};\n        obj = obj[name];\n      }\n    }, this);\n  };\n\n  /**\n   * 通过路径获取属性值\n   */\n  ntils.getByPath = function (obj, path) {\n    if (this.isNull(obj) || this.isNull(path) || path === '') {\n      return obj;\n    }\n    if (!this.isArray(path)) {\n      path = path.replace(/\\[/, '.').replace(/\\]/, '.').split('.');\n    }\n    this.each(path, function (index, name) {\n      if (this.isNull(name) || name.length < 1) return;\n      if (!this.isNull(obj)) obj = obj[name];\n    }, this);\n    return obj;\n  };\n\n  /**\n   * 数组去重\n   **/\n  ntils.unique = function (array) {\n    if (this.isNull(array)) return array;\n    var newArray = [];\n    this.each(array, function (i, value) {\n      if (newArray.indexOf(value) > -1) return;\n      newArray.push(value);\n    });\n    return newArray;\n  };\n\n  /**\n   * 解析 function 的参数列表\n   **/\n  ntils.getFunctionArgumentNames = function (fn) {\n    if (!fn) return [];\n    var src = fn.toString();\n    var parts = src.split(')')[0].split('=>')[0].split('(');\n    return (parts[1] || parts[0]).split(',').map(function (name) {\n      return name.trim();\n    }).filter(function (name) {\n      return name != 'function';\n    });\n  };\n\n  /**\n   * 缩短字符串\n   */\n  ntils.short = function (str, maxLength) {\n    if (!str) return str;\n    maxLength = maxLength || 40;\n    var strLength = str.length;\n    var trimLength = maxLength / 2;\n    return strLength > maxLength ? str.substr(0, trimLength) + '...' + str.substr(strLength - trimLength) : str;\n  };\n\n  /**\n   * 首字母大写\n   */\n  ntils.firstUpper = function (str) {\n    if (this.isNull(str)) return;\n    return str.substring(0, 1).toUpperCase() + str.substring(1);\n  };\n\n  /**\n   * 编码正则字符串\n   */\n  ntils.escapeRegExp = function (str) {\n    return str.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n  };\n\n  /**\n   * 解析字符串为 dom \n   * @param {string} str 字符串\n   * @returns {HTMLNode} 解析后的 DOM \n   */\n  ntils.parseDom = function (str) {\n    this._PDD_ = this._PDD_ || document.createElement('div');\n    this._PDD_.innerHTML = ntils.trim(str);\n    var firstNode = this._PDD_.childNodes[0];\n    //先 clone 一份再通过 innerHTML 清空\n    //否则 IE9 下，清空时会导出返回的 DOM 没有子结点\n    if (firstNode) firstNode = firstNode.cloneNode(true);\n    this._PDD_.innerHTML = '';\n    return firstNode;\n  };\n\n})((typeof exports === 'undefined') ? (window.ntils = {}) : exports);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_ntils@2.1.2@ntils/index.js\n// module id = 1\n// module chunks = 0","const utils = require('ntils');\nconst Class = require('cify');\n\n/**\n * 事件触发器基类\n */\nconst EventEmitter = new Class({\n  $extends: Function,\n\n  /**\n   * 构建一个一个事修的触发器对象\n   * @param {object} target 将代理的目标对象可以省略\n   * @returns {void} 无返回\n   */\n  constructor: function (target) {\n    target = target || this;\n    let emitter = target._emitter_;\n    if (emitter) return emitter;\n    utils.defineFreezeProp(this, '_target_', target);\n    utils.defineFreezeProp(target, '_emitter_', this);\n    this._isNative_ = this._isNativeObject(this._target_);\n    this._listeners_ = this._listeners_ || {};\n    this.on = this.$on = this.$addListener = this.addListener;\n    this.off = this.$off = this.$removeListener = this.removeListener;\n    this.$emit = this.emit;\n  },\n\n  /**\n   * 检查是否原生支持事件\n   * @param {object} obj 对象\n   * @returns {void} 检查结果\n   */\n  _isNativeObject: function (obj) {\n    return obj.addEventListener && obj.removeEventListener && obj.dispatchEvent;\n  },\n\n  /**\n   * 添加一个事件监听函数\n   * @param {string} name 事件名称\n   * @param {function} listener 事件处理函数\n   * @param {capture} capture 是否是捕获阶段事件(只在代理 dom 对象时有效)\n   * @returns {void} 无返回\n   */\n  addListener: function (name, listener, capture) {\n    if (this._isNative_) {\n      this._addNativeEventListener(name, listener, capture);\n    }\n    this._listeners_[name] = this._listeners_[name] || [];\n    this._listeners_[name].push(listener);\n    if (this._listeners_[name].length > EventEmitter._maxListeners) {\n      throw new Error('The `' + name + '` event listener is not more than 10');\n    }\n  },\n\n  /**\n   * 移除「一个/一组/所有」事件监听函数\n   * @param {string} name 事件名称\n   * @param {function} listener 事件处理函数\n   * @param {capture} capture 是否是捕获阶段事件(只在代理 dom 对象时有效)\n   * @returns {void} 无返回\n   */\n  removeListener: function (name, listener, capture) {\n    if (name && listener) {\n      if (this._isNative_) {\n        this._removeNativeEventListener(name, listener, capture);\n      }\n      if (!this._listeners_[name]) return;\n      let index = this._listeners_[name].indexOf(listener);\n      this._listeners_[name].splice(index, 1);\n    } else if (name) {\n      if (this._isNative_ && this._listeners_[name]) {\n        this._listeners_[name].forEach(function (_listener) {\n          this.removeListener(name, _listener, capture);\n        }, this);\n      }\n      delete this._listeners_[name];\n    } else {\n      utils.each(this._listeners_, function (name) {\n        this.removeListener(name, null, capture);\n      }, this);\n      this._listeners_ = {};\n    }\n  },\n\n  /**\n   * 触发自身的一个事件\n   * @param {string} name 事件名称\n   * @param {object} data 传递的对象\n   * @param {string} canBubble 能否冒泡(只在代理 dom 对象时有效)\n   * @param {object} cancelAble 能否取消(只在代理 dom 对象时有效)\n   * @returns {void} 无返回\n   */\n  emit: function (name, data, canBubble, cancelAble) {\n    if (this._isNative_) {\n      return this._emitNativeEvent(name, data, canBubble, cancelAble);\n    }\n    if (!this._listeners_[name]) return;\n    let stopPropagation = false;\n    this._listeners_[name].forEach(function (handler) {\n      let rs = handler.call(this._target_, data);\n      if (rs === false) stopPropagation = true;\n    }, this);\n    return stopPropagation;\n  },\n\n  /**\n   * 添加 DOM 元素事件\n   * @param {string} name 事件名称\n   * @param {function} listener 事件处理函数\n   * @param {capture} capture 是否是捕获阶段事件\n   * @returns {void} 无返回\n   */\n  _addNativeEventListener: function (name, listener, capture) {\n    this._target_.addEventListener(name, listener, capture);\n    //如果存在已注册的自定义 “组合事件”\n    let descriptor = EventEmitter._events[name];\n    if (descriptor) {\n      descriptor.addListener = descriptor.addListener || descriptor.on;\n      descriptor.addListener(this, name, listener, capture);\n    }\n  },\n\n  /**\n   * 移除 DOM 元素事件\n   * @param {string} name 事件名称\n   * @param {function} listener 事件处理函数\n   * @param {capture} capture 是否是捕获阶段事件\n   * @returns {void} 无返回\n   */\n  _removeNativeEventListener: function (name, listener, capture) {\n    this._target_.removeEventListener(name, listener, capture);\n    //如果存在已注册的自定义 “组合事件”\n    let descriptor = EventEmitter._events[name];\n    if (descriptor) {\n      descriptor.removeListener = descriptor.removeListener || descriptor.off;\n      descriptor.removeListener(this, name, listener, capture);\n    }\n  },\n\n  /**\n   * 触发 DOM 元素事件\n   * @param {string} name 事件名称\n   * @param {object} data 传递的对象\n   * @param {string} canBubble 能否冒泡\n   * @param {object} cancelAble 能否取消\n   * @returns {void} 无返回\n   */\n  _emitNativeEvent: function (name, data, canBubble, cancelAble) {\n    let event = document.createEvent('HTMLEvents');\n    event.initEvent(name, canBubble, cancelAble);\n    utils.copy(data, event, ['data']);\n    event.data = data;\n    return this._target_.dispatchEvent(event);\n  }\n\n});\n\n//最多添加多少个 listener\nEventEmitter._maxListeners = 10;\n\n//所有自定义事件\nEventEmitter._events = [];\n\n/**\n * 注册自定义事件(只在代理 dom 对象时有效)\n * @param {object} descriptor 事件定义\n * @returns {void} 无返回\n */\nEventEmitter.register = function (descriptor) {\n  let names = descriptor.name;\n  if (!names) return;\n  if (!utils.isArray(names)) names = names.split(',');\n  names.forEach(function (name) {\n    this._events[name] = descriptor;\n  }, this);\n};\n\nmodule.exports = EventEmitter;\n\n\n// WEBPACK FOOTER //\n// ./src/events/index.js","const utils = require('ntils');\n\nfunction ClassFactory(options) {\n  //处理 options\n  options = options || utils.create(null);\n  options.$name = options.$name || 'Class';\n  options.$extends = options.$extends || ClassFactory;\n  options.$static = options.$static || utils.create(null);\n  //处理父类 prototype\n  var superPrototype = utils.isFunction(options.$extends) ?\n    options.$extends.prototype : options.$extends;\n  //定义新类\n  var Class = function () {\n    //处理 super\n    if (!this.$super) {\n      utils.defineFreezeProp(this, '$super', function () {\n        if (this._super_called_) return this._super_ret_;\n        this._super_called_ = true;\n        if (utils.isFunction(options.$extends)) {\n          this._super_ret_ = options.$extends.apply(this, arguments);\n          //这几行确保可继承于数组\n          if (this._super_ret_) {\n            var proto = utils.getPrototypeOf(this);\n            utils.setPrototypeOf(proto, this._super_ret_);\n          }\n        } else {\n          this._super_ret_ = options.$extends;\n        }\n        return this._super_ret_;\n      });\n      for (var name in superPrototype) {\n        var value = superPrototype[name];\n        if (utils.isFunction(value)) {\n          this.$super[name] = value.bind(this);\n        } else {\n          this.$super[name] = value;\n        }\n      }\n    }\n    //调用构造\n    if (utils.isFunction(options.constructor) &&\n      options.constructor !== Object) {\n      return options.constructor.apply(this, arguments);\n    } else {\n      //如果没有实现 constructor 则调用父类构造\n      this.$super.apply(this, arguments);\n    }\n  };\n  //处理 prototype\n  Class.prototype = utils.create(superPrototype);\n  utils.copy(options, Class.prototype);\n  utils.defineFreezeProp(Class.prototype, '$class', Class);\n  //处理静态成员\n  utils.copy(options.$static, Class);\n  if (utils.isFunction(options.$extends)) {\n    utils.setPrototypeOf(Class, options.$extends);\n  }\n  if (!options.$extends.$extend) {\n    utils.copy(ClassFactory, Class);\n  }\n  utils.defineFreezeProp(Class, '$super', options.$extends);\n  //--\n  return Class;\n}\n\n//定义扩展方法\nClassFactory.$extend = function (options) {\n  options.$extends = this;\n  return new ClassFactory(options);\n};\n\nClassFactory.Class = ClassFactory;\nmodule.exports = ClassFactory;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_cify@2.1.11@cify/index.js\n// module id = 3\n// module chunks = 0","const utils = require('ntils');\n\nconst Scope = function (parent, props) {\n  //新的 scope 因为「继承」了 _observer_ \n  //所以在新 scope 上进行双向绑定时，将将值成功回写\n  //如果有天不须用 utils.cteate 继承法，需要注意 _observer_ \n  //或在新 scope 上 defineProperty 代理 parentScope\n  let scope = utils.create(parent);\n  utils.copy(props, scope);\n  //将 func 绑定到原 scope 上;\n  utils.each(parent, (key, value) => {\n    if (!utils.isFunction(value)) return;\n    scope[key] = value.bind(parent);\n  });\n  return scope;\n};\n\nmodule.exports = Scope;\n\n\n// WEBPACK FOOTER //\n// ./src/template/scope.js","var core = module.exports = { version: '2.5.1' };\nif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_core-js@2.5.1@core-js/library/modules/_core.js\n// module id = 5\n// module chunks = 0","// Thank's IE8 for his funny defineProperty\nmodule.exports = !require('./_fails')(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_core-js@2.5.1@core-js/library/modules/_descriptors.js\n// module id = 6\n// module chunks = 0","// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = require('./_iobject');\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return IObject(defined(it));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_core-js@2.5.1@core-js/library/modules/_to-iobject.js\n// module id = 7\n// module chunks = 0","const Compiler = require('./compiler');\nconst Directive = require('./directive');\nconst Expression = require('./expression');\nconst Template = require('./template');\nconst directives = require('./directives/');\n\nTemplate.Template = Template;\nTemplate.Compiler = Compiler;\nTemplate.Directive = Directive;\nTemplate.directives = directives;\nTemplate.Expression = Expression;\n\nmodule.exports = Template;\n\n\n// WEBPACK FOOTER //\n// ./src/template/index.js","const Class = require('cify');\nconst utils = require('ntils');\n\n/**\n * 表达式类型，将字符串构析为可执行表达式实例\n */\nconst Expression = new Class({\n\n  /**\n   * 通过字符串构造一个表达式实例\n   * @param {string} code 代码字符串\n   * @param {boolean} mix 是否是混合代码\n   * @returns {void} 无返回\n   */\n  constructor: function (code, mix) {\n    this.func = mix ?\n      this._compileMixedCode(code) :\n      this._compileCode(code);\n  },\n\n  /**\n   * 编译普通表达式代码\n   * @param {string} code 代码字符串\n   * @returns {function} 编辑后的函数\n   */\n  _compileCode: function (code) {\n    code = this._escapeEOL(this._wrapCode(code));\n    return this._createFunction(code);\n  },\n\n  /**\n   * 编辑混合的表达式代码\n   * @param {string} code 代码字符串\n   * @returns {function} 编辑后的函数\n   */\n  _compileMixedCode: function (code) {\n    let statements = this._parseMixedCode(code);\n    code = this._escapeEOL(statements.join('+'));\n    return this._createFunction(code);\n  },\n\n  /**\n   * 通过符串代码创建一个可执行函数\n   * @param {string} code 代码字符串\n   * @returns {function} 创建的函数\n   */\n  _createFunction: function (code) {\n    let func = new Function('utils', 'scope', 'with(scope){return ' + code + '}');\n    return func.bind(null, utils);\n  },\n\n  /**\n   * 解析混合代码字符串\n   * @param {string} code 混合代码字符串\n   * @returns {Array} 解析后的「token」列表\n   */\n  _parseMixedCode: function (code) {\n    let index = 0, length = code.length;\n    let token = '', isExpr = false, tokens = [];\n    while (index <= length) {\n      let char = code[index++];\n      let nextChar = code[index];\n      if (utils.isNull(char)) {\n        if (token.length > 0) {\n          tokens.push('\"' + this._escapeCode(token) + '\"');\n        }\n        token = '';\n        isExpr = false;\n      } else if (!isExpr && char + nextChar == '{{') {\n        if (token.length > 0) {\n          tokens.push('\"' + this._escapeCode(token) + '\"');\n        }\n        token = '';\n        isExpr = true;\n        index++;\n      } else if (isExpr && char + nextChar == '}}') {\n        if (token.length > 0) {\n          tokens.push(this._wrapCode(token));\n        }\n        token = '';\n        isExpr = false;\n        index++;\n      } else {\n        token += char;\n      }\n    }\n    return tokens;\n  },\n\n  /**\n   * 转义处理代码字符串\n   * @param {string} code 源字符串\n   * @returns {string} 处理后的字符串\n   */\n  _escapeCode: function (code) {\n    return code.replace(/\"/, '\\\\\"').replace('\\r\\n', '\\\\r\\\\n').replace('\\n', '\\\\n');\n  },\n\n  /**\n   * 转义换行符\n   * @param {string} code 源字符串\n   * @returns {string} 处理后的字符串\n   */\n  _escapeEOL: function (code) {\n    return code.replace(/\\n/gm, '\\\\\\n');\n  },\n\n  /**\n   * 通过闭包和 try/cache 包裹代码\n   * 将模板中错误的代码直接显示在「模板中用到的位置」，更易于定位错误。\n   * @param {string} code 源字符串\n   * @returns {string} 处理后的字符串\n   */\n  _wrapCode: function (code) {\n    return '((function(){try{return (' + code + ')}catch(err){console.error(err);return err;}})())';\n  },\n\n  /**\n   * 通过 scope 对象执行表达式\n   * @param {Object} scope 上下文对象\n   * @returns {Object} 执行结果\n   */\n  execute: function (scope) {\n    if (utils.isNull(scope)) {\n      scope = {};\n    }\n    return this.func.call(scope, scope);\n  }\n\n});\n\nmodule.exports = Expression;\n\n\n// WEBPACK FOOTER //\n// ./src/template/expression.js","const Class = require('cify');\nconst utils = require('ntils');\nconst EventEmitter = require('../events');\n\nconst OBSERVER_PROP_NAME = '_observer_';\nconst CHANGE_EVENT_NAME = 'change';\nconst EVENT_MAX_DISPATCH_LAYER = 10;\nconst IGNORE_REGEXPS = [/^\\_(.*)\\_$/i, /^\\_\\_/i];\n\n/**\n * 对象观察类，可以监控对象变化\n * 目前方案问题:\n *   对于父子关系和事件冒泡，目前方案如果用 delete 删除一个属性，无关真实删除关系，\n *   即便调用 clearReference 也无法再清除关系，子对象的 parents 中会一直有一个引用，当前方案最高效\n * 其它方法一:\n *   将「关系」放入全局数组中，然后将 ob.parents 变成一个「属性」从全局数组件中 filter 出来，\n *   基本和目前方法类似，但是关系在外部存领教，所以 clearReference 可清除。\n * 其它方案二: \n *   构造时添加到全局数组，每一个 observer change 时都让放到全局的 observer 遍历自身的，\n *   检果事件源是不是自已的子对象，如果是则触发自身 change 事件，这样 ob 对象本身没有相关引用\n *   clearReference 时只从全局清除掉就行了，并且 delete 操作也不会影响，但效率稍差。\n * 其它方案三: \n *   给构造函数添加一个 deep 属性，只有 deep 的 ob 对象，才放入到全局数组中，检查时逻辑同方案二\n *   但是因为要检查的对象会少很多，效率会更高一点。\n */\nconst Observer = new Class({\n  $extends: EventEmitter,\n\n  /**\n   * 通过目标对象构造一个观察对象\n   * @param {Object} target 目标对象\n   * @param {Object} options 选项\n   * @returns {void} 无返回\n   */\n  constructor: function (target, options) {\n    if (utils.isNull(target)) {\n      throw new Error('Invalid target');\n    }\n    options = options || {};\n    let observer = target[OBSERVER_PROP_NAME];\n    if (observer) {\n      utils.copy(options, observer.options);\n      //当时一个组件 A 的为组件 B 的 prop 时，A 更新不会触发 B 更新\n      //所在暂注释这里，另一种方法是更新 prop 指令，重写 excute 方法，而不是现在的 update 方法\n      // if (observer.options.root) {\n      //   observer.parents.length = 0;\n      // }\n      observer.apply();\n      return observer;\n    }\n    EventEmitter.call(this);\n    utils.defineFreezeProp(this, 'options', options);\n    utils.defineFreezeProp(this, 'shadow', {});\n    utils.defineFreezeProp(this, 'target', target);\n    utils.defineFreezeProp(this, 'parents', []);\n    utils.defineFreezeProp(target, OBSERVER_PROP_NAME, this);\n    this.apply();\n  },\n\n  /**\n   * 添加一个属性，动态添中的属性，无法被观察，\n   * 但是通过 set 方法添加的属性可能被观察。\n   * @param {string} name 名称\n   * @param {Object} value 值\n   * @returns {void} 无返回\n   */\n  set: function (name, value) {\n    if (utils.isFunction(value) || Observer.isIgnore(name)) {\n      return;\n    }\n    Object.defineProperty(this.target, name, {\n      get: function () {\n        return this[OBSERVER_PROP_NAME].shadow[name];\n      },\n      set: function (value) {\n        let observer = this[OBSERVER_PROP_NAME];\n        let oldValue = observer.shadow[name];\n        if (oldValue === value) return;\n        if (utils.isObject(value)) {\n          let childObserver = new Observer(value);\n          observer.addChild(childObserver, name);\n        }\n        //移除旧值的父引用\n        //如果用 delete 删除属性将无法移除父子引用\n        if (oldValue && oldValue[OBSERVER_PROP_NAME]) {\n          observer.removeChild(oldValue[OBSERVER_PROP_NAME], name);\n        }\n        observer.shadow[name] = value;\n        observer.emitChange({ path: name, value: value });\n      },\n      configurable: true,\n      enumerable: true\n    });\n    this.target[name] = value;\n  },\n\n  /**\n   * 自动应用所有动态添加的属性\n   * @returns {void} 无返回\n   */\n  apply: function () {\n    if (utils.isArray(this.target)) {\n      this._wrapArray(this.target);\n    }\n    let names = this._getPropertyNames(this.target);\n    names.forEach(function (name) {\n      let desc = Object.getOwnPropertyDescriptor(this.target, name);\n      if (!('value' in desc)) return;\n      this.set(name, this.target[name]);\n    }, this);\n  },\n\n  /**\n   * 清除所有父子引用\n   * @returns {void} 无返回\n   */\n  clearReference: function () {\n    utils.each(this.target, function (name, value) {\n      if (utils.isNull(value)) return;\n      let child = value[OBSERVER_PROP_NAME];\n      if (child) this.removeChild(child);\n    }, this);\n  },\n\n  /**\n   * 派发一个事件，事件会向父级对象冒泡\n   * @param {string} eventName 事件名称\n   * @param {Object} event 事件对象\n   * @returns {void} 无返回\n   */\n  dispatch: function (eventName, event) {\n    if (event._src_ === this) return;\n    event._src_ = event._src_ || this;\n    event._layer_ = event._layer_ || 0;\n    if ((event._layer_++) >= EVENT_MAX_DISPATCH_LAYER) return;\n    this.emit(eventName, event);\n    if (!this.parents || this.parents.length < 1) return;\n    this.parents.forEach(function (item) {\n      if (!(item.name in item.parent.target)) {\n        return item.parent.removeChild(this);\n      }\n      let parentEvent = utils.copy(event);\n      parentEvent.path = item.name + '.' + event.path;\n      item.parent.dispatch(eventName, parentEvent);\n    }, this);\n  },\n\n  /**\n   * 添子观察者对象\n   * @param {Object} child 父对象\n   * @param {String} name 属性名\n   * @returns {void} 无返回\n   */\n  addChild: function (child, name) {\n    if (utils.isNull(child) || utils.isNull(name)) {\n      throw new Error('Invalid paramaters');\n    }\n    if (child.options.root) return;\n    child.parents.push({ parent: this, name: name });\n  },\n\n  /**\n   * 移除子对象\n   * @param {Object} child 父对象\n   * @param {String} name 属性名\n   * @returns {void} 无返回\n   */\n  removeChild: function (child, name) {\n    if (utils.isNull(child)) {\n      throw new Error('Invalid paramaters');\n    }\n    let foundIndex = -1;\n    child.parents.forEach(function (item, index) {\n      if (item.parent === this && item.name === name) {\n        foundIndex = index;\n      }\n    }, this);\n    if (foundIndex > -1) {\n      child.parents.splice(foundIndex, 1);\n    }\n  },\n\n  /**\n   * 触发 change 事件\n   * @param {Object} event 事件对象\n   * @returns {void} 无返回\n   */\n  emitChange: function (event) {\n    this.dispatch(CHANGE_EVENT_NAME, event);\n  },\n\n  /**\n   * 获取所有成员名称列表\n   * @returns {Array} 所有成员名称列表\n   */\n  _getPropertyNames: function () {\n    let names = utils.isArray(this.target) ?\n      this.target.map(function (item, index) {\n        return index;\n      }) : Object.keys(this.target);\n    return names.filter(function (name) {\n      return name !== OBSERVER_PROP_NAME;\n    });\n  },\n\n  /**\n   * 包裹数组\n   * @param {array} array 源数组\n   * @returns {array} 处理后的数组\n   */\n  _wrapArray: function (array) {\n    utils.defineFreezeProp(array, 'push', function () {\n      let items = [].slice.call(arguments);\n      items.forEach(function (item) {\n        //这里也会触发对应 index 的 change 事件\n        this[OBSERVER_PROP_NAME].set(array.length, item);\n      }, this);\n      this[OBSERVER_PROP_NAME].emitChange({ path: 'length', value: this.length });\n    });\n    utils.defineFreezeProp(array, 'pop', function () {\n      let item = [].pop.apply(this, arguments);\n      this[OBSERVER_PROP_NAME].emitChange({ path: this.length, value: item });\n      this[OBSERVER_PROP_NAME].emitChange({ path: 'length', value: this.length });\n      return item;\n    });\n    utils.defineFreezeProp(array, 'unshift', function () {\n      let items = [].slice.call(arguments);\n      items.forEach(function (item) {\n        //这里也会触发对应 index 的 change 事件\n        this[OBSERVER_PROP_NAME].set(0, item);\n      }, this);\n      this[OBSERVER_PROP_NAME].emitChange({ path: 'length', value: this.length });\n    });\n    utils.defineFreezeProp(array, 'shift', function () {\n      let item = [].shift.apply(this, arguments);\n      this[OBSERVER_PROP_NAME].emitChange({ path: 0, value: item });\n      this[OBSERVER_PROP_NAME].emitChange({ path: 'length', value: this.length });\n      return item;\n    });\n    utils.defineFreezeProp(array, 'splice', function () {\n      let startIndex = arguments[0];\n      let endIndex = utils.isNull(arguments[1])\n        ? startIndex + arguments[1]\n        : this.length - 1;\n      let items = [].splice.apply(this, arguments);\n      for (let i = startIndex; i <= endIndex; i++) {\n        this[OBSERVER_PROP_NAME].emitChange({ path: i, value: items[i - startIndex] });\n      }\n      this[OBSERVER_PROP_NAME].emitChange({ path: 'length', value: this.length });\n      return items;\n    });\n    utils.defineFreezeProp(array, 'set', function (index, value) {\n      if (index >= this.length) {\n        this[OBSERVER_PROP_NAME].emitChange({ path: 'length', value: this.length });\n      }\n      this[OBSERVER_PROP_NAME].set(index, value);\n    });\n  }\n\n});\n\n/**\n * 观察一个对象\n * @param {Object} target 目标对象\n * @return {Observer} 观察者对象\n */\nObserver.observe = function (target) {\n  return new Observer(target);\n};\n\n/**\n * 检查是不是忽略的属性名\n * @param {string} word 待检查的字符串\n * @returns {void} 无返回\n */\nObserver.isIgnore = function (word) {\n  return IGNORE_REGEXPS.some(re => re.test(word));\n};\n\nmodule.exports = Observer;\n\n\n// WEBPACK FOOTER //\n// ./src/observer/index.js","// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self\n  // eslint-disable-next-line no-new-func\n  : Function('return this')();\nif (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_core-js@2.5.1@core-js/library/modules/_global.js\n// module id = 11\n// module chunks = 0","module.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_core-js@2.5.1@core-js/library/modules/_is-object.js\n// module id = 12\n// module chunks = 0","module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_core-js@2.5.1@core-js/library/modules/_fails.js\n// module id = 13\n// module chunks = 0","module.exports = { \"default\": require(\"core-js/library/fn/object/define-property\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_babel-runtime@6.26.0@babel-runtime/core-js/object/define-property.js\n// module id = 14\n// module chunks = 0","const Class = require('cify');\nconst utils = require('ntils');\n\n/**\n * Watcher 类\n * 通过「计算函数」、「执行函数」可以创建一个 Watcher 实例\n */\nconst Watcher = new Class({\n\n  /**\n   * 通过「计算函数」、「执行函数」构建一个 Watcher 实例\n   * @param {function} calcor 计算函数\n   * @param {function} handler 处理函数\n   * @param {boolean} first 是否自动执行第一次\n   * @returns {void} 无返回\n   */\n  constructor: function (calcor, handler, first) {\n    if (!utils.isFunction(calcor) || !utils.isFunction(handler)) {\n      throw new Error('Invalid parameters');\n    }\n    this.calcor = calcor;\n    this.handler = handler;\n    if (first) this.calc(true);\n  },\n\n  /**\n   * 执行计算\n   * @param {boolean} force 是否强制触发「计算函数」\n   * @returns {Object} 计算后的值\n   */\n  calc: function (force) {\n    let newValue = this.calcor();\n    if (force || !utils.deepEqual(newValue, this.value)) {\n      this.handler(newValue, this.value);\n    }\n    this.value = utils.clone(newValue);\n  }\n\n});\n\nmodule.exports = Watcher;\n\n\n// WEBPACK FOOTER //\n// ./src/watcher/index.js","// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_core-js@2.5.1@core-js/library/modules/_defined.js\n// module id = 16\n// module chunks = 0","var hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_core-js@2.5.1@core-js/library/modules/_has.js\n// module id = 17\n// module chunks = 0","// 7.1.4 ToInteger\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nmodule.exports = function (it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_core-js@2.5.1@core-js/library/modules/_to-integer.js\n// module id = 18\n// module chunks = 0","// most Object methods by ES6 should accept primitives\nvar $export = require('./_export');\nvar core = require('./_core');\nvar fails = require('./_fails');\nmodule.exports = function (KEY, exec) {\n  var fn = (core.Object || {})[KEY] || Object[KEY];\n  var exp = {};\n  exp[KEY] = exec(fn);\n  $export($export.S + $export.F * fails(function () { fn(1); }), 'Object', exp);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_core-js@2.5.1@core-js/library/modules/_object-sap.js\n// module id = 19\n// module chunks = 0","var global = require('./_global');\nvar core = require('./_core');\nvar ctx = require('./_ctx');\nvar hide = require('./_hide');\nvar PROTOTYPE = 'prototype';\n\nvar $export = function (type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var IS_WRAP = type & $export.W;\n  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n  var expProto = exports[PROTOTYPE];\n  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE];\n  var key, own, out;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    if (own && key in exports) continue;\n    // export native or passed\n    out = own ? target[key] : source[key];\n    // prevent global pollution for namespaces\n    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n    // bind timers to global for call from export context\n    : IS_BIND && own ? ctx(out, global)\n    // wrap global constructors for prevent change them in library\n    : IS_WRAP && target[key] == out ? (function (C) {\n      var F = function (a, b, c) {\n        if (this instanceof C) {\n          switch (arguments.length) {\n            case 0: return new C();\n            case 1: return new C(a);\n            case 2: return new C(a, b);\n          } return new C(a, b, c);\n        } return C.apply(this, arguments);\n      };\n      F[PROTOTYPE] = C[PROTOTYPE];\n      return F;\n    // make static versions for prototype methods\n    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%\n    if (IS_PROTO) {\n      (exports.virtual || (exports.virtual = {}))[key] = out;\n      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%\n      if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);\n    }\n  }\n};\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library`\nmodule.exports = $export;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_core-js@2.5.1@core-js/library/modules/_export.js\n// module id = 20\n// module chunks = 0","var anObject = require('./_an-object');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar toPrimitive = require('./_to-primitive');\nvar dP = Object.defineProperty;\n\nexports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return dP(O, P, Attributes);\n  } catch (e) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_core-js@2.5.1@core-js/library/modules/_object-dp.js\n// module id = 21\n// module chunks = 0","module.exports = !require('./_descriptors') && !require('./_fails')(function () {\n  return Object.defineProperty(require('./_dom-create')('div'), 'a', { get: function () { return 7; } }).a != 7;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_core-js@2.5.1@core-js/library/modules/_ie8-dom-define.js\n// module id = 22\n// module chunks = 0","// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = require('./_is-object');\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_core-js@2.5.1@core-js/library/modules/_to-primitive.js\n// module id = 23\n// module chunks = 0","module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_core-js@2.5.1@core-js/library/modules/_property-desc.js\n// module id = 24\n// module chunks = 0","const Class = require('cify');\nconst Directive = require('./directive');\nconst utils = require('ntils');\nconst Expression = require('./expression');\nconst commonDirectives = require('./directives');\n\nconst DEFAULT_PREFIX = 'm';\n\n/**\n * 模板编译器\n * 可以通过指定「前缀」或「指令集」构建实例\n */\nconst Compiler = new Class({\n\n  /**\n   * 构造一个编译器\n   * @param {Object} options 选项\n   * @returns {void} 无返回\n   */\n  constructor: function (options) {\n    options = options || {};\n    this.prefix = options.prefix || DEFAULT_PREFIX;\n    this.elementDirectives = {};\n    this.attributeDirectives = {};\n    this.registerDirectives(commonDirectives);\n    this.registerDirectives(options.directives);\n  },\n\n  /**\n  * 将字符串转成「驼峰」式\n  * @param {string} str 原始字符串\n  * @param {number} mode 1 大驼峰，0 小驼峰\n  * @return {string} 转换后的字符串\n  */\n  toCamelCase: function (str, mode) {\n    if (str) {\n      str = str.replace(/\\-[a-z0-9]/g, $1 => ($1.slice(1).toUpperCase()));\n      str = str.replace(/^[a-z]/i, $1 => {\n        return mode ? $1.toUpperCase() : $1.toLowerCase();\n      });\n    }\n    return str;\n  },\n\n  /**\n   * 将字符串转成分隔形式\n   * @param {string} str 原始字符串\n   * @return {string} 转换后的字符串\n   */\n  toSplitCase: function (str) {\n    if (str) {\n      str = str.replace(/([A-Z])/g, '-$1');\n      if (str[0] == '-') str = str.slice(1);\n    }\n    return str;\n  },\n\n  /**\n   * 添加指令\n   * @param {Object} directives 指令集 \n   * @returns {void} 无返回\n   */\n  registerDirectives: function (directives) {\n    utils.each(directives, function (name, directive) {\n      name = this.toSplitCase(name);\n      let fullName = directive.options.prefix === false ?\n        name : `${this.prefix}:${name}`;\n      if (directive.options.type == Directive.TE) {\n        this.elementDirectives[fullName.toUpperCase()] = directive;\n      } else {\n        this.attributeDirectives[fullName.toLowerCase()] = directive;\n      }\n    }, this);\n  },\n\n  /**\n   * 解析要 attr 指令信息\n   * @param {string} attrName 要解析的名称字符串\n   * @returns {Object} 解析后的对象\n   */\n  _parseAttrInfo: function (attrName) {\n    let parts = attrName.toLowerCase().split(':');\n    let info = {};\n    if (parts.length > 1) {\n      info.name = `${parts[0]}:${parts[1]}`;\n      info.decorates = parts.slice(2).map(item => this.toCamelCase(item));\n    } else {\n      info.name = parts[0];\n      info.decorates = [];\n    }\n    return info;\n  },\n\n  /**\n   * 创建一个指令实例\n   * @param {Directive} Directive 指令类\n   * @param {Object} options 指令构建选项\n   * @returns {Directive} 指令实例\n   */\n  _createDirectiveInstance: function (Directive, options) {\n    options.compiler = this;\n    options.prefix = this.prefix;\n    return new Directive(options);\n  },\n\n  /**\n   * 初始化一个编译完成的 handler\n   * @param {function} handler 编译后的的模板函数\n   * @returns {void} 无返回\n   */\n  _bindHandler: function (handler) {\n    //排序 directives\n    handler.directives = handler.directives.sort(function (a, b) {\n      return b.level - a.level;\n    });\n    //初始化 directives\n    let boundDirectives = [];\n    utils.each(handler.directives, function (index, directive) {\n      directive.index = index;\n      directive.bind();\n      boundDirectives.push(directive);\n      //移除完成绑定的指令对应的 attribute\n      if (directive.remove !== false && directive.attribute) {\n        directive.node.removeAttribute(directive.attribute.name);\n      }\n      //如果遇到一个「终态」指令，停止向下初始化\n      if (directive.final) {\n        return handler.final = true;\n      }\n    }, this);\n    handler.directives = boundDirectives;\n  },\n\n  /**\n   * 编译一个元素本身\n   * @param {function} handler 当前模板函数\n   * @param {HTMLNode} node 当前 HTML 结点\n   * @returns {void} 无返回\n   */\n  _compileElement: function (handler, node) {\n    let ElementDirective = this.elementDirectives[node.nodeName.toUpperCase()];\n    if (!ElementDirective) return;\n    handler.directives.push(this._createDirectiveInstance(ElementDirective, {\n      handler: handler,\n      node: node\n    }));\n  },\n\n  /**\n   * 编译一个元素所有 attributes \n   * @param {function} handler 当前模板函数\n   * @param {HTMLNode} node 当前 HTML 结点\n   * @returns {void} 无返回\n   */\n  _compileAttributes: function (handler, node) {\n    utils.toArray(node.attributes).forEach(function (attribute) {\n      let attrInfo = this._parseAttrInfo(attribute.name);\n      let AttrDirective = this.attributeDirectives[attrInfo.name] ||\n        this.attributeDirectives['*'];\n      if (!AttrDirective) return;\n      let directiveOptions = AttrDirective.options;\n      handler.directives.push(this._createDirectiveInstance(AttrDirective, {\n        handler: handler,\n        node: node,\n        attribute: attribute,\n        expression: directiveOptions.literal ?\n          attribute.value : new Expression(attribute.value, directiveOptions.mixed),\n        decorates: attrInfo.decorates\n      }));\n    }, this);\n  },\n\n  /**\n   * 编译所有子结点\n   * @param {function} handler 当前模板函数\n   * @param {HTMLNode} node 当前 HTML 结点\n   * @returns {void} 无返回\n   */\n  _compileChildren: function (handler, node) {\n    if (handler.final) return;\n    utils.toArray(node.childNodes).forEach(function (childNode) {\n      if (childNode._compiled_) return;\n      let childHandler = this.compile(childNode);\n      childHandler.parent = this;\n      handler.children.push(childHandler);\n    }, this);\n  },\n\n  /**\n   * 编译一个模板\n   * @param {HTMLNode} node 模板根元素\n   * @param {Object} options 选项\n   * @returns {function} 模板函数\n   */\n  compile: function (node, options) {\n    if (!node) {\n      throw new Error('Invalid node for compile');\n    }\n    node._compiled_ = true;\n    options = options || {};\n    //定义编译结果函数\n    let handler = function (scope) {\n      if (utils.isNull(scope)) scope = {};\n      handler.directives.forEach(function (directive) {\n        directive.scope = scope;\n        directive.execute(scope);\n      }, this);\n      handler.children.forEach(function (childHandler) {\n        childHandler(scope);\n      }, this);\n    };\n    //--\n    handler.dispose = function () {\n      handler.directives.forEach(function (directive) {\n        directive.unbind();\n      }, this);\n      handler.children.forEach(function (childHandler) {\n        childHandler.dispose();\n      }, this);\n    };\n    handler.node = node;\n    //定义 children & directives \n    handler.directives = [];\n    handler.children = [];\n    //编译相关指令\n    if (options.element !== false) this._compileElement(handler, node);\n    if (options.attribute !== false) this._compileAttributes(handler, node);\n    this._bindHandler(handler);\n    if (options.children !== false) this._compileChildren(handler, node);\n    //返回编译后函数\n    return handler;\n  }\n\n});\n\nmodule.exports = Compiler;\n\n\n// WEBPACK FOOTER //\n// ./src/template/compiler.js","module.exports = {\n  '#text': require('./text'),\n  'each': require('./each'),\n  'if': require('./if'),\n  'prop': require('./prop'),\n  'attr': require('./attr'),\n  'on': require('./on'),\n  'html': require('./inner-html'),\n  'text': require('./inner-text'),\n  'prevent': require('./prevent'),\n  'id': require('./id'),\n  'cloak': require('./cloak'),\n  'show': require('./show'),\n  'model': require('./model'),\n  'focus': require('./focus'),\n  '*': require('./attribute') //处理所有未知 attr\n};\n\n\n// WEBPACK FOOTER //\n// ./src/template/directives/index.js","const Class = require('cify');\nconst Template = require('../template');\nconst Watcher = require('../watcher');\nconst utils = require('ntils');\nconst EventEmitter = require('../events');\nconst Observer = require('../observer');\nconst ComponentDirective = require('./component-directive');\n\n/**\n * 组件类\n * 用于定义一个新的组件\n * @param {Object} classOpts 类选项\n * @returns {Component} 组件类\n */\nfunction Component(classOpts) {\n\n  //处理组件选项\n  classOpts = classOpts || {};\n\n  //处理「继承」，目前的机制，只能用「合并类选项」\n  let mixes = classOpts.mixes;\n  delete classOpts.mixes;\n  if (mixes && !utils.isArray(mixes)) {\n    mixes = [mixes];\n  } else {\n    mixes = [];\n  }\n  let extendComponent = classOpts.extend || Component;\n  delete classOpts.extend;\n  //extend 会覆盖 mixes 中的同名成员\n  mixes.push(extendComponent);\n  //classOpts 会覆盖 extend 或 mixes 中的同名成员\n  mixes.push(classOpts);\n  let mixedClassOpts = {};\n  mixes.forEach(function (mixItem) {\n    if (mixItem instanceof Component ||\n      mixItem == Component) {\n      mixItem = mixItem.$options || {};\n    }\n    utils.mix(mixedClassOpts, mixItem);\n  });\n  classOpts = mixedClassOpts;\n\n  /**\n   * 定义组件类\n   * 可以通过 new ComponentClass() 创建组件实例\n   */\n  const ComponentClass = new Class({\n    $extends: extendComponent,\n\n    /**\n     * 组件类构造函数\n     * @param {object} instanceOpts 实例选项\n     * @returns {void} 无返回\n     */\n    constructor: function (instanceOpts) {\n      if (this == window) return new this.$class(instanceOpts);\n      EventEmitter.call(this);\n      instanceOpts = instanceOpts || {};\n      //创建组件实例时可以给实例添加成员\n      utils.each(instanceOpts, (key, value) => {\n        if (key in this) return;\n        this[key] = value;\n      });\n      this._onTemplateUpdate_ = this._onTemplateUpdate_.bind(this);\n      this._createdData_(classOpts.data);\n      this._createProperties_(classOpts.properties || classOpts.props);\n      this._createWatches_(classOpts.watches || classOpts.watch);\n      this.$directives = this.$directives || {};\n      this._importDirectives_(classOpts.directives);\n      this.$components = this.$components || {};\n      this._importComponents_(require('./components'));\n      this._importComponents_({\n        'self': ComponentClass\n      });\n      this._importComponents_(classOpts.components);\n      utils.defineFreezeProp(this, '$children', []);\n      if (instanceOpts.parent) this.$setParent(instanceOpts.parent);\n      this.$callHook('init', [instanceOpts]);\n      Observer.observe(this);\n      if (classOpts.element) {\n        this.$mount();\n      } else {\n        this.$compile();\n      }\n    },\n\n    /**\n     * 设定父组件\n     * @param {Object} parent 父组件\n     * @returns {void} 无返回\n     */\n    $setParent: function (parent) {\n      if (this.$parent === parent) return;\n      if (this.$parent) {\n        this.$parent.$removeChild(this);\n      }\n      if (parent) {\n        parent.$addChild(this);\n      }\n    },\n\n    /**\n     * 添加子组件\n     * @param {Object} child 子组件\n     * @returns {void} 无返回\n     */\n    $addChild: function (child) {\n      if (!(child instanceof Component)) return;\n      this.$children.push(child);\n      utils.defineFreezeProp(child, '$parent', this);\n      utils.defineFreezeProp(child, '$root', this.$root || this);\n    },\n\n    /**\n     * 移除子组件\n     * @param {Object} child 子组件\n     * @returns {void} 无返回\n     */\n    $removeChild: function (child) {\n      let index = this.$children.indexOf(child);\n      this.$children.splice(index, 1);\n      utils.defineFreezeProp(child, '$parent', null);\n      //utils.defineFreezeProp(child, '$root', null);\n    },\n\n    /**\n     * 获取根组件, 为了能通过 polyfill 处理 IE8 暂不用这种方式\n     */\n    get $root() {\n      if (this.$parent) {\n        return this.$parent.$root;\n      } else {\n        return this;\n      }\n    },\n\n    /**\n     * 导入用到的子组件类\n     * @param {Object} components 引入的组件\n     * @returns {void} 无返回\n     */\n    _importComponents_: function (components) {\n      utils.each(components, function (name, component) {\n        if (!component) return;\n        this.$components[name] = component;\n        this.$directives[name] = new ComponentDirective({\n          name: name,\n          component: component,\n          parent: this\n        });\n      }, this);\n    },\n\n    /**\n     * 导入一个用到的指令\n     * @param {Object} directives 引入的指令\n     * @returns {void} 无返回\n     */\n    _importDirectives_: function (directives) {\n      utils.each(directives, function (name, directive) {\n        if (!directive) return;\n        this.$directives[name] = directive;\n      }, this);\n    },\n\n    /**\n     * 调用生命周期 hook\n     * @param {string} name 调用的 hook 名称\n     * @param {Array} args 调用 hook 的参数列表\n     * @returns {void} 无反回\n     */\n    $callHook: function (name, args) {\n      let hook = this[`on${utils.firstUpper(name)}`];\n      if (!utils.isFunction(hook)) return;\n      hook.apply(this, args || []);\n      this.$emit(`$${name}`, args);\n    },\n\n    /**\n     * 创建数据对象\n     * @param {Object} data 组件数据对象\n     * @returns {void} 无返回\n     */\n    _createdData_: function (data) {\n      if (utils.isFunction(data)) {\n        this.$data = data.call(this);\n      } else {\n        this.$data = data || {};\n      }\n      utils.each(this.$data, function (name) {\n        Object.defineProperty(this, name, {\n          configurable: true,\n          enumerable: true,\n          get: function () {\n            if (!this.$data) return;\n            return this.$data[name];\n          },\n          set: function (value) {\n            if (!this.$data) return;\n            this.$data[name] = value;\n          }\n        });\n      }, this);\n    },\n\n    /**\n     * 创建组件属性\n     * @param {Object} properties 属性定义对象\n     * @returns {void} 无返回\n     */\n    _createProperties_: function (properties) {\n      this.$properties = {};\n      utils.each(properties, function (name, descriptor) {\n        if (utils.isFunction(descriptor)) {//get 简化写法\n          descriptor = {\n            get: descriptor\n          };\n        } else if (!utils.isObject(descriptor)) { //基本类型\n          descriptor = {\n            value: descriptor\n          };\n        } else { //通过 descriptor 定义 get/set/value\n          //不能直接用 descriptor，\n          //因为为会导到多个组件实例间的影响\n          descriptor = utils.copy(descriptor);\n        }\n        //如果 get/set 都没有，则自动生成\n        let hasGetterOrSetter = !!descriptor.get || !!descriptor.set;\n        if (!hasGetterOrSetter) {\n          descriptor.get = function () {\n            return descriptor.value;\n          };\n          descriptor.set = function (value) {\n            descriptor.value = value;\n          };\n        }\n        //定义为属性\n        Object.defineProperty(this, name, {\n          configurable: true,\n          enumerable: true,\n          get: function () {\n            if (!descriptor.get) {\n              throw new Error('Property `' + name + '` cannot be read');\n            }\n            return descriptor.get.call(this);\n          },\n          set: function (value) {\n            if (!descriptor.set) {\n              throw new Error('Property `' + name + '` cannot be written');\n            }\n            if (descriptor.test && !descriptor.test(value)) {\n              throw new Error('Invalid value `' + value + '` for property `' + name + '`');\n            }\n            descriptor.set.call(this, value);\n            if (this._observer_) {\n              this._observer_.emitChange({\n                path: name,\n                value: value\n              });\n            }\n          }\n        });\n        this.$properties[name] = descriptor;\n      }, this);\n    },\n\n    /**\n     * 创建监控\n     * 为什么用 watches 而不是 watchers 或其它？\n     * 因为，这里仅是「监控配置」并且是「复数」\n     * @param {Object} watches 监控定义对象\n     * @returns {void} 无返回\n     */\n    _createWatches_: function (watches) {\n      this._watchers_ = this._watchers_ || [];\n      utils.each(watches, function (name, handler) {\n        this.$watch(name, handler);\n      }, this);\n    },\n\n    /**\n     * 在模板发生更新时\n     * @returns {void} 无返回\n     */\n    _onTemplateUpdate_: function () {\n      this._watchers_.forEach(function (watcher) {\n        watcher.calc();\n      }, this);\n    },\n\n    /**\n     * 添加一个监控\n     * @param {string|function} path 计算函数或路径\n     * @param {function} handler 处理函数\n     * @returns {void} 无返回\n     */\n    $watch: function (path, handler) {\n      if (!utils.isFunction(handler)) return;\n      let calcer = path;\n      if (!utils.isFunction(path)) {\n        calcer = function () {\n          return utils.getByPath(this, path);\n        };\n      }\n      let watcher = new Watcher(calcer.bind(this), handler.bind(this));\n      this._watchers_.push(watcher);\n      return watcher;\n    },\n\n    /**\n     * 取消一个 watcher 对象\n     * @param {object} watcher 监控对象实例\n     * @returns {void} 无返回\n     */\n    $unWatch: function (watcher) {\n      let index = this._watchers_.findIndex(w => w === watcher);\n      this._watchers_.splice(index, 1);\n    },\n\n    /**\n     * 创建元素\n     * @returns {void} 无返回\n     */\n    _createElement_: function () {\n      if (this._created_) return;\n      this._created_ = true;\n      this.$callHook('create');\n      utils.defineFreezeProp(this, '$element',\n        this.element || ComponentClass.$template.cloneNode(true));\n      if (!this.$element || this.$element.nodeName === '#text') {\n        throw new Error('Invalid component template');\n      }\n      this.$callHook('created');\n    },\n\n    /**\n     * 编译自身模板并完成绑定\n     * @returns {void} 无返回\n     */\n    $compile: function () {\n      if (this._compiled_) return;\n      this._compiled_ = true;\n      this._createElement_();\n      utils.defineFreezeProp(this, '_template_', new Template(this.$element, {\n        directives: this.$directives,\n        root: true\n      }));\n      this._template_.bind(this);\n      this._template_.on('update', this._onTemplateUpdate_);\n      this._template_.on('bind', function () {\n        if (!this.deferReady) this.$callHook('ready');\n      }.bind(this));\n    },\n\n    /**\n     * 向 DOM tree 中挂截组件\n     * @param {HTMLNode} mountNode 挂载点元素\n     * @param {append} append 是否 append 到挂载元素内\n     * @returns {void} 无返回 \n     */\n    $mount: function (mountNode, append) {\n      if (this._mounted_) return;\n      this.$compile();\n      this.$callHook('mount');\n      if (mountNode) {\n        mountNode.$substitute = this.$element;\n        this.$element._mountNode = mountNode;\n        if (append) {\n          mountNode.appendChild(this.$element);\n        } else if (mountNode.parentNode) {\n          mountNode.parentNode.insertBefore(this.$element, mountNode);\n        }\n      }\n      this._mounted_ = true;\n      this._removed_ = false;\n      this.$callHook('mounted');\n    },\n\n    /**\n     * 将组件添加到指定容器元素内\n     * @param {HTMLNode} node 容器元素\n     * @returns {void} 无返回 \n     */\n    $appendTo: function (node) {\n      this.$mount(node, true);\n    },\n\n    /**\n     * 移除组件\n     * @returns {void} 无返回\n     */\n    $remove: function () {\n      if (this._removed_ || !this._mounted_) return;\n      this.$callHook('remove');\n      if (this.$element.parentNode) {\n        this.$element.parentNode.removeChild(this.$element);\n      }\n      this._removed_ = true;\n      this._mounted_ = false;\n      this.$callHook('removed');\n    },\n\n    /**\n     * 触发自身的一个事件并向上冒泡\n     * @param {string} name 事件名称\n     * @param {object} data 传递的对象\n     * @returns {void} 无返回\n     */\n    $dispatch: function (name, data) {\n      let stopPropagation = this.$emit(name, data);\n      if (!stopPropagation && this.$parent) {\n        this.$parent.$dispatch(name, data);\n      }\n    },\n\n    /**\n     * 触发自身的一个事件并向下广播\n     * @param {string} name 事件名称\n     * @param {object} data 传递的对象\n     * @returns {void} 无返回\n     */\n    $broadcast: function (name, data) {\n      let stopPropagation = this.$emit(name, data);\n      if (!stopPropagation && this.$children && this.$children.length > 0) {\n        this.$children.forEach(function (child) {\n          child.$broadcast(name, data);\n        }, this);\n      }\n    },\n\n    /**\n     * 释放组件\n     * @returns {void} 无返回\n     */\n    $dispose: function () {\n      this.$remove();\n      this._emitter_.off();\n      this.$children.forEach(function (child) {\n        child.$dispose();\n      }, this);\n      if (this.$parent) {\n        let index = this.$parent.$children.indexOf(this);\n        this.$parent.$children.splice(index, 1);\n      }\n      this.$callHook('dispose');\n      if (this._compiled_) {\n        this._template_.unbind();\n      }\n      this.$callHook('disposed');\n      for (let key in this) {\n        delete this[key];\n      }\n      ['_observer_', '$element', '$children', '$parent', '_template_']\n        .forEach(function (key) {\n          delete this[key];\n        }, this);\n      utils.setPrototypeOf(this, null);\n    }\n\n  });\n\n  //保存类选项\n  ComponentClass.$options = classOpts;\n  ComponentClass.$template = utils.parseDom(classOpts.template);\n\n  //向 ComponentClass.prototype 上拷贝成员\n  utils.copy(classOpts, ComponentClass.prototype);\n  utils.copy(classOpts.methods, ComponentClass.prototype);\n\n  //使 ComponentClass instanceof Component === true \n  //IE9/10 下为 false，并且动态为 Component.prototype 添加的成员不会在 ComponentClass 上生效\n  utils.setPrototypeOf(ComponentClass, Component.prototype);\n\n  return ComponentClass;\n\n}\n\n//继承自 EventEmitter\nComponent.prototype = utils.create(EventEmitter.prototype);\n\n//组件扩展方法，简单封装 extends\nComponent.extend = function (classOpts) {\n  return new Component(classOpts);\n};\n\n//定义扩展方法\nComponent.prototype.extend = function (classOpts) {\n  classOpts = classOpts || {};\n  classOpts.extend = this;\n  return new Component(classOpts);\n};\n\n//创建实例的方法\nComponent.prototype.create = function (instanceOpts) {\n  return new this(instanceOpts);\n};\n\n//针对包括 element 组件类的启动方法\nComponent.prototype.start = function (instanceOpts) {\n  if (!this.$options || !this.$options.element) {\n    throw new Error('Start method cannot be called');\n  }\n  return this.create(instanceOpts);\n};\n\nmodule.exports = Component;\n\n\n// WEBPACK FOOTER //\n// ./src/component/component.js","module.exports = {\n  View: require('./view')\n};\n\n\n// WEBPACK FOOTER //\n// ./src/component/components/index.js","import info from '$info';\nimport utils from 'ntils';\nimport Class from 'cify';\nimport Watcher from './watcher';\nimport Observer from './observer';\nimport Template from './template';\nimport Component from './component';\nimport EventEmitter from './events';\n\n//持载模板相关对象\nutils.copy(Template, Component);\n\nComponent.version = info.version;\nComponent.Template = Template;\nComponent.Watcher = Watcher;\nComponent.Observer = Observer;\nComponent.EventEmitter = EventEmitter;\nComponent.utils = utils;\nComponent.Class = Class;\n\n//定义安装插件的方法\nComponent.use = function (plugin) {\n  let install = plugin.install || plugin;\n  if (!utils.isFunction(install)) {\n    throw new Error('Invalid Plugin');\n  }\n  return install.call(plugin, this);\n};\n\n//安装内置的路由插件\n//Component.use(Router);\n\nmodule.exports = Component;\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","module.exports = {\"version\":\"3.1.3\"}\n\n\n//////////////////\n// WEBPACK FOOTER\n// /private/var/folders/7d/bf741r6j1psb64d_yd0zn_mh0000gn/T/$info-d78c3edd-0943-6fb6-1220-e0dbaf2aec03.json\n// module id = 31\n// module chunks = 0","module.exports = { \"default\": require(\"core-js/library/fn/object/keys\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_babel-runtime@6.26.0@babel-runtime/core-js/object/keys.js\n// module id = 32\n// module chunks = 0","require('../../modules/es6.object.keys');\nmodule.exports = require('../../modules/_core').Object.keys;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_core-js@2.5.1@core-js/library/fn/object/keys.js\n// module id = 33\n// module chunks = 0","// 19.1.2.14 Object.keys(O)\nvar toObject = require('./_to-object');\nvar $keys = require('./_object-keys');\n\nrequire('./_object-sap')('keys', function () {\n  return function keys(it) {\n    return $keys(toObject(it));\n  };\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_core-js@2.5.1@core-js/library/modules/es6.object.keys.js\n// module id = 34\n// module chunks = 0","// 7.1.13 ToObject(argument)\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return Object(defined(it));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_core-js@2.5.1@core-js/library/modules/_to-object.js\n// module id = 35\n// module chunks = 0","// 19.1.2.14 / 15.2.3.14 Object.keys(O)\nvar $keys = require('./_object-keys-internal');\nvar enumBugKeys = require('./_enum-bug-keys');\n\nmodule.exports = Object.keys || function keys(O) {\n  return $keys(O, enumBugKeys);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_core-js@2.5.1@core-js/library/modules/_object-keys.js\n// module id = 36\n// module chunks = 0","var has = require('./_has');\nvar toIObject = require('./_to-iobject');\nvar arrayIndexOf = require('./_array-includes')(false);\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\n\nmodule.exports = function (object, names) {\n  var O = toIObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (has(O, key = names[i++])) {\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_core-js@2.5.1@core-js/library/modules/_object-keys-internal.js\n// module id = 37\n// module chunks = 0","// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = require('./_cof');\n// eslint-disable-next-line no-prototype-builtins\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_core-js@2.5.1@core-js/library/modules/_iobject.js\n// module id = 38\n// module chunks = 0","var toString = {}.toString;\n\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_core-js@2.5.1@core-js/library/modules/_cof.js\n// module id = 39\n// module chunks = 0","// false -> Array#indexOf\n// true  -> Array#includes\nvar toIObject = require('./_to-iobject');\nvar toLength = require('./_to-length');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nmodule.exports = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {\n      if (O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_core-js@2.5.1@core-js/library/modules/_array-includes.js\n// module id = 40\n// module chunks = 0","// 7.1.15 ToLength\nvar toInteger = require('./_to-integer');\nvar min = Math.min;\nmodule.exports = function (it) {\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_core-js@2.5.1@core-js/library/modules/_to-length.js\n// module id = 41\n// module chunks = 0","var toInteger = require('./_to-integer');\nvar max = Math.max;\nvar min = Math.min;\nmodule.exports = function (index, length) {\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_core-js@2.5.1@core-js/library/modules/_to-absolute-index.js\n// module id = 42\n// module chunks = 0","var shared = require('./_shared')('keys');\nvar uid = require('./_uid');\nmodule.exports = function (key) {\n  return shared[key] || (shared[key] = uid(key));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_core-js@2.5.1@core-js/library/modules/_shared-key.js\n// module id = 43\n// module chunks = 0","var global = require('./_global');\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || (global[SHARED] = {});\nmodule.exports = function (key) {\n  return store[key] || (store[key] = {});\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_core-js@2.5.1@core-js/library/modules/_shared.js\n// module id = 44\n// module chunks = 0","var id = 0;\nvar px = Math.random();\nmodule.exports = function (key) {\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_core-js@2.5.1@core-js/library/modules/_uid.js\n// module id = 45\n// module chunks = 0","// IE 8- don't enum bug keys\nmodule.exports = (\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n).split(',');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_core-js@2.5.1@core-js/library/modules/_enum-bug-keys.js\n// module id = 46\n// module chunks = 0","// optional / simple context binding\nvar aFunction = require('./_a-function');\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_core-js@2.5.1@core-js/library/modules/_ctx.js\n// module id = 47\n// module chunks = 0","module.exports = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_core-js@2.5.1@core-js/library/modules/_a-function.js\n// module id = 48\n// module chunks = 0","var dP = require('./_object-dp');\nvar createDesc = require('./_property-desc');\nmodule.exports = require('./_descriptors') ? function (object, key, value) {\n  return dP.f(object, key, createDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_core-js@2.5.1@core-js/library/modules/_hide.js\n// module id = 49\n// module chunks = 0","var isObject = require('./_is-object');\nmodule.exports = function (it) {\n  if (!isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_core-js@2.5.1@core-js/library/modules/_an-object.js\n// module id = 50\n// module chunks = 0","var isObject = require('./_is-object');\nvar document = require('./_global').document;\n// typeof document.createElement is 'object' in old IE\nvar is = isObject(document) && isObject(document.createElement);\nmodule.exports = function (it) {\n  return is ? document.createElement(it) : {};\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_core-js@2.5.1@core-js/library/modules/_dom-create.js\n// module id = 51\n// module chunks = 0","module.exports = { \"default\": require(\"core-js/library/fn/object/get-own-property-descriptor\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_babel-runtime@6.26.0@babel-runtime/core-js/object/get-own-property-descriptor.js\n// module id = 52\n// module chunks = 0","require('../../modules/es6.object.get-own-property-descriptor');\nvar $Object = require('../../modules/_core').Object;\nmodule.exports = function getOwnPropertyDescriptor(it, key) {\n  return $Object.getOwnPropertyDescriptor(it, key);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_core-js@2.5.1@core-js/library/fn/object/get-own-property-descriptor.js\n// module id = 53\n// module chunks = 0","// 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)\nvar toIObject = require('./_to-iobject');\nvar $getOwnPropertyDescriptor = require('./_object-gopd').f;\n\nrequire('./_object-sap')('getOwnPropertyDescriptor', function () {\n  return function getOwnPropertyDescriptor(it, key) {\n    return $getOwnPropertyDescriptor(toIObject(it), key);\n  };\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_core-js@2.5.1@core-js/library/modules/es6.object.get-own-property-descriptor.js\n// module id = 54\n// module chunks = 0","var pIE = require('./_object-pie');\nvar createDesc = require('./_property-desc');\nvar toIObject = require('./_to-iobject');\nvar toPrimitive = require('./_to-primitive');\nvar has = require('./_has');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nexports.f = require('./_descriptors') ? gOPD : function getOwnPropertyDescriptor(O, P) {\n  O = toIObject(O);\n  P = toPrimitive(P, true);\n  if (IE8_DOM_DEFINE) try {\n    return gOPD(O, P);\n  } catch (e) { /* empty */ }\n  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_core-js@2.5.1@core-js/library/modules/_object-gopd.js\n// module id = 55\n// module chunks = 0","exports.f = {}.propertyIsEnumerable;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_core-js@2.5.1@core-js/library/modules/_object-pie.js\n// module id = 56\n// module chunks = 0","require('../../modules/es6.object.define-property');\nvar $Object = require('../../modules/_core').Object;\nmodule.exports = function defineProperty(it, key, desc) {\n  return $Object.defineProperty(it, key, desc);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_core-js@2.5.1@core-js/library/fn/object/define-property.js\n// module id = 57\n// module chunks = 0","var $export = require('./_export');\n// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)\n$export($export.S + $export.F * !require('./_descriptors'), 'Object', { defineProperty: require('./_object-dp').f });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_core-js@2.5.1@core-js/library/modules/es6.object.define-property.js\n// module id = 58\n// module chunks = 0","const Directive = require('../directive');\nconst Expression = require('../expression');\n\n\nmodule.exports = new Directive({\n  type: Directive.TE,\n  prefix: false,\n\n  /**\n   * 初始化指令\n   * @returns {void} 无返回\n   */\n  bind: function () {\n    this.expr = new Expression(this.node.nodeValue, true);\n    this.node.nodeValue = '';\n  },\n\n  execute: function (scope) {\n    this.scope = scope;\n    let newValue = this.expr.execute(scope);\n    if (this.node.nodeValue !== newValue) {\n      this.node.nodeValue = newValue;\n    }\n  }\n\n});\n\n\n// WEBPACK FOOTER //\n// ./src/template/directives/text.js","const Directive = require('../directive');\nconst utils = require('ntils');\nconst Scope = require('../scope');\n\nmodule.exports = new Directive({\n  level: Directive.LS + 1, //比 if 要高一个权重\n  final: true,\n  literal: true,\n\n  /**\n   * 初始化指令\n   * @returns {void} 无返回\n   */\n  bind: function () {\n    this.mountNode = document.createTextNode('');\n    this.node.parentNode.insertBefore(this.mountNode, this.node);\n    //虽然，bind 完成后，也会进行 attribute 的移除，\n    //但 each 指令必须先移除，否再进行 item 编译时 each 还会生效\n    this.node.removeAttribute(this.attribute.name);\n    this.node.parentNode.removeChild(this.node);\n    this.parseExpr();\n    this.eachItems = {};\n  },\n\n  parseExpr: function () {\n    this.eachType = this.attribute.value.indexOf(' in ') > -1 ? 'in' : 'of';\n    let tokens = this.attribute.value.split(' ' + this.eachType + ' ');\n    let fnText = `with(scope){utils.each(${tokens[1]},fn.bind(this,${tokens[1]}))}`;\n    this.each = new Function('utils', 'scope', 'fn', fnText).bind(null, this.utils);\n    let names = tokens[0].split(',').map(function (name) {\n      return name.trim();\n    });\n    if (this.eachType == 'in') {\n      this.keyName = names[0];\n      this.valueName = names[1];\n    } else {\n      this.keyName = names[1];\n      this.valueName = names[0];\n    }\n  },\n\n  execute: function (scope) {\n    let currentEachKeys = [];\n    let itemsFragment = document.createDocumentFragment();\n    let self = this;\n    this.each(scope, function (eachTarget, key) {\n      //创建新 scope，必须选创建再设置 prototype 或采用定义「属性」的方式\n      //因为指令参数指定的名称有可能和 scope 原有变量冲突\n      //将导致针对 watch 变量的赋值，从引用发循环\n      let newScope = new Scope(this.scope);\n      if (self.keyName) {\n        Object.defineProperty(newScope, self.keyName, {\n          get() { return key; }\n        });\n      }\n      //value 采用「属性」进行代理，否则将会使「双向」绑定无把回设值\n      if (self.valueName) {\n        Object.defineProperty(newScope, self.valueName, {\n          get() { return eachTarget[key]; },\n          set(value) { eachTarget[key] = value; }\n        });\n      }\n      let oldItem = this.eachItems[key];\n      if (oldItem) {\n        oldItem.handler(newScope);\n      } else {\n        let newItem = {};\n        //创建新元素\n        newItem.node = this.node.cloneNode(true);\n        itemsFragment.appendChild(newItem.node);\n        newItem.handler = this.compiler.compile(newItem.node);\n        newItem.handler(newScope);\n        this.eachItems[key] = newItem;\n      }\n      currentEachKeys.push(key);\n    }.bind(this));\n    utils.each(this.eachItems, (key, item) => {\n      if (currentEachKeys.some(k => k == key)) return;\n      if (item.node.parentNode) {\n        item.node.parentNode.removeChild(item.node);\n      }\n      delete this.eachItems[key];\n    }, this);\n    if (itemsFragment.childNodes.length > 0) {\n      this.mountNode.parentNode.insertBefore(itemsFragment, this.mountNode);\n    }\n  }\n\n});\n\n\n// WEBPACK FOOTER //\n// ./src/template/directives/each.js","const Directive = require('../directive');\n\nmodule.exports = new Directive({\n  level: Directive.LS,\n  final: true,\n\n  /**\n   * 初始化指令\n   * @returns {void} 无返回\n   */\n  bind: function () {\n    this.mountNode = document.createTextNode('');\n    this.node.parentNode.insertBefore(this.mountNode, this.node);\n    //虽然，bind 完成后，也会进行 attribute 的移除，\n    //但 if 指令必须先移除，否再进行 item 编译时 if 还会生效\n    this.node.removeAttribute(this.attribute.name);\n    this.node.parentNode.removeChild(this.node);\n  },\n\n  execute: function (scope) {\n    let newValue = this.expression.execute(scope);\n    if (newValue) {\n      //如果新计算的结果为 true 才执行 \n      this._handler = this._handler || this.compiler.compile(this.node);\n      this._handler(scope);\n      let node = this.node.$substitute || this.node;\n      if (!node.parentNode) {\n        this.mountNode.parentNode.insertBefore(node, this.mountNode);\n      }\n    } else {\n      let node = this.node.$substitute || this.node;\n      if (node.parentNode) node.parentNode.removeChild(node);\n    }\n  }\n\n});\n\n\n// WEBPACK FOOTER //\n// ./src/template/directives/if.js","const Directive = require('../directive');\n\nmodule.exports = new Directive({\n  update: function (value) {\n    let target = this.node.$target || this.node;\n    target[this.decorates[0]] = value;\n  }\n  // execute: function (scope) {\n  //   this.scope = scope;\n  //   let newValue = this.expression.execute(scope);\n  //   let target = this.node.$target || this.node;\n  //   target[this.decorates[0]] = newValue;\n  // }\n});\n\n\n// WEBPACK FOOTER //\n// ./src/template/directives/prop.js","const Directive = require('../directive');\n\nmodule.exports = new Directive({\n  update: function (value) {\n    let target = this.node.$target || this.node;\n    if (target.setAttribute) {\n      target.setAttribute(this.decorates[0], value);\n    } else {\n      target[this.decorates[0]] = value;\n    }\n  }\n});\n\n\n// WEBPACK FOOTER //\n// ./src/template/directives/attr.js","const Directive = require('../directive');\nconst EventEmitter = require('../../events');\nconst Scope = require('../scope');\n\nmodule.exports = new Directive({\n  literal: true,\n\n  /**\n   * 初始化指令\n   * @returns {void} 无返回\n   */\n  bind: function () {\n    let attrValue = this.attribute.value || '';\n    if (attrValue.indexOf('(') < 0 && attrValue.indexOf(')') < 0) {\n      attrValue += '($event)';\n    }\n    this.expr = new this.Expression(attrValue);\n    let eventTarget = this.node.$target || this.node;\n    this.emiter = new EventEmitter(eventTarget);\n    this.emiter.addListener(this.decorates[0], function (event) {\n      if (this.utils.isNull(this.scope)) return;\n      this.expr.execute(new Scope(this.scope, {\n        $event: event\n      }));\n    }.bind(this), false);\n  },\n\n  unbind: function () {\n    this.emiter.removeListener();\n  },\n\n  execute: function (scope) {\n    this.scope = scope;\n  }\n\n});\n\n\n// WEBPACK FOOTER //\n// ./src/template/directives/on.js","const Directive = require('../directive');\n\nmodule.exports = new Directive({\n  update: function (newValue) {\n    this.node.innerHTML = newValue;\n  }\n});\n\n\n// WEBPACK FOOTER //\n// ./src/template/directives/inner-html.js","const Directive = require('../directive');\n\nmodule.exports = new Directive({\n  update: function (newValue) {\n    this.node.innerText = newValue;\n  }\n});\n\n\n// WEBPACK FOOTER //\n// ./src/template/directives/inner-text.js","const Directive = require('../directive');\n\nmodule.exports = new Directive({\n  level: Directive.LP,\n  final: true\n});\n\n\n// WEBPACK FOOTER //\n// ./src/template/directives/prevent.js","const Directive = require('../directive');\n\nmodule.exports = new Directive({\n  literal: true,\n\n  update: function (id) {\n    if (id in this.scope) {\n      throw new Error('Conflicting component id `' + id + '`');\n    }\n    this.scope[id] = this.node.$target || this.node;\n  }\n\n});\n\n\n// WEBPACK FOOTER //\n// ./src/template/directives/id.js","const Directive = require('../directive');\n\nmodule.exports = new Directive({\n  level: Directive.LC,\n  literal: true,\n  prefix: false,\n\n  bind: function () {\n    this.node.removeAttribute(this.attribute.name);\n  }\n\n});\n\n\n// WEBPACK FOOTER //\n// ./src/template/directives/cloak.js","const Directive = require('../directive');\n\nmodule.exports = new Directive({\n  update: function (value) {\n    this.node.style.display = value ? '' : 'none';\n  }\n});\n\n\n// WEBPACK FOOTER //\n// ./src/template/directives/show.js","const SelectDirective = require('./select');\nconst EditableDirective = require('./editable');\nconst InputDirective = require('./input');\nconst RadioDirective = require('./radio');\nconst CheckboxDirective = require('./checkbox');\nconst PropDirective = require('./prop');\n\nconst Directive = function (options) {\n  let node = options.node;\n  let tagName = node.tagName;\n  if (options.decorates[0]) {\n    return new PropDirective(options);\n  } else if (tagName == 'INPUT') {\n    let type = node.getAttribute('type');\n    if (type == 'radio') {\n      return new RadioDirective(options);\n    } else if (type == 'checkbox') {\n      return new CheckboxDirective(options);\n    } else {\n      return new InputDirective(options);\n    }\n  } else if (tagName == 'TEXTAREA') {\n    return new InputDirective(options);\n  } else if (tagName == 'SELECT') {\n    return new SelectDirective(options);\n  } else if (node.isContentEditable) {\n    return new EditableDirective(options);\n  } else {\n    throw new Error(`Directive \\`model\\` cannot be used on \\`${tagName}\\``);\n  }\n};\n\n//手动添加 classOptions\nDirective.options = {\n  level: Directive.LA\n};\n\nmodule.exports = Directive;\n\n\n// WEBPACK FOOTER //\n// ./src/template/directives/model/index.js","const Directive = require('../../directive');\nconst EventEmitter = require('../../../events');\nconst Scope = require('../../scope');\n\nmodule.exports = new Directive({\n  final: true,\n\n  /**\n   * 初始化指令\n   * @returns {void} 无返回\n   */\n  bind: function () {\n    this.backExpr = new this.Expression(`${this.attribute.value}=_value_`);\n    this.node.removeAttribute(this.attribute.name);\n    this._handler = this.compiler.compile(this.node);\n    this.emiter = new EventEmitter(this.node);\n    this.emiter.addListener('change', function () {\n      if (this.utils.isNull(this.scope)) return;\n      let selectedOptions = this.node.selectedOptions;\n      let value = this.node.multiple\n        ? [].slice.call(selectedOptions).map(function (option) {\n          return option.value;\n        }, this)\n        : selectedOptions[0].value;\n      this.backExpr.execute(new Scope(this.scope, {\n        _value_: value\n      }));\n    }.bind(this), false);\n  },\n\n  unbind: function () {\n    this.emiter.removeListener();\n  },\n\n  execute: function (scope) {\n    this.scope = scope;\n    this._handler(scope);\n    let value = this.expression.execute(scope);\n    if (!this.utils.isArray(value)) value = [value];\n    [].slice.call(this.node.options).forEach(function (option) {\n      option.selected = value.indexOf(option.value) > -1;\n    }, this);\n  }\n\n});\n\n\n// WEBPACK FOOTER //\n// ./src/template/directives/model/select.js","const Directive = require('../../directive');\nconst EventEmitter = require('../../../events');\nconst Scope = require('../../scope');\n\nmodule.exports = new Directive({\n\n  /**\n   * 初始化指令\n   * @returns {void} 无返回\n   */\n  bind: function () {\n    this.backExpr = new this.Expression(`${this.attribute.value}=_value_`);\n    this.emiter = new EventEmitter(this.node);\n    this.emiter.addListener('input', function () {\n      if (this.utils.isNull(this.scope)) return;\n      this.backExpr.execute(new Scope(this.scope, {\n        _value_: this.node.innerHTML\n      }));\n    }.bind(this), false);\n  },\n\n  unbind: function () {\n    this.emiter.removeListener();\n  },\n\n  execute: function (scope) {\n    let value = this.expression.execute(scope);\n    if (this.node.innerHTML !== value) {\n      this.node.innerHTML = value;\n    }\n  }\n\n});\n\n\n// WEBPACK FOOTER //\n// ./src/template/directives/model/editable.js","const Directive = require('../../directive');\nconst EventEmitter = require('../../../events');\nconst Scope = require('../../scope');\n\nmodule.exports = new Directive({\n\n  /**\n   * 初始化指令\n   * @returns {void} 无返回\n   */\n  bind: function () {\n    this.backExpr = new this.Expression(`${this.attribute.value}=_value_`);\n    this.emiter = new EventEmitter(this.node);\n    this.emiter.addListener('input', function () {\n      if (this.utils.isNull(this.scope)) return;\n      this.backExpr.execute(new Scope(this.scope, {\n        _value_: this.node.value\n      }));\n    }.bind(this), false);\n  },\n\n  unbind: function () {\n    this.emiter.removeListener();\n  },\n\n  execute: function (scope) {\n    let value = this.expression.execute(scope);\n    if (this.node.value !== value) {\n      this.node.value = value;\n    }\n  }\n\n});\n\n\n// WEBPACK FOOTER //\n// ./src/template/directives/model/input.js","const Directive = require('../../directive');\nconst EventEmitter = require('../../../events');\nconst Scope = require('../../scope');\n\nmodule.exports = new Directive({\n  /**\n   * 初始化指令\n   * @returns {void} 无返回\n   */\n  bind: function () {\n    this.backExpr = new this.Expression(`${this.attribute.value}=_value_`);\n    this.emiter = new EventEmitter(this.node);\n    this.emiter.addListener('change', function () {\n      if (this.utils.isNull(this.scope)) return;\n      this.backExpr.execute(new Scope(this.scope, {\n        _value_: this.node.value\n      }));\n    }.bind(this), false);\n  },\n\n  unbind: function () {\n    this.emiter.removeListener();\n  },\n\n  execute: function (scope) {\n    this.scope = scope;\n    let value = this.expression.execute(scope);\n    this.node.checked = value == this.node.value;\n  }\n\n});\n\n\n// WEBPACK FOOTER //\n// ./src/template/directives/model/radio.js","const Directive = require('../../directive');\nconst EventEmitter = require('../../../events');\nconst Scope = require('../../scope');\n\nmodule.exports = new Directive({\n\n  /**\n   * 初始化指令\n   * @returns {void} 无返回\n   */\n  bind: function () {\n    this.backExpr = new this.Expression(`${this.attribute.value}=_value_`);\n    this.emiter = new EventEmitter(this.node);\n    this.emiter.addListener('change', function () {\n      if (this.utils.isNull(this.scope)) return;\n      let value = this.expression.execute(this.scope);\n      if (this.utils.isArray(value) && this.node.checked) {\n        value.push(this.node.value);\n      } else if (this.utils.isArray(value) && !this.node.checked) {\n        let index = value.indexOf(this.node.value);\n        value.splice(index, 1);\n      } else {\n        this.backExpr.execute(new Scope(this.scope, {\n          _value_: this.node.checked\n        }));\n      }\n    }.bind(this), false);\n  },\n\n  unbind: function () {\n    this.emiter.removeListener();\n  },\n\n  execute: function (scope) {\n    this.scope = scope;\n    let value = this.expression.execute(scope);\n    if (this.utils.isArray(value)) {\n      this.node.checked = value.indexOf(this.node.value) > -1;\n    } else {\n      this.node.checked = value;\n    }\n  }\n\n});\n\n\n// WEBPACK FOOTER //\n// ./src/template/directives/model/checkbox.js","const Directive = require('../../directive');\nconst Scope = require('../../scope');\n\nmodule.exports = new Directive({\n\n  /**\n   * 初始化指令\n   * @returns {void} 无返回\n   */\n  bind: function () {\n    this.target = this.node.$target;\n    this.backExpr = new this.Expression(`${this.attribute.value}=_value_`);\n    this.bindProp = this.decorates[0];\n    if (!this.target) {\n      throw new Error(`Directive \\`model:${this.bindProp}\\` cannot be used on \\`${this.node.tagName}\\``);\n    }\n    this.watcher = this.target.$watch(this.bindProp, (value) => {\n      if (this.utils.isNull(this.scope)) return;\n      this.backExpr.execute(new Scope(this.scope, {\n        _value_: value\n      }));\n    });\n  },\n\n  unbind: function () {\n    this.target.$unWatch(this.watcher);\n  },\n\n  update: function (value) {\n    this.target[this.bindProp] = value;\n  }\n\n});\n\n\n// WEBPACK FOOTER //\n// ./src/template/directives/model/prop.js","const Directive = require('../directive');\n\nmodule.exports = new Directive({\n  execute: function (scope) {\n    let state = this.expression.execute(scope);\n    setTimeout(() => {\n      if (state) this.node.focus();\n      else this.node.blur();\n    }, 0);\n  }\n});\n\n\n// WEBPACK FOOTER //\n// ./src/template/directives/focus.js","const Directive = require('../directive');\n\n/**\n * 通用的 attribute 指令\n * 用于所有 attribute 的处理\n * 例如:\n *  <div attr1=\"{{expr1}}\" {{expr2}} {{attr3}}=\"{{expr3}}\">\n *  </div>\n */\nmodule.exports = new Directive({\n  level: Directive.LA,\n  prefix: false,\n  literal: true,\n  remove: false,\n\n  /**\n   * 初始化指令\n   * @returns {void} 无返回\n   */\n  bind: function () {\n    this.computedName = this.attribute.name;\n    this.computedValue = this.attribute.value;\n    this.nameExpr = new this.Expression(this.attribute.name, true);\n    this.valueExpr = new this.Expression(this.attribute.value, true);\n  },\n\n  execute: function (scope) {\n    let target = this.node.$target || this.node;\n    let newComputedName = this.nameExpr.execute(scope);\n    if (this.computedName !== newComputedName) {\n      //移除旧名称\n      if (target.removeAttribute) {\n        target.removeAttribute(this.computedName);\n      }\n      //设置新名称\n      this.computedName = newComputedName;\n      if (!this.utils.isNull(this.computedName) && this.computedName.length > 0) {\n        if (target.setAttribute) {\n          target.setAttribute(this.computedName, this.computedValue || '');\n        }\n      }\n    }\n    let newComputeValue = this.valueExpr.execute(scope);\n    if (this.computedValue !== newComputeValue) {\n      this.computedValue = newComputeValue;\n      if (target.setAttribute) {\n        target.setAttribute(this.computedName, this.computedValue || '');\n      } else {\n        target[this.computedName] = this.computedValue;\n      }\n    }\n  }\n\n});\n\n\n// WEBPACK FOOTER //\n// ./src/template/directives/attribute.js","const Class = require('cify');\nconst Observer = require('../observer');\nconst EventEmitter = require('../events');\nconst Compiler = require('./compiler');\n\n/**\n * 模板类\n * 可能通过 element 作为参数，创建一个模板实例\n */\nconst Template = new Class({\n\n  $extends: EventEmitter,\n\n  /**\n   * 构建一个模板板实例\n   * @param {HTMLNode} element HTML 元素\n   * @param {Object} options 选项\n   * @returns {void} 无返回\n   */\n  constructor: function (element, options) {\n    options = options || {};\n    EventEmitter.call(this);\n    this.options = options;\n    this.element = element;\n    this.compiler = options.compiler || new Compiler(options);\n    this.render = this.compiler.compile(this.element);\n    this.update = this.update.bind(this);\n    this._update = this._update.bind(this);\n    this._updateTimer = 0;\n  },\n\n  /**\n   * 更新当前模板 (会过滤不必要的更新)\n   * @returns {void} 无返回\n   */\n  update: function () {\n    if (this._updateTimer) {\n      clearTimeout(this._updateTimer);\n      this._updateTimer = null;\n    }\n    this._updateTimer = setTimeout(this._update, 0);\n  },\n\n  /**\n   * 更新当前模板内部方法 \n   * @returns {void} 无返回\n   */\n  _update: function () {\n    if (!this._updateTimer || !this.observer) return;\n    this.emit('update', this);\n    this.render(this.observer.target);\n    this._onBind();\n  },\n\n  /**\n   * 在绑定成功时\n   * @returns {void} 无返回\n   */\n  _onBind: function () {\n    if (this._bound) return;\n    this._bound = true;\n    this.emit('bind', this);\n  },\n\n  /**\n   * 将模板绑定到一个 scope\n   * @param {Object} scope 绑定的上下文对象\n   * @param {boolean} disableFirst 是否禁用第一次的自动渲染\n   * @returns {void} 无返回\n   */\n  bind: function (scope, disableFirst) {\n    if (!scope) return;\n    this.unbind();\n    this.observer = new Observer(scope, {\n      root: this.options.root\n    });\n    scope.$self = scope;\n    this.observer.on('change', this.update);\n    if (disableFirst) {\n      this._onBind();\n    } else {\n      this.update();\n    }\n  },\n\n  /**\n   * 解绑定\n   * @returns {void} 无返回\n   */\n  unbind: function () {\n    if (!this.observer) return;\n    this.observer.removeListener('change', this.update);\n    this.observer.clearReference();\n    this.observer = null;\n  },\n\n  /**\n   * 释放\n   * @returns {void} 无返回\n   */\n  dispose: function () {\n    this.unbind();\n    this.render.dispose();\n  }\n\n});\n\nmodule.exports = Template;\n\n\n// WEBPACK FOOTER //\n// ./src/template/template.js","const Component = require('./component');\nconst components = require('./components');\nconst directives = require('../template').directives;\n\nComponent.components = components;\nComponent.Component = Component;\n\nComponent.component = function (name, component) {\n  if (!component) return components[name];\n  components[name] = component;\n};\n\nComponent.directive = function (name, directive) {\n  if (!directive) return directives[name];\n  directives[name] = directive;\n};\n\nmodule.exports = Component;\n\n\n// WEBPACK FOOTER //\n// ./src/component/index.js","const Template = require('../template');\nconst Directive = Template.Directive;\n\n/**\n * 创建一个组件指令\n * @param {object} options 选项\n * @returns {object} 组件指令\n */\nfunction ComponentDirective(options) {\n\n  return new Directive({\n    type: Directive.TE,\n    literal: true,\n    final: true,\n    level: Directive.LE,\n\n    bind: function () {\n      this.component = new options.component({\n        deferReady: true,\n        parent: options.parent || this.scope\n      });\n      this.handleAttrs();\n      this.node.$target = this.component;\n      this.handler = this.compiler.compile(this.node, {\n        element: false,\n        children: false\n      });\n      this.handleContents();\n      this.component.$mount(this.node);\n      if (this.node.parentNode) {\n        this.node.parentNode.removeChild(this.node);\n      }\n    },\n\n    handleAttrs: function () {\n      this.attrs = [].slice.call(this.node.attributes);\n      let directiveRegexp = new RegExp('^' + this.prefix + ':', 'i');\n      this.attrs.forEach(function (attr) {\n        if (directiveRegexp.test(attr.name)) return;\n        if (attr.name in this.component.$properties) return;\n        this.component.$element.setAttribute(attr.name, attr.value);\n        this.node.removeAttribute(attr.name);\n      }, this);\n    },\n\n    handleContents: function () {\n      this.placeHandlers = [];\n      let places = [].slice.call(\n        this.component.$element.querySelectorAll('[' + this.prefix + '\\\\:content]')\n      );\n      places.forEach(function (place) {\n        //将内容插入到指定的「位置」\n        let contents = null;\n        let selector = place.getAttribute(this.prefix + ':content');\n        if (!selector) {\n          contents = [].slice.call(this.node.childNodes);\n        } else {\n          contents = [].slice.call(this.node.querySelectorAll(selector));\n        }\n        if (!contents || contents.length < 1) return;\n        place.innerHTML = '';\n        contents.forEach(function (content) {\n          place.appendChild(content.cloneNode(true));\n        }, this);\n        //编译插入后的子「内容模板」\n        let handler = this.compiler.compile(place);\n        this.placeHandlers.push(handler);\n      }, this);\n    },\n\n    execute: function (scope) {\n      this.handler(scope);\n      if (!this._ready_) {\n        this._ready_ = true;\n        this.component.$callHook('ready');\n      }\n      this.placeHandlers.forEach(function (handler) {\n        handler(scope);\n      }, this);\n    }\n\n  });\n}\n\nmodule.exports = ComponentDirective;\n\n\n// WEBPACK FOOTER //\n// ./src/component/component-directive.js","const Component = require('../component');\nconst utils = require('ntils');\n\n/**\n * 内置视图组件\n * 可以加载并显示其它组件，并可以指定「转场效果」\n */\nconst View = new Component({\n\n  template: '<div></div>',\n\n  properties: {\n\n    /**\n     * 显示到视图中的组件\n     */\n    component: {\n      test: function (value) {\n        if (!value) return false;\n        return value instanceof Component || utils.isString(value);\n      },\n      set: function (component) {\n        if (this._transitioning) return;\n        this._transitioning = true;\n        //如果 value 是字符串则尝试从 $parent.components 中获取组件类 \n        if (utils.isString(component)) {\n          if (this.$parent && this.$parent.$components) {\n            this.component = this.$parent.$components[component];\n          } else {\n            this.component = null;\n          }\n          return;\n        }\n        //声明新旧组件变量\n        let newComponentInstance = null;\n        let oldComponentInstance = this.componentInstance;\n        //创建新组件实例\n        if (utils.isFunction(component)) {\n          newComponentInstance = new component({\n            parent: this\n          });\n        } else {\n          component.$setParent(this);\n          newComponentInstance = component;\n        }\n        //通过转场控制器进行转场准备\n        this.transition.prep(newComponentInstance, oldComponentInstance);\n        //挂载新组件实例\n        newComponentInstance.$appendTo(this.$element);\n        //通过转场控制器进行转场\n        this.transition.go(newComponentInstance, oldComponentInstance, function () {\n          //触发相关事件\n          this.$emit('enter', newComponentInstance);\n          this.$emit('leave', oldComponentInstance);\n          //销毁旧组件实例\n          if (oldComponentInstance) {\n            oldComponentInstance.$dispose();\n          }\n          this._transitioning = false;\n        }.bind(this));\n        //暂存当前组件实例\n        this.componentInstance = newComponentInstance;\n      },\n      get: function () {\n        return this._Component;\n      }\n    },\n\n    /**\n     * 视图的转场控制对象\n     */\n    transition: {\n      get: function () {\n        return this._transition || View.transition;\n      },\n      set: function (transition) {\n        if (this._transitioning) return;\n        if (!transition || (\n          utils.isFunction(transition.prep) &&\n          utils.isFunction(transition.go)\n        )) {\n          if (this._transition && utils.isFunction(this._transition.clean)) {\n            this._transition.clean(this);\n          }\n          if (transition && utils.isFunction(transition.init)) {\n            transition.init(this);\n          }\n          this._transition = transition;\n        } else {\n          throw new Error('Invalid transition');\n        }\n      }\n    }\n  },\n\n  /**\n   * 切换到指定的组件\n   * @param {Component} component 组件\n   * @param {transition} transition 转场控制组件\n   * @returns {void} 无返回\n   */\n  switchTo: function (component, transition) {\n    if (transition) {\n      this.transition = transition;\n    }\n    this.component = component;\n  }\n\n});\n\n/**\n * 默认转场设置\n */\nView.transition = {\n  //init: function () { },\n  //clean: function () { },\n\n  /**\n   * 转场开始前的准备\n   * @param {Component} newComponent 新组件\n   * @param {Component} oldComponent 旧组件\n   * @returns {void} 无返回\n   */\n  prep: function (newComponent, oldComponent) {\n    if (oldComponent) oldComponent.$element.style.display = 'none';\n  },\n\n  /**\n   * 执行转场动画\n   * @param {Component} newComponent 新组件\n   * @param {Component} oldComponent 旧组件\n   * @param {Function} done 完成后的回调\n   * @returns {void} 无返回\n   */\n  go: function (newComponent, oldComponent, done) {\n    done();\n  }\n};\n\nmodule.exports = View;\n\n\n// WEBPACK FOOTER //\n// ./src/component/components/view.js"],"sourceRoot":""}